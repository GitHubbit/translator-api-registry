openapi: 3.0.0
info:
  contact:
    email: help@myvariant.info
    name: Chunlei Wu
    x-id: https://github.com/newgene
    x-role: responsible developer
  description: Documentation of the MyVariant.info Variant Query web services. Learn
    more about [MyVariant.info](http://myvariant.info/)
  termsOfService: http://myvariant.info/terms/
  title: MyVariant.info API
  version: '1.0'
  x-translator:
    infores: "infores:myvariant-info"
    component: KP
    team:
      - Service Provider
    biolink-version: "2.2.8"
servers:
- description: Encrypted Production server
  url: https://myvariant.info/v1
- description: Production server
  url: http://myvariant.info/v1
tags:
- name: variant
- name: query
- name: metadata
- name: translator
- name: biothings
paths:
  "/metadata":
    get:
      parameters:
      - "$ref": "#/components/parameters/callback"
        in: query
        name: callback
      responses:
        '200':
          description: MyVariant.info metadata object
      summary: Get metadata about the data available from MyVariant.info.
      tags:
      - metadata
  "/metadata/fields":
    get:
      parameters:
      - description: Pass a search term to filter the available fields, e.g. "search=clinvar".
        in: query
        name: search
        schema:
          type: string
      - description: Pass a prefix string to filter the available fields, e.g. "prefix=refseq".
        in: query
        name: prefix
        schema:
          type: string
      - "$ref": "#/components/parameters/callback"
        in: query
        name: callback
      responses:
        '200':
          description: MyVariant.info metadata fields object
      summary: Get metadata about the data fields available from MyVariant.info.
      tags:
      - metadata
  "/query":
    get:
      parameters:
      - description: Query string. Examples "rs752396467", "possibly_damaging", "CDK7".
          The detailed query syntax can be found from our [docs](http://docs.myvariant.info/en/latest/doc/variant_query_service.html).
        example: CDK7
        in: query
        name: q
        required: true
        schema:
          type: string
      - '1': query
        "$ref": "#/components/parameters/fields"
        name: fields
      - "$ref": "#/components/parameters/size"
        in: query
        name: size
      - "$ref": "#/components/parameters/from"
        in: query
        name: from
      - "$ref": "#/components/parameters/sort"
        in: query
        name: sort
      - description: a single field or comma-separated fields to return facets, for
          example, "facets=clinvar.gene.id", "facets=clinvar.gene.id,dbnsfp.uniprot.acc".
        in: query
        name: facets
        schema:
          type: string
      - "$ref": "#/components/parameters/callback"
        in: query
        name: callback
      - "$ref": "#/components/parameters/dotfield"
        in: query
        name: dotfield
      - "$ref": "#/components/parameters/email"
        in: query
        name: email
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/QueryResult"
          description: A query response object with "hits" property
        '400':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorResult"
          description: A response indicating an improperly formatted query
      summary: Make variant query and return matching variant list. Support JSONP
        and CORS as well.
      tags:
      - query
    post:
      parameters:
      - "$ref": "#/components/parameters/fields"
        in: query
        name: fields
      - "$ref": "#/components/parameters/dotfield"
        in: query
        name: dotfield
      - "$ref": "#/components/parameters/email"
        in: query
        name: email
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                q:
                  description: multiple query terms seperated by comma (also support
                    "+" or white space), but no wildcard, e.g., "q=rs58991260,rs2500"
                    or "q=rs58991260+rs2500"
                  type: string
                scopes:
                  description: 'Specify one or more fields (separated by comma) as
                    the search "scopes", e.g., "scopes=dbsnp.rsid". The available
                    "fields" that can be passed to "scopes" parameter are listed [here](http://docs.myvariant.info/en/latest/doc/data.html#available-fields).
                    Default: "scopes=_id" (HGVS id).'
                  type: string
              required:
              - q
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/QueryPOSTResult"
          description: Query response objects with "hits" property
        '400':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/ErrorResult"
          description: A response indicating an improperly formatted query
      summary: Make variant batch query and return matching variant hits
      tags:
      - query
      x-bte-kgs-operations:
      - "$ref": "#/components/x-bte-kgs-operations/civic-geneDisease"
      - "$ref": "#/components/x-bte-kgs-operations/civic-geneDisease-rev"
      - "$ref": "#/components/x-bte-kgs-operations/civic-variantDisease"
      - "$ref": "#/components/x-bte-kgs-operations/civic-variantDisease-rev"
      - "$ref": "#/components/x-bte-kgs-operations/dbsnp-variantGene"
      - "$ref": "#/components/x-bte-kgs-operations/dbsnp-variantGene-rev"
      - "$ref": "#/components/x-bte-kgs-operations/clinvar-variantGene"
      - "$ref": "#/components/x-bte-kgs-operations/clinvar-variantGene-rev"
      - "$ref": "#/components/x-bte-kgs-operations/clinvar-geneDisease"
      - "$ref": "#/components/x-bte-kgs-operations/clinvar-geneDisease-rev"
      - "$ref": "#/components/x-bte-kgs-operations/clinvar-variantDisease"
      - "$ref": "#/components/x-bte-kgs-operations/clinvar-variantDisease-rev"
      - "$ref": "#/components/x-bte-kgs-operations/docm-geneDisease"
      - "$ref": "#/components/x-bte-kgs-operations/docm-geneDisease-rev"
      - "$ref": "#/components/x-bte-kgs-operations/docm-variantDisease"
      - "$ref": "#/components/x-bte-kgs-operations/docm-variantDisease-rev"
  "/variant":
    post:
      parameters:
      - "$ref": "#/components/parameters/fields"
        in: query
        name: fields
      - "$ref": "#/components/parameters/dotfield"
        in: query
        name: dotfield
      - "$ref": "#/components/parameters/email"
        in: query
        name: email
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                ids:
                  description: multiple variant ids seperated by comma, e.g., "ids=chr6:g.152708291G>A,chr1:g.35367G>A"
                    or "ids=rs5882,rs12190874". Note that currently we only take the
                    input ids up to 1000 maximum, the rest will be omitted.
                  type: string
              required:
              - ids
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  "$ref": "#/components/schemas/Variant"
                type: array
          description: a list of matching variant objects
      summary: For a list of variant ids, return the matching variant objects
      tags:
      - variant
  "/variant/{variantid}":
    get:
      parameters:
      - description: HGVS or rsid, e.g., chr6:g.152708291G>A, rs12190874
        example: chr6:g.152708291G>A
        in: path
        name: variantid
        required: true
        schema:
          type: string
      - "$ref": "#/components/parameters/fields"
        in: query
        name: fields
      - "$ref": "#/components/parameters/dotfield"
        in: query
        name: dotfield
      - "$ref": "#/components/parameters/callback"
        in: query
        name: callback
      - "$ref": "#/components/parameters/email"
        in: query
        name: email
      responses:
        '200':
          content:
            application/json:
              schema:
                "$ref": "#/components/schemas/Variant"
          description: A matching variant object
        '404':
          description: A response indicating an unknown variant id
      summary: Retrieve variant annotation object based on HGVS or rsid, support JSONP
        and CORS as well.
      tags:
      - variant
components:
  parameters:
    callback:
      description: you can pass a "callback" parameter to make a JSONP call.
      in: query
      name: callback
      schema:
        type: string
    dotfield:
      description: 'control the format of the returned variant object. If "true" or
        "1", all fields will be collapsed into a single level deep structure (all
        nested objects will be a single level deep, using dotfield notation to signify
        the nested structure) Default: false.'
      in: query
      name: dotfield
      schema:
        type: boolean
    email:
      description: If you are regular users of our services, we encourage you to provide
        us an email, so that we can better track the usage or follow up with you.
      in: query
      name: email
      schema:
        type: string
    fields:
      description: 'a comma-separated fields to limit the fields returned from the
        matching variant hits. The supported field names can be found from any variant
        object (e.g. http://myvariant.info/v1/variant/rs12190874). Note that it supports
        dot notation as well, e.g., you can pass "dbsnp.rsid". If "fields=all", all
        available fields will be returned. Default: "all".'
      in: query
      name: fields
      schema:
        type: string
    from:
      description: 'the number of matching variant hits to skip, starting from 0.
        Combining with "size" parameter, this can be useful for paging. Default: 0.'
      in: query
      name: from
      schema:
        type: integer
    size:
      description: 'the maximum number of matching variant hits to return (with a
        cap of 1000 at the moment). Default: 10.'
      in: query
      name: size
      schema:
        type: integer
    sort:
      description: 'the comma-separated fields to sort on. Prefix with "-" for descending
        order, otherwise in ascending order. Default: sort by matching scores in decending
        order.'
      in: query
      name: sort
      schema:
        type: string
  schemas:
    ErrorResult:
      properties:
        message:
          type: string
        success:
          type: boolean
      type: object
    QueryPOSTResult:
      items:
        allOf:
        - "$ref": "#/components/schemas/Variant"
        - properties:
            _score:
              format: float
              type: number
            query:
              type: string
          type: object
      type: array
    QueryResult:
      properties:
        hits:
          items:
            "$ref": "#/components/schemas/Variant"
          type: array
        max_score:
          format: float
          type: number
        took:
          type: integer
        total:
          type: integer
      type: object
    Variant:
      properties:
        _id:
          type: string
      required:
      - _id
      type: object
    int64_or_array:
      oneOf:
      - items:
          format: int64
          type: integer
        type: array
      - format: int64
        type: integer
    string_or_array:
      oneOf:
      - items:
          type: string
        type: array
      - type: string
  x-bte-response-mapping:
    civic-geneDisease:
      DOID: civic.evidence_items.disease.doid
      ## categorical var / relation
      civic_clinical_significance: civic.evidence_items.clinical_significance
      ## free text
      civic_description: civic.evidence_items.description
      ## context: drugs involved
      civic_drug_interaction: civic.evidence_items.drug_interaction_type
      civic_drugs_involved: civic.evidence_items.drugs.name
      ## categorical vars
      civic_evidence_direction: civic.evidence_items.evidence_direction
      civic_evidence_level: civic.evidence_items.evidence_level
      civic_evidence_type: civic.evidence_items.evidence_type
      ## provenance
      clinical_trial_url: civic.evidence_items.source.clinical_trials.clinical_trial_url
      pubmed: civic.evidence_items.source.pubmed
      ## context: variant involved, could use "biolink:sequence_variant_qualifier"?
      civic_variant_id: civic.evidence_items.variant_id
      civic_variant_origin: civic.evidence_items.variant_origin
    civic-geneOnly:
      NCBIGene: civic.entrez_id
    civic-variantDisease:
      DOID: civic.evidence_items.disease.doid
      ## categorical var / relation
      civic_clinical_significance: civic.evidence_items.clinical_significance
      ## free text
      civic_description: civic.evidence_items.description
      ## context: gene involved
      civic_variant_in_gene: civic.entrez_name
      ## context: drugs involved
      civic_drug_interaction: civic.evidence_items.drug_interaction_type
      civic_drugs_involved: civic.evidence_items.drugs.name
      ## categorical vars
      civic_evidence_direction: civic.evidence_items.evidence_direction
      civic_evidence_level: civic.evidence_items.evidence_level
      civic_evidence_type: civic.evidence_items.evidence_type
      ## provenance
      clinical_trial_url: civic.evidence_items.source.clinical_trials.clinical_trial_url
      pubmed: civic.evidence_items.source.pubmed
      ## context: variant involved was from where
      civic_variant_origin: civic.evidence_items.variant_origin
    dbsnp-rsid:
      DBSNP: dbsnp.rsid  ## no prefix
    dbsnp-gene:
      NCBIGene: dbsnp.gene.geneid  ## no prefix
    clinvar-rsid:
      DBSNP: clinvar.rsid  ## no prefix
    clinvar-geneDisease:
      OMIM: clinvar.rcv.conditions.identifiers.omim  ## no prefix
      ## edge attributes
      clinvar_clinical_significance: clinvar.rcv.clinical_significance  ## similar to relation
      clinvar_variant_rsid: dbsnp.rsid    ## context: variant; could use biolink:sequence_variant_qualifier?
      clinvar_submission_last_evaluated: clinvar.rcv.last_evaluated  ## gives a date yyyy-mm-dd
      clinvar_num_submitters: clinvar.rcv.number_submitters
      clinvar_variant_origin: clinvar.rcv.origin
      clinvar_review_status: clinvar.rcv.review_status
    clinvar-gene:
      NCBIGene: clinvar.gene.id  ## no prefix
    clinvar-variantDisease:
      OMIM: clinvar.rcv.conditions.identifiers.omim  ## no prefix
      ## edge attributes
      clinvar_clinical_significance: clinvar.rcv.clinical_significance  ## similar to relation
      clinvar_variant_in_gene: clinvar.gene.symbol    ## context: gene
      clinvar_submission_last_evaluated: clinvar.rcv.last_evaluated  ## gives a date yyyy-mm-dd
      clinvar_num_submitters: clinvar.rcv.number_submitters
      clinvar_variant_origin: clinvar.rcv.origin
      clinvar_review_status: clinvar.rcv.review_status
    docm-disease-only:
      DOID: docm.doid
    docm-gene:
      ENSEMBL: docm.ensembl_gene_id
    docm-disease-and-gene:
      DOID: docm.doid
      docm_variant_in_gene: docm.genename
  ## not included:
  ## - cgi: only 323 records, doesn't have IDs for disease, gene, or drug ID...
  ## - cosmic: only seems to connect variants to tissue they were found in, but no IDs for the tissue...
  ## - dbnsfp.clinvar: overlap with clinvar section? 
  ##   missing indexing for omim, orphanet IDs have ORPHA000 format...
  ## - dbnsfp.ensembl.geneid: very repetitive for some reason...
  ## - dbnsfp.gtex.tissue: string, no IDs...
  ## - grasp.publication.phenotype: looks like curation of publications for variants / phenotypes. string, no IDs...
  ## - gwassnps.trait: looks like curation of publications for variants / phenotypes. string, no IDs...
  x-bte-kgs-operations:
    ## CIVIC: 
    ## data seems to be connecting variant-disease, sometimes with a drug (although that drug may not have an ID)
    ##   having a drug means looking at drug response (given the disease...)
    ## However, the civic variant IDs don't seem to be easily mapped...
    ## The variants are mapped to their genes: 2648 records total, all have entrez_id field...
    ## - not including 
    ##     - civic assertions (only 30 variant records https://myvariant.info/v1/query?q=_exists_:%22civic.assertions%22)
    ##     - civic evidence_items.phenotypes: 598 records, some seem to repeat the disease info
    ##     - civic variant_groups: 129 records, not clear how to structure / what the relationship is
    civic-geneDisease:
      - supportBatch: true
        inputSeparator: ","
        inputs:
        - id: NCBIGene
          semantic: Gene
        requestBody:
          body:
            q: "{inputs[0]}"  ## no prefix
            scopes: civic.entrez_id
          header: application/x-www-form-urlencoded
        outputs:
        - id: DOID
          semantic: Disease
        ## out of 2648 civic records, most (2610) have the doid disease field...only some have dbsnp.rsid...
        parameters:
        ## most fields below are categorical variables
        ## description is free text, Disease ID has prefix (DOID), variant ID is CIVIC (no prefix)
        ## only some records have drug information, and only some drugs have NCIT IDs
          fields: civic.evidence_items
          size: 1000        ## note size limit; added just in case
        predicate: affects
        source: "infores:civic"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/civic-geneDisease"
      ## this record has drug interaction: https://myvariant.info/v1/query?q=_exists_:%22civic.evidence_items.drug_interaction_type%22
      # testExamples:
      #   - qInput: "NCBIGene:1956"   ## EGFR
      #     oneOutput: "DOID:3910"    ##  Lung Adenocarcinoma
    civic-geneDisease-rev:
      - supportBatch: true
        inputSeparator: ","
        inputs:
        - id: DOID
          semantic: Disease
        requestBody:
          body:
            q: "{inputs[0]}"  ## HAS PREFIX
            scopes: civic.evidence_items.disease.doid
          header: application/x-www-form-urlencoded
        outputs:
        - id: NCBIGene
          semantic: Gene
        parameters:
          fields: civic.entrez_id  ## no prefix
          size: 1000
        predicate: affected_by
        source: "infores:civic"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/civic-geneOnly"
      ## this record has drug interaction: https://myvariant.info/v1/query?q=_exists_:%22civic.evidence_items.drug_interaction_type%22
      # testExamples:
      #   - qInput: "DOID:9256"            ## Colorectal Cancer
      #     oneOutput: "NCBIGene:5290"     ##  PIK3CA
    civic-variantDisease:
    ## out of 2648 civic records, only some (653) have the doid disease field...
      - supportBatch: true
        inputSeparator: ","
        inputs:
        - id: DBSNP
          semantic: SequenceVariant
        requestBody:
          body:
            q: "{inputs[0]}"  ## no prefix
            scopes: dbsnp.rsid
          header: application/x-www-form-urlencoded
        outputs:
        - id: DOID
          semantic: Disease
        parameters:
        ## most fields below are categorical variables
        ## description is free text, Disease ID has prefix (DOID), variant ID is CIVIC (no prefix)
        ## only some records have drug information, and only some drugs have NCIT IDs
        ## using entrez gene name for now (human-readable) rather than id
          fields: >-
            civic.evidence_items,
            civic.entrez_name
          size: 1000        ## note size limit; added just in case
        predicate: affects
        source: "infores:civic"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/civic-variantDisease"
      ## this record has drug interaction: https://myvariant.info/v1/query?q=_exists_:%22civic.evidence_items.drug_interaction_type%22%20AND%20_exists_:%22dbsnp.rsid%22
      # testExamples:
      #   - qInput: "DBSNP:rs121913521"   ## in KIT
      #     oneOutput: "DOID:9253"        ##  Gastrointestinal Stromal Tumor
    civic-variantDisease-rev:
      - supportBatch: true
        inputSeparator: ","
        inputs:
        - id: DOID
          semantic: Disease
        requestBody:
          body:
            q: "{inputs[0]}"  ## HAS PREFIX
            scopes: civic.evidence_items.disease.doid
          header: application/x-www-form-urlencoded
        outputs:
        - id: DBSNP
          semantic: SequenceVariant
        parameters:
          fields: dbsnp.rsid
          size: 1000        ## note size limit; added just in case
        predicate: affected_by
        source: "infores:civic"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/dbsnp-rsid"
      ## this record has drug interaction: https://myvariant.info/v1/query?q=_exists_:%22civic.evidence_items.drug_interaction_type%22%20AND%20_exists_:%22dbsnp.rsid%22
      # testExamples:
      #   - qInput: "DOID:219"                 ## Colon Cancer
      #     oneOutput: "DBSNP:rs121913470"     ##  in ERBB2
    dbsnp-variantGene:
    ## note: there may be redundant results in the response
    ## there are 446 million records
    - supportBatch: true
      inputSeparator: ","
      inputs:
      - id: DBSNP
        semantic: SequenceVariant
      requestBody:
        body:
          q: "{inputs[0]}"  ## no prefix
          scopes: dbsnp.rsid
        header: application/x-www-form-urlencoded
      outputs:
      - id: NCBIGene
        semantic: Gene
      parameters:
        fields: dbsnp.gene.geneid  ## no prefix
      predicate: is_sequence_variant_of
      source: "infores:dbsnp"
      response_mapping:
        "$ref": "#/components/x-bte-response-mapping/dbsnp-gene"
      ## https://myvariant.info/v1/query?q=_exists_:%22dbsnp.rsid%22%20AND%20_exists_:%22dbsnp.gene.geneid%22
      # testExamples:
      #   - qInput: "DBSNP:rs770112667"
      #     oneOutput: "NCBIGene:55691"    ## FRMD4A
    dbsnp-variantGene-rev:
    - supportBatch: true
      inputSeparator: ","
      inputs:
      - id: NCBIGene
        semantic: Gene
      requestBody:
        body:
          q: "{inputs[0]}"  ## no prefix
          scopes: dbsnp.gene.geneid
        header: application/x-www-form-urlencoded
      outputs:
      - id: DBSNP
        semantic: SequenceVariant
      parameters:
        fields: dbsnp.rsid
      predicate: has_sequence_variant
      source: "infores:dbsnp"
      response_mapping:
        "$ref": "#/components/x-bte-response-mapping/dbsnp-rsid"
      ## https://myvariant.info/v1/query?q=_exists_:%22dbsnp.rsid%22%20AND%20_exists_:%22dbsnp.gene.geneid%22
      # testExamples:
      #   - qInput: "NCBIGene:55691"          ## FRMD4A
      #     oneOutput: "DBSNP:rs550898964"
    clinvar-variantGene:
    ## there are 43k records with clinvar.rsid but no dbsnp
    ## https://myvariant.info/v1/query?q=_exists_:%22clinvar.rsid%22%20AND%20NOT%20_exists_:%22dbsnp.rsid%22
    - supportBatch: true
      inputSeparator: ","
      inputs:
      - id: DBSNP
        semantic: SequenceVariant
      requestBody:
        body:
          q: "{inputs[0]}"  ## no prefix
          scopes: clinvar.rsid
        header: application/x-www-form-urlencoded
      outputs:
      - id: NCBIGene
        semantic: Gene
      parameters:
        fields: clinvar.gene.id  ## no prefix
      predicate: is_sequence_variant_of
      source: "infores:clinvar"
      response_mapping:
        "$ref": "#/components/x-bte-response-mapping/clinvar-gene"
      # testExamples:
      #   - qInput: "DBSNP:rs794727661"
      #     oneOutput: "NCBIGene:1756"    ## DMD
    clinvar-variantGene-rev:
    - supportBatch: true
      inputSeparator: ","
      inputs:
      - id: NCBIGene
        semantic: Gene
      requestBody:
        body:
          q: "{inputs[0]}"  ## no prefix
          scopes: clinvar.gene.id
        header: application/x-www-form-urlencoded
      outputs:
      - id: DBSNP
        semantic: SequenceVariant
      parameters:
        fields: clinvar.rsid  ## no prefix
      predicate: has_sequence_variant
      source: "infores:clinvar"
      response_mapping:
        "$ref": "#/components/x-bte-response-mapping/clinvar-rsid"
      # testExamples:
      #   - qInput: "NCBIGene:284098"          ## PIGW
      #     oneOutput: "DBSNP:rs779029016"
    clinvar-geneDisease:
    ## - conditions.identifiers can include multiple kinds
    ##   some conditions have no IDs, some have multiple IDs (not all have OMIM). 
    ##   - omim: 497648 (no prefix)
    ##   - orphanet: 416644 (no prefix)
    ##   - human_phenotype_ontology: 74175
    ##   - efo: 3637, has EFO_000 format (not ID or CURIE)
    ##   - many medgen IDs but I don't think SRI ID resolver supports this...
    ##   - not indexed: mesh, mondo
    - supportBatch: true
      inputSeparator: ","
      inputs:
      - id: NCBIGene
        semantic: Gene
      requestBody:
        body:
          q: "{inputs[0]}"  ## no prefix
          scopes: clinvar.gene.id
          ## out of >497,000 records with clinvar.rcv.conditions.identifiers.omim field, all have gene field...
        header: application/x-www-form-urlencoded
      outputs:
      - id: OMIM
        semantic: Disease
      parameters:
      ## most should have dbsnp.rsid ID (see above)
        fields: >-
          clinvar.rcv.conditions.identifiers.omim,
          clinvar.rcv.clinical_significance,
          dbsnp.rsid,
          clinvar.rcv.last_evaluated,
          clinvar.rcv.number_submitters,
          clinvar.rcv.origin,
          clinvar.rcv.review_status
        size: 1000  ## note size limit; added just in case
      predicate: related_to
      ## clinical significance is like a relation: 
      ##   Uncertain significance, Pathogenic, Likely pathogenic, other
      source: "infores:clinvar"
      response_mapping:
        "$ref": "#/components/x-bte-response-mapping/clinvar-geneDisease"
      # testExamples:
      #   - qInput: "NCBIGene:55806"   ## HR
      #     oneOutput: "OMIM:209500"   ## Atrichia with papular lesions (APL)
    clinvar-geneDisease-rev:
    - supportBatch: true
      inputSeparator: ","
      inputs:
      - id: OMIM
        semantic: Disease
      requestBody:
        body:
          q: "{inputs[0]}"  ## no prefix
          scopes: clinvar.rcv.conditions.identifiers.omim
        header: application/x-www-form-urlencoded
      outputs:
      - id: NCBIGene
        semantic: Gene
      parameters:
        fields: clinvar.gene.id
        size: 1000  ## note size limit
      predicate: related_to
      source: "infores:clinvar"
      response_mapping:
        "$ref": "#/components/x-bte-response-mapping/clinvar-gene"
      # testExamples:
      #   - qInput: "OMIM:615592"        ## Immunodeficiency 15 (IMD15B)
      #     oneOutput: "NCBIGene:3551"   ## IKBKB
    clinvar-variantDisease:
    - supportBatch: true
      inputSeparator: ","
      inputs:
      - id: DBSNP
        semantic: SequenceVariant
      requestBody:
        body:
          q: "{inputs[0]}"  ## no prefix
          scopes: dbsnp.rsid
          ## out of >497,000 records with clinvar.rcv.conditions.identifiers.omim field, 
          ##        >405,000 records also have dbsnp.rsid field (which is more than the 347,000 records with clinvar.rsid)
        header: application/x-www-form-urlencoded
      outputs:
      - id: OMIM
        semantic: Disease
      parameters:
      ## using gene symbol rather than gene.id so it's human-readable
        fields: >-
          clinvar.rcv.conditions.identifiers.omim,
          clinvar.rcv.clinical_significance,
          clinvar.gene.symbol,
          clinvar.rcv.last_evaluated,
          clinvar.rcv.number_submitters,
          clinvar.rcv.origin,
          clinvar.rcv.review_status
        size: 1000  ## note size limit; added just in case
      predicate: related_to
      ## clinical significance is like a relation: 
      ##   Uncertain significance, Pathogenic, Likely pathogenic, other
      source: "infores:clinvar"
      response_mapping:
        "$ref": "#/components/x-bte-response-mapping/clinvar-variantDisease"
      ## https://myvariant.info/v1/query?q=_exists_:%22clinvar.rcv.conditions.identifiers.omim%22%20AND%20_exists_:%22dbsnp.rsid%22
      # testExamples:
      #   - qInput: "DBSNP:rs1193171808"
      #     oneOutput: "OMIM:615592"        ## Immunodeficiency 15 (IMD15B)
    clinvar-variantDisease-rev:
    - supportBatch: true
      inputSeparator: ","
      inputs:
      - id: OMIM
        semantic: Disease
      requestBody:
        body:
          q: "{inputs[0]}"  ## no prefix
          scopes: clinvar.rcv.conditions.identifiers.omim
        header: application/x-www-form-urlencoded
      outputs:
      - id: DBSNP
        semantic: SequenceVariant
      parameters:
        fields: dbsnp.rsid
        size: 1000  ## note size limit
      predicate: related_to
      source: "infores:clinvar"
      response_mapping:
        "$ref": "#/components/x-bte-response-mapping/dbsnp-rsid"
      # testExamples:
      #   - qInput: "OMIM:602629"             ## Torsion dystonia 6 (DYT6)
      #     oneOutput: "DBSNP:rs1480200060"
    docm-geneDisease:
    - supportBatch: true
      inputSeparator: ","
      inputs:
      - id: ENSEMBL
        semantic: Gene
      requestBody:
        body:
          q: "{inputs[0]}"  ## no prefix
          scopes: docm.ensembl_gene_id
          ## all 1119 records with docm field have the gene id
        header: application/x-www-form-urlencoded
      outputs:
      - id: DOID
        semantic: Disease
      parameters:
        fields: docm.doid  ## HAS PREFIX
        size: 1000  ## note size limit; added just in case
      predicate: related_to
      ## it's curated but there's no relationship info...
      ## looks like it's from http://www.docm.info/
      source: "infores:docm"
      response_mapping:
        "$ref": "#/components/x-bte-response-mapping/docm-disease-only"
      ## https://myvariant.info/v1/query?q=_exists_:%22docm.ensembl_gene_id%22
      # testExamples:
      #   - qInput: "ENSEMBL:ENSG00000171094"   ## ALK
      #     oneOutput: "DOID:769"               ## Neuroblastoma
    docm-geneDisease-rev:
    - supportBatch: true
      inputSeparator: ","
      inputs:
      - id: DOID
        semantic: Disease
      requestBody:
        body:
          q: "{inputs[0]}"  ## HAS PREFIX
          scopes: docm.doid
        header: application/x-www-form-urlencoded
      outputs:
      - id: ENSEMBL
        semantic: Gene
      parameters:
        fields: docm.ensembl_gene_id  ## no prefix
        size: 1000  ## note size limit
      predicate: related_to
      source: "infores:docm"
      response_mapping:
        "$ref": "#/components/x-bte-response-mapping/docm-gene"
      ## https://myvariant.info/v1/query?q=_exists_:%22docm.ensembl_gene_id%22
      # testExamples:
      #   - qInput: "DOID:1909"                     ## Melanoma
      #     oneOutput: "ENSEMBL:ENSG00000169032"    ## MAP2K1
    docm-variantDisease:
    - supportBatch: true
      inputSeparator: ","
      inputs:
      - id: DBSNP
        semantic: SequenceVariant
      requestBody:
        body:
          q: "{inputs[0]}"  ## no prefix
          scopes: dbsnp.rsid
          ## out of 1119 records with docm field, 
          ##        465 records also have dbsnp.rsid field
        header: application/x-www-form-urlencoded
      outputs:
      - id: DOID
        semantic: Disease
      parameters:
      ## DOID has prefix, using gene name so it's human readable rather than gene id
        fields: >- 
          docm.doid,
          docm.genename
        size: 1000  ## note size limit; added just in case
      predicate: related_to
      ## it's curated but there's no relationship info...
      ## looks like it's from http://www.docm.info/
      source: "infores:docm"
      response_mapping:
        "$ref": "#/components/x-bte-response-mapping/docm-disease-and-gene"
      ## https://myvariant.info/v1/query?q=_exists_:%22docm.ensembl_gene_id%22%20AND%20_exists_:%22dbsnp.rsid%22
      # testExamples:
      #   - qInput: "DBSNP:rs759487569"    ## in GATA2
      #     oneOutput: "DOID:9119"         ## AML
    docm-variantDisease-rev:
    - supportBatch: true
      inputSeparator: ","
      inputs:
      - id: DOID
        semantic: Disease
      requestBody:
        body:
          q: "{inputs[0]}"  ## HAS PREFIX
          scopes: docm.doid
        header: application/x-www-form-urlencoded
      outputs:
      - id: DBSNP
        semantic: SequenceVariant
      parameters:
        fields: dbsnp.rsid
        size: 1000  ## note size limit
      predicate: related_to
      source: "infores:docm"
      response_mapping:
        "$ref": "#/components/x-bte-response-mapping/dbsnp-rsid"
      ## https://myvariant.info/v1/query?q=_exists_:%22docm.ensembl_gene_id%22%20AND%20_exists_:%22dbsnp.rsid%22
      # testExamples:
      #   - qInput: "DOID:1781"              ## Thyroid Cancer
      #     oneOutput: "DBSNP:rs121913254"   ## in NRAS
