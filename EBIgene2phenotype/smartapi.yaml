---
openapi: 3.0.3
info:
  contact:
    email: help@biothings.io
    name: BioThings Team
    x-id: https://github.com/biothings
    x-role: responsible developers
  description: Documentation of the EBIgene2phenotype query web services.
  termsOfService: https://biothings.io/about
  title: EBIgene2phenotype API
  version: '2020-02-19'
  x-translator:
    infores: "infores:biothings-ebi-gene2phenotype"
    component: KP
    team:
      - Service Provider
    biolink-version: "2.2.13"
servers:
- description: Encrypted Production server
  url: https://biothings.ncats.io/ebigene2phenotype
  x-maturity: production
- description: Production server
  url: http://biothings.ncats.io/ebigene2phenotype
  x-maturity: production
tags:
- name: gene
- name: phenotype
- name: annotation
- name: query
- name: translator
- name: biothings
paths:
  "/gene/{id}":
    get:
      parameters:
      - name: id
        in: path
        required: true
        example: "341"
        schema:
          type: string
      - "$ref": "#/components/parameters/raw"
      - "$ref": "#/components/parameters/rawquery"
      - "$ref": "#/components/parameters/_source"
      - "$ref": "#/components/parameters/size"
      - "$ref": "#/components/parameters/dotfield"
      - "$ref": "#/components/parameters/_sorted"
      - "$ref": "#/components/parameters/always_list"
      - "$ref": "#/components/parameters/allow_null"
      - "$ref": "#/components/parameters/format"
      responses:
        '200':
          description: "Success"
      #     content:
      #       application/json:
      #         schema:
      #           "$ref": "#/components/schemas/Gene"
      #     description: A matching gene object
      #   '404':
      #     description: A response indicating an unknown gene ID
      # summary: Retrieve gene objects based on ID
      tags:
      - gene
  "/gene":
    post:
    ## tricky because I found out https://pending.biothings.io/ebigene2phenotype/gene?id=341,4591
    ##   with empty requestBody also seems to work...weird
      parameters:
      - "$ref": "#/components/parameters/raw"
      - "$ref": "#/components/parameters/rawquery"
      - "$ref": "#/components/parameters/_source"
      - "$ref": "#/components/parameters/size"
      - "$ref": "#/components/parameters/dotfield"
      - "$ref": "#/components/parameters/_sorted"
      - "$ref": "#/components/parameters/always_list"
      - "$ref": "#/components/parameters/allow_null"
      - "$ref": "#/components/parameters/format"
      requestBody:
        content:
          application/json:
            example:
              ids:
              - "341"
              - "4591"
            schema:
              type: object
              properties:
                ids:
                  description: 'multiple Gene IDs separated by comma. Note that
                    currently we only take the input ids up to 1000 maximum, the rest
                    will be omitted. Type: string (list). Max: 1000.'
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: "Success"
        #   content:
        #     application/json:
        #       schema:
        #         items:
        #           "$ref": "#/components/schemas/Gene"
        #         type: array
        #   description: A list of matching gene objects
        # '400':
        #   content:
        #     application/json:
        #       schema:
        #         "$ref": "#/components/schemas/ErrorResult"
        #   description: A response indicating an improperly formatted query
      tags:
      - gene
  "/metadata":
    get:
      parameters:
      - "$ref": "#/components/parameters/format"
      - "$ref": "#/components/parameters/raw"
      - "$ref": "#/components/parameters/dev"
      responses:
        '200':
          description: Success
      summary: Get metadata about the data available from EBIgene2phenotype
      tags:
      - metadata
  "/metadata/fields":
    get:
      parameters:
      - "$ref": "#/components/parameters/format"
      - "$ref": "#/components/parameters/raw"
      - "$ref": "#/components/parameters/search"
      - "$ref": "#/components/parameters/prefix"
      responses:
        '200':
          description: Success
      summary: Get metadata about the data fields available from a record
      tags:
      - metadata
  "/query":
    get:
      parameters:
      - name: q
        description: Query string.
        in: query
        required: true
        example: "_id:6636"
        schema:
          type: string
      - "$ref": "#/components/parameters/aggs"
      - "$ref": "#/components/parameters/facet_size"
      - "$ref": "#/components/parameters/from"
      - "$ref": "#/components/parameters/userquery"
      - "$ref": "#/components/parameters/sort"
      - "$ref": "#/components/parameters/explain"
      - "$ref": "#/components/parameters/fetch_all"
      - "$ref": "#/components/parameters/scroll_id"
      - "$ref": "#/components/parameters/raw"
      - "$ref": "#/components/parameters/rawquery"
      - "$ref": "#/components/parameters/_source"
      - "$ref": "#/components/parameters/size"
      - "$ref": "#/components/parameters/dotfield"
      - "$ref": "#/components/parameters/_sorted"
      - "$ref": "#/components/parameters/always_list"
      - "$ref": "#/components/parameters/allow_null"
      - "$ref": "#/components/parameters/format"
      responses:
        '200':
          description: Success
      #     content:
      #       application/json:
      #         schema:
      #           "$ref": "#/components/schemas/QueryResult"
      #   '400':
      #     content:
      #       application/json:
      #         schema:
      #           "$ref": "#/components/schemas/ErrorResult"
      #     description: A response indicating an improperly formatted query
      # summary: Make queries and return matching gene hits. Supports JSONP and CORS
      #   as well.
      tags:
      - query
    post:
      parameters:
      - name: q
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      - name: scopes
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
            default:
            - _id
      - "$ref": "#/components/parameters/from"
      - "$ref": "#/components/parameters/sort"
      - "$ref": "#/components/parameters/raw"
      - "$ref": "#/components/parameters/rawquery"
      - "$ref": "#/components/parameters/_source"
      - "$ref": "#/components/parameters/size"
      - "$ref": "#/components/parameters/dotfield"
      - "$ref": "#/components/parameters/_sorted"
      - "$ref": "#/components/parameters/always_list"
      - "$ref": "#/components/parameters/allow_null"
      - "$ref": "#/components/parameters/format"
      requestBody:
        content:
          application/json:
            example:
              q:
              - "341"
              - "6636"
              scopes:
              - "_id"
            schema:
              type: object
              properties:
                q:
                  type: array
                  items:
                    type: string
                scopes:
                  type: array
                  items:
                    type: string
                from:
                  type: integer
                sort:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Success
      #     content:
      #       application/json:
      #         schema:
      #           "$ref": "#/components/schemas/QueryPOSTResult"
      #   '400':
      #     content:
      #       application/json:
      #         schema:
      #           "$ref": "#/components/schemas/ErrorResult"
      #     description: A response indicating an improperly formatted query
      # summary: Make batch gene queries and return matching gene hits
      tags:
      - query
      x-bte-kgs-operations:
      - "$ref": "#/components/x-bte-kgs-operations/gene_to_phenotype"
      - "$ref": "#/components/x-bte-kgs-operations/phenotype_to_gene"
      - "$ref": "#/components/x-bte-kgs-operations/gene_to_disease"
      - "$ref": "#/components/x-bte-kgs-operations/disease_to_gene"
components:
  parameters:
    _sorted:
      name: _sorted
      in: query
      required: false
      schema:
        type: boolean
        default: true
    _source:
      name: _source
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
    aggs:
      name: aggs
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
    allow_null:
      name: allow_null
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
    always_list:
      name: always_list
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
    dev:
      name: dev
      in: query
      required: false
      schema:
        type: boolean
    dotfield:
      name: dotfield
      in: query
      required: false
      schema:
        type: boolean
    explain:
      name: explain
      in: query
      required: false
      schema:
        type: boolean
    facet_size:
      name: facet_size
      in: query
      required: false
      schema:
        type: integer
        default: 10
    fetch_all:
      name: fetch_all
      in: query
      required: false
      schema:
        type: boolean
    format:
      name: format
      description: 'controls output format of server response, currently supports:
        "json", "jsonld", "html". Type: string. Default: json.'
      in: query
      required: false
      schema:
        type: string
        default: json
    from:
      name: from
      in: query
      required: false
      schema:
        type: integer
    prefix:
      name: prefix
      in: query
      required: false
      schema:
        type: string
    raw:
      name: raw
      in: query
      required: false
      schema:
        type: boolean
    rawquery:
      name: rawquery
      in: query
      required: false
      schema:
        type: boolean
    scroll_id:
      name: scroll_id
      in: query
      required: false
      schema:
        type: string
    search:
      name: search
      in: query
      required: false
      schema:
        type: string
    size:
      name: size
      description: "default: 10 objects/records in response"
      in: query
      required: false
      schema:
        type: integer
    sort:
      name: sort
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
    userquery:
      name: userquery
      in: query
      required: false
      schema:
        type: string
  # schemas:
  #   Gene:
  #     properties:
  #       _id:
  #         type: string
  #     required:
  #     - _id
  #     type: object
  #   ErrorResult:
  #     properties:
  #       message:
  #         type: string
  #       success:
  #         type: boolean
  #     type: object
  #   QueryPOSTResult:
  #     items:
  #       allOf:
  #       - "$ref": "#/components/schemas/Gene"
  #       - properties:
  #           _score:
  #             format: float
  #             type: number
  #           query:
  #             type: string
  #         type: object
  #     type: array
  #   QueryResult:
  #     properties:
  #       hits:
  #         items:
  #           "$ref": "#/components/schemas/Gene"
  #         type: array
  #       max_score:
  #         format: float
  #         type: number
  #       took:
  #         type: integer
  #       total:
  #         type: integer
  #     type: object
  #   int64_or_array:
  #     oneOf:
  #     - items:
  #         format: int64
  #         type: integer
  #       type: array
  #     - format: int64
  #       type: integer
  #   string_or_array:
  #     oneOf:
  #     - items:
  #         type: string
  #       type: array
  #     - type: string
  x-bte-kgs-operations:
  ## not all records have phenotypes or disease IDs...
  ## relationship is somewhat captured by DDD_category (and allelic_requirement, mutation_consequence)
  ## not sure if "panel" is a "source"
    gene_to_phenotype:
    - supportBatch: true
      useTemplating: true
      inputs:
      - id: HGNC
        semantic: Gene
      requestBody:
        body:
          ## API data has no prefix
          ## joinSafe is only needed if the delimiter isn't a comma
          q: "{{ queryInputs }}"
          scopes: _id
        header: application/x-www-form-urlencoded
      outputs:
      - id: HP
        semantic: PhenotypicFeature
      parameters:
        ## phenotypes has HP prefix
        fields: >-
          gene2phenotype.DDD_category,
          gene2phenotype.allelic_requirement,
          gene2phenotype.disease.disease_mim,
          gene2phenotype.disease.disease_name,
          gene2phenotype.gene_disease_pair_entry_date,
          gene2phenotype.mutation_consequence,
          gene2phenotype.organ_specificity_list,
          gene2phenotype.panel,
          gene2phenotype.phenotypes,
          gene2phenotype.pmids
      predicate: related_to
      source: "infores:ebi-gene2phenotype"
      response_mapping:
        "$ref": "#/components/x-bte-response-mapping/pheno-object"
      # testExamples:
      #   - qInput: "HGNC:3806"        ## FOXE1
      #     oneOutput: "HP:0010564"    ## Bifid epiglottis
    phenotype_to_gene:
    - supportBatch: true
      useTemplating: true
      inputs:
      - id: HP
        semantic: PhenotypicFeature
      requestBody:
        body:
          ## API data has prefix (HP)
          ## joinSafe is only needed if the delimiter isn't a comma
          q: "{{ queryInputs }}"
          scopes: gene2phenotype.phenotypes
        header: application/x-www-form-urlencoded
      outputs:
      - id: HGNC
        semantic: Gene
      parameters:
        fields: _id   ## no prefix
        size: '1000'  ## note size limit
      predicate: related_to
      source: "infores:ebi-gene2phenotype"
      response_mapping:
        "$ref": "#/components/x-bte-response-mapping/gene-object"
      # testExamples:
      #   - qInput: "HP:0002808"      ## Kyphosis
      #     oneOutput: "HGNC:2213"    ## COL6A3
    gene_to_disease:
    - supportBatch: true
      useTemplating: true
      inputs:
      - id: HGNC
        semantic: Gene
      requestBody:
        body:
          ## API data has no prefix
          ## joinSafe is only needed if the delimiter isn't a comma
          q: "{{ queryInputs }}"
          scopes: _id
        header: application/x-www-form-urlencoded
      outputs:
      - id: OMIM
        semantic: Disease
      parameters:
        ## diseases don't have prefix
        fields: >-
          gene2phenotype.DDD_category,
          gene2phenotype.allelic_requirement,
          gene2phenotype.disease.disease_mim,
          gene2phenotype.disease.disease_name,
          gene2phenotype.gene_disease_pair_entry_date,
          gene2phenotype.mutation_consequence,
          gene2phenotype.organ_specificity_list,
          gene2phenotype.panel,
          gene2phenotype.phenotypes,
          gene2phenotype.pmids
      predicate: related_to
      source: "infores:ebi-gene2phenotype"
      response_mapping:
        "$ref": "#/components/x-bte-response-mapping/disease-object"
      # testExamples:
      #   - qInput: "HGNC:3806"         ## FOXE1
      #     oneOutput: "OMIM:241850"    ## Bamforth-Lazarus syndrome
    disease_to_gene:
    - supportBatch: true
      useTemplating: true
      inputs:
      - id: OMIM
        semantic: Disease
      requestBody:
        body:
          ## API data has no prefix
          ## joinSafe is only needed if the delimiter isn't a comma
          q: "{{ queryInputs }}"
          scopes: gene2phenotype.disease.disease_mim
        header: application/x-www-form-urlencoded
      outputs:
      - id: HGNC
        semantic: Gene
      parameters:
        fields: _id   ## no prefix
        size: '1000'  ## note size limit
      predicate: related_to
      source: "infores:ebi-gene2phenotype"
      response_mapping:
        "$ref": "#/components/x-bte-response-mapping/gene-object"
      # testExamples:
      #   - qInput: "OMIM:255200"      ## myopathy, centronuclear, 2
      #     oneOutput: "HGNC:1052"    ## BIN1
  x-bte-response-mapping:
    pheno-object:
      HP: gene2phenotype.phenotypes  ## has HP prefix
      pubmed: gene2phenotype.pmids   ## no prefix
      DDD_category: gene2phenotype.DDD_category
      allelic_requirement: gene2phenotype.allelic_requirement
      context_disease_omim_id: gene2phenotype.disease.disease_mim   ## no prefix
      context_disease_name: gene2phenotype.disease.disease_name
      gene_disease_pair_entry_date: gene2phenotype.gene_disease_pair_entry_date
      mutation_consequence: gene2phenotype.mutation_consequence
      context_organ_specificity_list: gene2phenotype.organ_specificity_list     ## array of keywords (not ids or curies)
      panel: gene2phenotype.panel
    gene-object:
      HGNC: _id   ## no prefix
    disease-object:
      OMIM: gene2phenotype.disease.disease_mim   ## no prefix
      pubmed: gene2phenotype.pmids   ## no prefix
      DDD_category: gene2phenotype.DDD_category
      allelic_requirement: gene2phenotype.allelic_requirement
      gene_disease_pair_entry_date: gene2phenotype.gene_disease_pair_entry_date
      mutation_consequence: gene2phenotype.mutation_consequence
      context_organ_specificity_list: gene2phenotype.organ_specificity_list     ## array of keywords (not ids or curies)
      panel: gene2phenotype.panel
      related_phenotypes: gene2phenotype.phenotypes  ## has HP prefix
