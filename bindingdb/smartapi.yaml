openapi: 3.0.3
info:
  contact:
    email: help@biothings.io
    name: BioThings Team
    x-id: https://github.com/biothings
    x-role: responsible developers
  description: >-
    Documentation of the BioThings [BindingDB](https://www.bindingdb.org/rwd/bind/index.jsp) query web services.
  termsOfService: https://biothings.io/about
  title: BioThings BindingDB API
  version: '1.0'
  x-translator:
    infores: "infores:biothings-bindingdb"
    component: KP
    team:
      - Service Provider
    biolink-version: "2.2.13"
servers:
- description: Encrypted Production server
  url: https://biothings.ncats.io/bindingdb
  x-maturity: production
- description: Production server
  url: http://biothings.ncats.io/bindingdb
  x-maturity: production
tags:
- name: association
- name: protein
- name: chemical
- name: query
- name: translator
- name: biothings
paths:
  "/association/{id}":
    get:
      parameters:
      - name: id
        in: path
        required: true
        example: "456856-P35414"
        schema:
          type: string
      - "$ref": "#/components/parameters/raw"
      - "$ref": "#/components/parameters/rawquery"
      - "$ref": "#/components/parameters/_source"
      - "$ref": "#/components/parameters/size"
      - "$ref": "#/components/parameters/dotfield"
      - "$ref": "#/components/parameters/_sorted"
      - "$ref": "#/components/parameters/always_list"
      - "$ref": "#/components/parameters/allow_null"
      - "$ref": "#/components/parameters/format"
      responses:
        '200':
          description: "Success"
      #     content:
      #       application/json:
      #         schema:
      #           $ref: '#/components/schemas/Association'
      #   '404':
      #     description: A response indicating an unknown association ID
      summary: >-
        Retrieve association based on ID
      tags:
      - association
  "/association":
    post:
      parameters:
      - "$ref": "#/components/parameters/raw"
      - "$ref": "#/components/parameters/rawquery"
      - "$ref": "#/components/parameters/_source"
      - "$ref": "#/components/parameters/size"
      - "$ref": "#/components/parameters/dotfield"
      - "$ref": "#/components/parameters/_sorted"
      - "$ref": "#/components/parameters/always_list"
      - "$ref": "#/components/parameters/allow_null"
      - "$ref": "#/components/parameters/format"
      requestBody:
        content:
          application/json:
            example:
              ids:
              - "456856-P35414"
              - "450507-Q13822"
            schema:
              type: object
              properties:
                ids:
                  description: 'multiple Association IDs separated by comma. Note that
                    currently we only take the input ids up to 1000 maximum, the rest
                    will be omitted. Type: string (list). Max: 1000.'
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: "Success"
      summary: >-
        Retrieve multiple associations' information based on ID
      tags:
      - association
  "/metadata":
    get:
      parameters:
      - "$ref": "#/components/parameters/format"
      - "$ref": "#/components/parameters/raw"
      - "$ref": "#/components/parameters/dev"
      responses:
        '200':
          description: Success
      summary: Get metadata about the data available from the API
      tags:
      - metadata
  "/metadata/fields":
    get:
      parameters:
      - "$ref": "#/components/parameters/format"
      - "$ref": "#/components/parameters/raw"
      - "$ref": "#/components/parameters/search"
      - "$ref": "#/components/parameters/prefix"
      responses:
        '200':
          description: Success
      summary: Get metadata about the data fields available from a record
      tags:
      - metadata
  "/query":
    get:
      parameters:
      - name: q
        description: Query string.
        in: query
        required: true
        example: "subject.PHENO_TYPE:608446"
        schema:
          type: string
      - "$ref": "#/components/parameters/aggs"
      - "$ref": "#/components/parameters/facet_size"
      - "$ref": "#/components/parameters/from"
      - "$ref": "#/components/parameters/userquery"
      - "$ref": "#/components/parameters/sort"
      - "$ref": "#/components/parameters/explain"
      - "$ref": "#/components/parameters/fetch_all"
      - "$ref": "#/components/parameters/scroll_id"
      - "$ref": "#/components/parameters/raw"
      - "$ref": "#/components/parameters/rawquery"
      - "$ref": "#/components/parameters/_source"
      - "$ref": "#/components/parameters/size"
      - "$ref": "#/components/parameters/dotfield"
      - "$ref": "#/components/parameters/_sorted"
      - "$ref": "#/components/parameters/always_list"
      - "$ref": "#/components/parameters/allow_null"
      - "$ref": "#/components/parameters/format"
      responses:
        '200':
          description: Success
      #     content:
      #       application/json:
      #         schema:
      #           "$ref": "#/components/schemas/QueryResult"
      #   '400':
      #     content:
      #       application/json:
      #         schema:
      #           "$ref": "#/components/schemas/ErrorResult"
      #     description: A response indicating an improperly formatted query
      # summary: Make queries and return matching gene hits. Supports JSONP and CORS
      #   as well.
      tags:
      - query
    post:
      parameters:
      - name: q
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      - name: scopes
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
            default:
            - _id
      - "$ref": "#/components/parameters/from"
      - "$ref": "#/components/parameters/sort"
      - "$ref": "#/components/parameters/raw"
      - "$ref": "#/components/parameters/rawquery"
      - "$ref": "#/components/parameters/_source"
      - "$ref": "#/components/parameters/size"
      - "$ref": "#/components/parameters/dotfield"
      - "$ref": "#/components/parameters/_sorted"
      - "$ref": "#/components/parameters/always_list"
      - "$ref": "#/components/parameters/allow_null"
      - "$ref": "#/components/parameters/format"
      requestBody:
        content:
          application/json:
            example:
              q:
              - "455615"
              - "453920"
              scopes:
              - "object.monomer_id"
            schema:
              type: object
              properties:
                q:
                  type: array
                  items:
                    type: string
                scopes:
                  type: array
                  items:
                    type: string
                from:
                  type: integer
                sort:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Success
      #     content:
      #       application/json:
      #         schema:
      #           "$ref": "#/components/schemas/QueryPOSTResult"
      #   '400':
      #     content:
      #       application/json:
      #         schema:
      #           "$ref": "#/components/schemas/ErrorResult"
      #     description: A response indicating an improperly formatted query
      # summary: Make batch gene queries and return matching gene hits
      tags:
      - query
      ## 2 operations
      x-bte-kgs-operations:
      - $ref: '#/components/x-bte-kgs-operations/ligand-protein'
      - $ref: '#/components/x-bte-kgs-operations/protein-ligand'
components:
  parameters:
    _sorted:
      name: _sorted
      in: query
      required: false
      schema:
        type: boolean
        default: true
    _source:
      name: _source
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
    aggs:
      name: aggs
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
    allow_null:
      name: allow_null
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
    always_list:
      name: always_list
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
    dev:
      name: dev
      in: query
      required: false
      schema:
        type: boolean
    dotfield:
      name: dotfield
      in: query
      required: false
      schema:
        type: boolean
    explain:
      name: explain
      in: query
      required: false
      schema:
        type: boolean
    facet_size:
      name: facet_size
      in: query
      required: false
      schema:
        type: integer
        default: 10
    fetch_all:
      name: fetch_all
      in: query
      required: false
      schema:
        type: boolean
    format:
      name: format
      description: 'controls output format of server response, currently supports:
        "json", "jsonld", "html". Type: string. Default: json.'
      in: query
      required: false
      schema:
        type: string
        default: json
    from:
      name: from
      in: query
      required: false
      schema:
        type: integer
    prefix:
      name: prefix
      in: query
      required: false
      schema:
        type: string
    raw:
      name: raw
      in: query
      required: false
      schema:
        type: boolean
    rawquery:
      name: rawquery
      in: query
      required: false
      schema:
        type: boolean
    scroll_id:
      name: scroll_id
      in: query
      required: false
      schema:
        type: string
    search:
      name: search
      in: query
      required: false
      schema:
        type: string
    size:
      name: size
      description: "default: 10 objects/records in response"
      in: query
      required: false
      schema:
        type: integer
    sort:
      name: sort
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
    userquery:
      name: userquery
      in: query
      required: false
      schema:
        type: string
  # schemas:
  #   Association:
  #     properties:
  #       _id:
  #         type: string
  #     required:
  #     - _id
  #     type: object
  #   ErrorResult:
  #     properties:
  #       message:
  #         type: string
  #       success:
  #         type: boolean
  #     type: object
  #   QueryPOSTResult:
  #     items:
  #       allOf:
  #       - $ref: '#/components/schemas/Association'
  #       - properties:
  #           _score:
  #             format: float
  #             type: number
  #           query:
  #             type: string
  #         type: object
  #     type: array
  #   QueryResult:
  #     properties:
  #       hits:
  #         items:
  #           $ref: '#/components/schemas/Association'
  #         type: array
  #       max_score:
  #         format: float
  #         type: number
  #       took:
  #         type: integer
  #       total:
  #         type: integer
  #     type: object
  #   int64_or_array:
  #     oneOf:
  #     - items:
  #         format: int64
  #         type: integer
  #       type: array
  #     - format: int64
  #       type: integer
  #   string_or_array:
  #     oneOf:
  #     - items:
  #         type: string
  #       type: array
  #     - type: string
  x-bte-kgs-operations:
    ligand-protein:
    ## 44,084 documents in the API 
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: PUBCHEM.COMPOUND
            semantic: SmallMolecule
        requestBody:
          body:
            ## API data has no prefix
            ## joinSafe is only needed if the delimiter isn't a comma
            q: "{{ queryInputs }}"
            scopes: object.pubchem_cid
        outputs:
          - id: UniProtKB
            semantic: Protein
        parameters:
          fields: >-
            subject.uniprot.accession,subject.name,subject.organism,relation.curation_datasource,relation.pmid,relation.bindingdb_link,relation.article_doi,relation.patent_number
          size: 1000
        ## using the same predicate that biolink (monarch) api uses
        predicate: actively_involved_in
        source: "infores:bindingdb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/protein"
        # testExamples:
        #   - qInput: "ROYXDGLMJNEUEM-GOSISDBHSA-N"     ## InChI=1S/C36H37Cl2N3O6/c37-26-16-39-17-27(38)31(26)32-25(33(47-41-32)22-4-5-22)19-46-36-11-8-35(9-12-36,10-13-36)20-45-23-6-7-28-24(14-23)30(15-29(40-28)34(42)43)44-18-21-2-1-3-21/h6-7,14-17,21-22H,1-5,8-13,18-20H2,(H,42,43)
        #     oneOutput: "P35372"                    ## OPRM_HUMAN, Mu-type opioid receptor
    protein-ligand:
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: UniProtKB
            semantic: Protein
        requestBody:
          body:
            ## API data has no prefix
            ## joinSafe is only needed if the delimiter isn't a comma
            q: "{{ queryInputs }}"
            scopes: subject.uniprot.accession
        outputs:
          - id: PUBCHEM.COMPOUND
            semantic: SmallMolecule
        parameters:
          fields: >-
            object.pubchem_cid,subject.name,subject.organism,relation.curation_datasource,relation.pmid,relation.bindingdb_link,relation.article_doi,relation.patent_number
          size: 1000
        ## inverse of actively_involved_in
        predicate: actively_involves
        source: "infores:bindingdb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ligand"
        # testExamples:
        #   - qInput: "P35372"                    ## OPRM_HUMAN, Mu-type opioid receptor 
        #     oneOutput: "ROYXDGLMJNEUEM-GOSISDBHSA-N"     ## InChI=1S/C36H37Cl2N3O6/c37-26-16-39-17-27(38)31(26)32-25(33(47-41-32)22-4-5-22)19-46-36-11-8-35(9-12-36,10-13-36)20-45-23-6-7-28-24(14-23)30(15-29(40-28)34(42)43)44-18-21-2-1-3-21/h6-7,14-17,21-22H,1-5,8-13,18-20H2,(H,42,43)
  x-bte-response-mapping:
    ligand:
      PUBCHEM.COMPOUND: object.pubchem_cid   ## no prefix
      protein_name: subject.name
      target_organism: subject.organism
      datasource: relation.curation_datasource
      pmid: relation.pmid
      bindingdb_link: relation.bindingdb_link
      article_doi: relation.article_doi
      patent_number: relation.patent_number
    protein:
      UniProtKB: subject.uniprot.accession  ## no prefix
      protein_name: subject.name
      target_organism: subject.organism
      datasource: relation.curation_datasource
      pmid: relation.pmid
      bindingdb_link: relation.bindingdb_link
      article_doi: relation.article_doi
      patent_number: relation.patent_number
