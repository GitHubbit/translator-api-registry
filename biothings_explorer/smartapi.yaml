openapi: 3.0.1
info:
  contact:
    email: kevinxin@scripps.edu
    name: Jiwen Xin
    url: https://github.com/kevinxin90
  description: A ReasonerStdAPI for BioThings Explorer
  termsOfService: https://biothings.io/about
  title: BioThings Explorer ReasonerStdAPI
  version: 1.0.0
  x-trapi:
    version: 1.0.0
  x-translator:
    component: ARA
    team:
      - Exploring Agent
servers:
- url: https://api.bte.ncats.io
tags:
- name: 1.0.0
- name: 0.9.2
- name: translator
- name: trapi
- name: biothings
- name: metadata
- name: query
paths:
  /metakg:
    get:
      parameters:
      - description: The subject type of the association, e.g. Gene
        example: Gene
        in: query
        name: subject
        schema:
          type: string
      - description: The object type of the association, e.g. ChemicalSubstance
        example: ChemicalSubstance
        in: query
        name: object
        schema:
          type: string
      - description: The predicate of the association, e.g. Gene
        example: physically_interacts_with
        in: query
        name: predicate
        schema:
          type: string
      - description: The API providing the association, e.g. MyChem.info API
        example: MyChem.info API
        in: query
        name: api
        schema:
          type: string
      - description: The data source providing the association, e.g. drugbank
        example: drugbank
        in: query
        name: provided_by
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                description: Array of all associations
                items:
                  properties:
                    api:
                      description: The api providing the association, e.g. MyChem.info
                      properties:
                        name:
                          description: The api providing the association, e.g. MyChem.info
                          example: MyChem.info API
                          type: string
                        smartapi:
                          description: smartapi related data
                          properties:
                            id:
                              description: unique smartapi id for the api
                              example: 8f08d1446e0bb9c2b323713ce83e2bd3
                              type: string
                            metadata:
                              description: the url for smartapi specification
                              example: https://raw.githubusercontent.com/NCATS-Tangerine/translator-api-registry/master/mychem.info/openapi_full.yml
                              type: string
                            ui:
                              description: the web UI url for the API
                              example: https://smart-api.info/ui/8f08d1446e0bb9c2b323713ce83e2bd3
                              type: string
                          type: object
                      type: object
                    object:
                      description: The object type of the association, e.g. ChemicalSubstance
                      example: ChemicalSubstance
                      type: string
                    predicate:
                      description: The predicate of the association, e.g. physically_interacts_with
                      example: physically_interacts_with
                      type: string
                    provided_by:
                      description: The data source providing the association, e.g.
                        ChEMBL
                      example: ChEMBL
                      type: string
                    subject:
                      description: The subject type of the association, e.g. Gene
                      example: Gene
                      type: string
                  type: object
                type: array
          description: Association information including subject, object, predicate,
            api, provided_by and smartapi info.
      summary: retrieve associations within smartapi, if no parameters provided, will
        return all associations
      tags:
      - metadata
  /predicates:
    get:
      responses:
        '200':
          content:
            application/json:
              schema:
                additionalProperties:
                  additionalProperties:
                    description: Array of predicates
                    items:
                      type: string
                    type: array
                  description: Target map
                  type: object
                description: Source map
                example:
                  chemical_substance:
                    chemical_substance:
                    - correlated_with
                type: object
          description: Predicates by source and target
      summary: Get supported relationships by source and target
      tags:
      - metadata
      - 0.9.2
  /v1/predicates:
    get:
      tags:
        - predicates
        - 1.0.0
      summary: Get supported relationships by source and target
      responses:
        '200':
          description: Predicates by source and target
          content:
            application/json:
              schema:
                description: Source map
                type: object
                additionalProperties:
                  description: Target map
                  type: object
                  additionalProperties:
                    description: Array of predicates
                    type: array
                    items:
                      type: string
                example:
                  'biolink:ChemicalSubstance':
                    'biolink:Gene':
                      - biolink:directly_interacts_with
                      - biolink:decreases_activity_of
  /v1/smartapi/{smartapi_id}/predicates:
    get:
      tags:
        - predicates
        - 1.0.0
      summary: Get supported relationships by source and target for individual smartAPI
      parameters:
        - description: SmartAPI ID of an API, you can get it from https://smart-api.info/registry
          example: 978fe380a147a8641caf72320862697b
          in: path
          name: smartapi_id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Predicates by source and target
          content:
            application/json:
              schema:
                description: Source map
                type: object
                additionalProperties:
                  description: Target map
                  type: object
                  additionalProperties:
                    description: Array of predicates
                    type: array
                    items:
                      type: string
                example:
                  'biolink:ChemicalSubstance':
                    'biolink:Gene':
                      - biolink:directly_interacts_with
                      - biolink:decreases_activity_of
  /v1/team/{team_name}/predicates:
    get:
      tags:
        - predicates
        - 1.0.0
      summary: Get supported relationships by source and target for a KP/ARA team
      parameters:
        - description: Translator Team Name, e.g. Service Provider, Multiomics Provider
          example: Multiomics Provider
          in: path
          name: team_name
          required: true
          schema:
            type: string
            enum:
              - Multiomics Provider
              - Text Mining Provider
              - Service Provider
      responses:
        '200':
          description: Predicates by source and target
          content:
            application/json:
              schema:
                description: Source map
                type: object
                additionalProperties:
                  description: Target map
                  type: object
                  additionalProperties:
                    description: Array of predicates
                    type: array
                    items:
                      type: string
                example:
                  'biolink:ChemicalSubstance':
                    'biolink:Gene':
                      - biolink:directly_interacts_with
                      - biolink:decreases_activity_of
  /v1/query:
    post:
      tags:
        - query
        - 1.0.0
      summary: Query BioThings Explorer TRAPI API as ARA
      description: ''
      operationId: query
      requestBody:
        description: Query information to be submitted
        required: true
        content:
          application/json:
            example:
              message:
                query_graph:
                  edges:
                    e00:
                      subject: n00
                      object: n01
                  nodes:
                    n00:
                      category: "biolink:Disease"
                      id: "MONDO:0005737"
                    n01:
                      category: "biolink:ChemicalSubstance"
            schema:
              $ref: '#/components/schemas/Query'
      responses:
        '200':
          description: >-
            OK. There may or may not be results. Note that some of the provided
            identifiers may not have been recognized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '400':
          description: >-
            Bad request. The request is invalid according to this OpenAPI
            schema OR a specific identifier is believed to be invalid somehow
            (not just unrecognized).
          content:
            application/json:
              schema:
                type: string
        '500':
          description: >-
            Internal server error.
          content:
            application/json:
              schema:
                type: string
        '501':
          description: >-
            Not implemented.
          content:
            application/json:
              schema:
                type: string
      x-swagger-router-controller: swagger_server.controllers.query_controller
  /v1/smartapi/{smartapi_id}/query:
    post:
      tags:
        - query
        - 1.0.0
      summary: Query individual SmartAPI as TRAPI service using SmartAPI ID
      description: ''
      operationId: querySmartAPI
      parameters:
        - description: SmartAPI ID of an API, you can get it from https://smart-api.info/registry
          example: 978fe380a147a8641caf72320862697b
          in: path
          name: smartapi_id
          required: true
          schema:
            type: string
      requestBody:
        description: Query information to be submitted
        required: true
        content:
          application/json:
            example:
              message:
                query_graph:
                  edges:
                    e00:
                      subject: n00
                      object: n01
                  nodes:
                    n00:
                      category: "biolink:Gene"
                      id: "NCBIGene:1017"
                    n01:
                      category: "biolink:ChemicalSubstance"
            schema:
              $ref: '#/components/schemas/Query'
      responses:
        '200':
          description: >-
            OK. There may or may not be results. Note that some of the provided
            identifiers may not have been recognized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '400':
          description: >-
            Bad request. The request is invalid according to this OpenAPI
            schema OR a specific identifier is believed to be invalid somehow
            (not just unrecognized).
          content:
            application/json:
              schema:
                type: string
        '500':
          description: >-
            Internal server error.
          content:
            application/json:
              schema:
                type: string
        '501':
          description: >-
            Not implemented.
          content:
            application/json:
              schema:
                type: string
      x-swagger-router-controller: swagger_server.controllers.query_controller
  /v1/team/{team_name}/query:
    post:
      tags:
        - query
        - 1.0.0
      summary: Query individual Translator team as individual TRAPI service using team name
      description: ''
      operationId: queryTeam
      parameters:
        - description: Translator Team Name, e.g. Service Provider, Multiomics Provider
          example: Text Mining Provider
          in: path
          name: team_name
          required: true
          schema:
            type: string
            enum:
              - Multiomics Provider
              - Text Mining Provider
              - Service Provider
      requestBody:
        description: Query information to be submitted
        required: true
        content:
          application/json:
            example:
              message:
                query_graph:
                  edges:
                    e00:
                      subject: n00
                      object: n01
                  nodes:
                    n00:
                      category: "biolink:Gene"
                      id: "NCBIGene:1017"
                    n01:
                      category: "biolink:ChemicalSubstance"
            schema:
              $ref: '#/components/schemas/Query'
      responses:
        '200':
          description: >-
            OK. There may or may not be results. Note that some of the provided
            identifiers may not have been recognized.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Response'
        '400':
          description: >-
            Bad request. The request is invalid according to this OpenAPI
            schema OR a specific identifier is believed to be invalid somehow
            (not just unrecognized).
          content:
            application/json:
              schema:
                type: string
        '500':
          description: >-
            Internal server error.
          content:
            application/json:
              schema:
                type: string
        '501':
          description: >-
            Not implemented.
          content:
            application/json:
              schema:
                type: string
      x-swagger-router-controller: swagger_server.controllers.query_controller
  /query/:
    post:
      requestBody:
        content:
          application/json:
            example:
              message:
                query_graph:
                  edges:
                  - id: e00
                    source_id: n00
                    target_id: n01
                  - id: e01
                    source_id: n01
                    target_id: n02
                  nodes:
                  - curie: MONDO:0005737
                    id: n00
                    type: disease
                  - id: n01
                    set: true
                    type: gene
                  - id: n02
                    type: chemical_substance
            schema:
              $ref: '#/components/schemas/Query'
        description: A message with question graph.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: A message with knowledge graph and answers.
      summary: Get answers to a question
      tags:
      - 0.9.2
      - query
  /smartapi/{smartapi_id}/query/:
    post:
      parameters:
      - description: SmartAPI ID of an API, you can get it from https://smart-api.info/registry
        example: 978fe380a147a8641caf72320862697b
        in: path
        name: smartapi_id
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            example:
              message:
                query_graph:
                  edges:
                  - id: e00
                    source_id: n00
                    target_id: n01
                  nodes:
                  - curie: NCBIGene:1017
                    id: n00
                    type: gene
                  - id: n01
                    type: chemical_substance
            schema:
              $ref: '#/components/schemas/Query'
        description: A message with question graph.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: A message with knowledge graph and answers.
      summary: Get answers to a question using a specific API
      tags:
      - 0.9.2
      - query
  /source/{source_name}/query/:
    post:
      parameters:
      - description: The name of the data source
        example: drugbank
        in: path
        name: source_name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            example:
              message:
                query_graph:
                  edges:
                  - id: e00
                    source_id: n00
                    target_id: n01
                  nodes:
                  - curie: NCBIGene:1017
                    id: n00
                    type: gene
                  - id: n01
                    type: chemical_substance
            schema:
              $ref: '#/components/schemas/Query'
        description: A message with question graph.
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
          description: A message with knowledge graph and answers.
      summary: Get answers to a question using a specific data source.
      tags:
      - 0.9.2
      - query
components:
  schemas:
    BiolinkEntity:
      description: A subclass of named_thing (snake_case)
      example: disease
      externalDocs:
        description: Biolink model entities
        url: https://biolink.github.io/biolink-model/docs/NamedThing.html
      type: string
    BiolinkRelation:
      description: A relation, i.e. child of related_to (snake_case)
      example: affects
      externalDocs:
        description: Biolink model relations
        url: https://biolink.github.io/biolink-model/docs/related_to.html
      type: string
    Credentials:
      description: Credentials needed for programmatic access to the remote knowledge
        graph
      properties:
        password:
          description: Password needed for programmatic access to the remote knowledge
            graph
          type: string
        username:
          description: Username needed for programmatic access to the remote knowledge
            graph
          type: string
      required:
      - username
      - password
      type: object
    EdgeBinding:
      properties:
        kg_id:
          oneOf:
          - type: string
          - items:
              type: string
            type: array
        qg_id:
          type: string
      required:
      - qg_id
      - kg_id
      type: object
    KEdge:
      description: An edge in the thought subgraph linking two nodes
      properties:
        id:
          description: Local identifier for this node which is unique within this
            KnowledgeGraph, and perhaps within the source reasoner's knowledge graph
          example: '553903'
          type: string
        source_id:
          description: Corresponds to the @id of source node of this edge
          example: https://omim.org/entry/603903
          type: string
        target_id:
          description: Corresponds to the @id of target node of this edge
          example: https://www.uniprot.org/uniprot/P00738
          type: string
        type:
          $ref: '#/components/schemas/BiolinkRelation'
      required:
      - id
      - source_id
      - target_id
      type: object
    KNode:
      description: A node in the thought subgraph
      properties:
        id:
          description: CURIE identifier for this node
          example: OMIM:603903
          type: string
        name:
          description: Formal name of the entity
          example: Haptoglobin
          type: string
        type:
          description: Entity type of this node (e.g., protein, disease, etc.)
          example:
          - protein
          items:
            type: string
          type: array
      required:
      - id
      type: object
    KnowledgeGraph:
      description: A thought graph associated with this result. This will commonly
        be a linear path subgraph from one concept to another, but related items aside
        of the path may be included.
      properties:
        edges:
          description: List of edges in the KnowledgeGraph
          items:
            $ref: '#/components/schemas/KEdge'
          type: array
        nodes:
          description: List of nodes in the KnowledgeGraph
          items:
            $ref: '#/components/schemas/KNode'
          type: array
      required:
      - nodes
      - edges
      type: object
    Message:
      properties:
        knowledge_graph:
          description: KnowledgeGraph object that contains all the nodes and edges
            referenced in any of the possible answers to the query OR connection information
            for a remote knowledge graph
          oneOf:
          - $ref: '#/components/schemas/KnowledgeGraph'
          - $ref: '#/components/schemas/RemoteKnowledgeGraph'
          type: object
        query_graph:
          $ref: '#/components/schemas/QueryGraph'
          description: QueryGraph object that contains a serialization of a query
            in the form of a graph
          type: object
        results:
          description: List of all returned potential answers for the query posed
          items:
            $ref: '#/components/schemas/Result'
          type: array
      type: object
    NodeBinding:
      properties:
        kg_id:
          oneOf:
          - type: string
          - items:
              type: string
            type: array
        qg_id:
          type: string
      required:
      - qg_id
      - kg_id
      type: object
    QEdge:
      description: An edge in the QueryGraph
      properties:
        id:
          description: 'QueryGraph internal identifier for this QEdge. Recommended
            form: e00, e01, e02, etc.'
          example: e00
          type: string
        source_id:
          description: Corresponds to the @id of source node of this edge
          type: string
        target_id:
          description: Corresponds to the @id of target node of this edge
          type: string
        type:
          oneOf:
          - $ref: '#/components/schemas/BiolinkRelation'
          - items:
              $ref: '#/components/schemas/BiolinkRelation'
            type: array
      required:
      - id
      - source_id
      - target_id
      type: object
    QNode:
      description: A node in the QueryGraph
      properties:
        curie:
          description: CURIE identifier for this node
          example: OMIM:603903
          oneOf:
          - type: string
          - items:
              type: string
            type: array
        id:
          description: 'QueryGraph internal identifier for this QNode. Recommended
            form: n00, n01, n02, etc.'
          example: n00
          type: string
        type:
          oneOf:
          - $ref: '#/components/schemas/BiolinkEntity'
          - description: Entity types of this node (e.g., protein, disease, etc.)
            example:
            - disease
            - genetic_condition
            items:
              $ref: '#/components/schemas/BiolinkEntity'
            type: array
      required:
      - id
      type: object
    Query:
      properties:
        message:
          $ref: '#/components/schemas/Message'
      required:
      - message
      type: object
      x-body-name: request_body
    QueryGraph:
      description: A graph intended to be the thought path to be followed by a reasoner
        to answer the question. This graph is a representation of a question.
      properties:
        edges:
          description: List of edges in the QueryGraph
          items:
            $ref: '#/components/schemas/QEdge'
          type: array
        nodes:
          description: List of nodes in the QueryGraph
          items:
            $ref: '#/components/schemas/QNode'
          type: array
      required:
      - nodes
      - edges
      type: object
    RemoteKnowledgeGraph:
      description: A thought graph associated with this result that is not repeated
        here, but stored elsewhere in a way that can be remotely accessed by the reader
        of this Message
      properties:
        credentials:
          $ref: '#/components/schemas/Credentials'
          description: Credentials needed for programmatic access to the remote knowledge
            graph
          type: object
        url:
          description: URL that provides programmatic access to the remote knowledge
            graph
          example: http://robokop.renci.org/api/kg
          type: string
      required:
      - url
      - credentials
      type: object
    Result:
      description: One of potentially several results or answers for a query
      properties:
        edge_bindings:
          description: List of QEdge-KEdge bindings.
          items:
            $ref: '#/components/schemas/EdgeBinding'
          type: array
        node_bindings:
          description: List of QNode-KNode bindings.
          items:
            $ref: '#/components/schemas/NodeBinding'
          type: array
        score:
          description: Any type of score associated with this result
          example: 163.233
          format: float
          type: number
      required:
      - node_bindings
      - edge_bindings
      type: object
    Response:
      type: object
      description: >-
        The Response object contains the main payload when a TRAPI query
        endpoint interprets and responds to the submitted query successfully
        (i.e., HTTP Status Code 200). The message property contains the
        knowledge of the response (query graph, knowledge graph, and results).
        The status, description, and logs properties provide additional details
        about the response.
      properties:
        message:
          description: >-
            Contains the knowledge of the response (query graph, knowledge
            graph, and results).
          $ref: '#/components/schemas/Message'
        status:
          description: >-
            One of a standardized set of short codes,
            e.g. Success, QueryNotTraversable, KPsNotAvailable
          type: string
          example: Success
        description:
          description: A brief human-readable description of the outcome
          type: string
          example: Success. 42 results found.
        logs:
          description: >-
            Log entries containing errors, warnings, debugging information, etc
          type: array
          items:
            $ref: '#/components/schemas/LogEntry'
      required:
        - message
    LogEntry:
      type: object
      properties:
        timestamp:
          type: string
          format: date-time
          description: Timestamp in ISO 8601 format
          example: '2020-09-03T18:13:49+00:00'
        level:
          type: string
          description: Logging level
          enum:
            - ERROR
            - WARNING
            - INFO
            - DEBUG
        code:
          type: string
          description: >-
            One of a standardized set of short codes
            e.g. QueryNotTraversable, KPNotAvailable, KPResponseMalformed
        message:
          type: string
          description: A human-readable log message
