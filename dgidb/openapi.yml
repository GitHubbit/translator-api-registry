openapi: 3.0.0
info:
  contact:
    email: help@biothings.io
    name: BioThings Team
    x-id: https://github.com/biothings
    x-role: responsible developers
  description: Documentation of the BioThings DGIdb query web services.
  termsOfService: https://biothings.io/about
  title: BioThings DGIdb API
  version: '4.2.0'
  x-translator:
    infores: "infores:biothings-dgidb"
    component: KP
    team:
      - Service Provider
    biolink-version: "2.2.13"
## during updates, update the paths' examples!!! association get and query get/post
## I'm having trouble setting a request body example for query-post...
servers:
- description: Encrypted Production server
  url: https://biothings.ncats.io/dgidb
  x-maturity: production
- description: Production server
  url: http://biothings.ncats.io/dgidb
  x-maturity: production
tags:
- name: gene
- name: chemical
- name: association
- name: annotation
- name: query
- name: translator
- name: biothings
- name: biothings_graph
paths:
  /association/{associationid}:
    get:
      parameters:
      - description: Retrieve association objects based on Association ID  Supports
          JSONP and CORS as well.
        example: '1fb7c7f0ef333cd2'
        in: path
        name: associationid
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/dotfield'
        name: dotfield
      - $ref: '#/components/parameters/callback'
        name: callback
      - $ref: '#/components/parameters/fields'
        name: fields
      - $ref: '#/components/parameters/email'
        name: email
      - $ref: '#/components/parameters/format'
        name: format
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Association'
          description: A matching association object
        '404':
          description: A response indicating an unknown association ID
      summary: Retrieve association objects based on ID
      tags:
      - association
  /metadata:
    get:
      parameters:
      - $ref: '#/components/parameters/callback'
        in: query
        name: callback
      responses:
        '200':
          description: KP metadata object
      summary: Get metadata about the data available from the API
      tags:
      - metadata
  /metadata/fields:
    get:
      parameters:
      - $ref: '#/components/parameters/search'
        name: search
      - $ref: '#/components/parameters/callback'
        name: callback
      - $ref: '#/components/parameters/prefix'
        name: prefix
      - $ref: '#/components/parameters/format'
        name: format
      responses:
        '200':
          description: metadata fields object
      summary: Get metadata about the data fields available
      tags:
      - metadata
  /query:
    get:
      parameters:
      - description: Query string.
        example: "subject.CHEMBL_COMPOUND:CHEMBL1017"
        in: query
        name: q
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/dotfield'
        name: dotfield
      - $ref: '#/components/parameters/fields'
        name: fields
      - $ref: '#/components/parameters/facet_size'
        name: facet_size
      - $ref: '#/components/parameters/sort'
        name: sort
      - $ref: '#/components/parameters/callback'
        name: callback
      - $ref: '#/components/parameters/email'
        name: email
      - $ref: '#/components/parameters/facets'
        name: facets
      - $ref: '#/components/parameters/size'
        name: size
      - $ref: '#/components/parameters/from'
        name: from
      - $ref: '#/components/parameters/format'
        name: format
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult'
          description: A query response with the "hits" property
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: A response indicating an improperly formatted query
      summary: Make queries and return matching association hits. Supports JSONP and CORS
        as well.
      tags:
      - query
    post:
      parameters:
      - $ref: '#/components/parameters/dotfield'
        name: dotfield
      - $ref: '#/components/parameters/email'
        name: email
      - $ref: '#/components/parameters/fields'
        name: fields
      - $ref: '#/components/parameters/size'
        name: size
      - $ref: '#/components/parameters/format'
        name: format
      requestBody:
        content:
          application/x-www-form-urlencoded:
          ## commenting out the example since it's not working
          ## using a simpler format because of the schema. 
          ## In reality, this schema would need to be expanded to support the multiple ways of querying this API
            # examples:
            #   query_post:  ## example's name
            #     value:     ## this is where the example actually goes
            #       q: 'CHEMBL266510'
            #       scopes: 'subject.CHEMBL_COMPOUND'
            schema:
              properties:
                q:
                  description: multiple query terms separated by comma (also "+" or
                    whitespace).  Does not support wildcard queries
                  type: string
                scopes:
                  description: 'a comma-separated list of fields as the search "scopes"
                    (fields to search through for query term). The available "fields"
                    that can be passed to the "scopes" parameter are listed in the
                    **/metadata/fields** endpoint.string Default: "scopes=_id".'
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryPOSTResult'
          description: Query response objects with the "hits" property
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: A response indicating an improperly formatted query
      summary: Make batch disease queries and return matching disease hits
      tags:
      - query
      ## 12 sets (24 operations)
      x-bte-kgs-operations:
      - $ref: '#/components/x-bte-kgs-operations/activator'
      - $ref: '#/components/x-bte-kgs-operations/activator-rev'
      - $ref: '#/components/x-bte-kgs-operations/agonist'
      - $ref: '#/components/x-bte-kgs-operations/agonist-rev'
      - $ref: '#/components/x-bte-kgs-operations/allosteric_modulator'
      - $ref: '#/components/x-bte-kgs-operations/allosteric_modulator-rev'
      - $ref: '#/components/x-bte-kgs-operations/antagonist'
      - $ref: '#/components/x-bte-kgs-operations/antagonist-rev'
      - $ref: '#/components/x-bte-kgs-operations/antibody'
      - $ref: '#/components/x-bte-kgs-operations/antibody-rev'
## commenting out because there's only 4 records for this set of operations
      # - $ref: '#/components/x-bte-kgs-operations/antisense_oligonucleotide'
      # - $ref: '#/components/x-bte-kgs-operations/antisense_oligonucleotide-rev'
      - $ref: '#/components/x-bte-kgs-operations/blocker'
      - $ref: '#/components/x-bte-kgs-operations/blocker-rev'
## commenting out because there's only 1 record for this set of operations
      # - $ref: '#/components/x-bte-kgs-operations/inducer'
      # - $ref: '#/components/x-bte-kgs-operations/inducer-rev'
      - $ref: '#/components/x-bte-kgs-operations/inhibitor'
      - $ref: '#/components/x-bte-kgs-operations/inhibitor-rev'
## commenting out because there's only 1 record for this set of operations
      # - $ref: '#/components/x-bte-kgs-operations/inhibitory_allosteric_modulator'
      # - $ref: '#/components/x-bte-kgs-operations/inhibitory_allosteric_modulator-rev'
      - $ref: '#/components/x-bte-kgs-operations/inverse_agonist'
      - $ref: '#/components/x-bte-kgs-operations/inverse_agonist-rev'
      - $ref: '#/components/x-bte-kgs-operations/modulator'
      - $ref: '#/components/x-bte-kgs-operations/modulator-rev'
## commenting out because there's only 5 records for this set of operations
      # - $ref: '#/components/x-bte-kgs-operations/negative_modulator'
      # - $ref: '#/components/x-bte-kgs-operations/negative_modulator-rev'
      - $ref: '#/components/x-bte-kgs-operations/no_dgidb_relationship'
      - $ref: '#/components/x-bte-kgs-operations/no_dgidb_relationship-rev'
      - $ref: '#/components/x-bte-kgs-operations/partial_agonist'
      - $ref: '#/components/x-bte-kgs-operations/partial_agonist-rev'
      - $ref: '#/components/x-bte-kgs-operations/positive_modulator'
      - $ref: '#/components/x-bte-kgs-operations/positive_modulator-rev'
## commenting out because there's only 1 record for this set of operations
      # - $ref: '#/components/x-bte-kgs-operations/suppressor'
      # - $ref: '#/components/x-bte-kgs-operations/suppressor-rev'
## commenting out because there's only 8 records for this set of operations
      # - $ref: '#/components/x-bte-kgs-operations/vaccine'
      # - $ref: '#/components/x-bte-kgs-operations/vaccine-rev'
components:
  parameters:
    callback:
      description: 'you can pass a "callback" parameter to make a JSONP call. Type:
        string.'
      in: query
      name: callback
      schema:
        type: string
    dotfield:
      description: 'control the format of the returned chem object. If "true" or "1",
        all fields will be collapsed into a single level deep object (all nested objects
        will be a single level deep, using dotfield notation to signify the nested
        structure) Type: boolean. Default: false.'
      in: query
      name: dotfield
      schema:
        type: boolean
    email:
      description: If you are regular users of our services, we encourage you to provide
        us with an email, so that we can better track the usage or follow up with
        you.
      in: query
      name: email
      schema:
        type: string
    facet_size:
      description: 'the number of facet buckets to return in the response. Type: integer.
        Default: 10. Max: 1000.'
      in: query
      name: facet_size
      schema:
        type: integer
    facets:
      description: 'a comma-separated list of fields to return facets on.  In addition
        to query hits, the fields notated in "facets" will be aggregated by value
        and bucklet counts will be displayed in the "facets" field of the response
        object. Type: string (list). Default: None. Max: 1000.'
      in: query
      name: facets
      schema:
        type: string
    fields:
      description: 'a comma-separated list of fields (in dotfield notation) used to
        limit the fields returned from the matching chem hit(s). The supported field
        names can be found from any chem object or from the /metadata/fields endpoint.
        If "fields=all", all available fields will be returned. Type: string (list).
        Default: all. Max: 1000.'
      in: query
      name: fields
      schema:
        type: string
    format:
      description: 'controls output format of server response, currently supports:
        "json", "jsonld", "html". Type: string. Default: json.'
      in: query
      name: format
      schema:
        type: string
    from:
      description: 'the number of matching chem hits to skip, starting from 0.  This
        can be useful for paging in combination with the "size" parameter. Type: integer.
        Default: None.'
      in: query
      name: from
      schema:
        type: integer
    prefix:
      description: 'Pass a prefix string to filter the available fields. Type: string.
        Default: None.'
      in: query
      name: prefix
      schema:
        type: string
    search:
      description: 'Pass a search term to filter the available fields. Type: string.
        Default: None.'
      in: query
      name: search
      schema:
        type: string
    size:
      description: 'the maximum number of matching chem hits to return per batch.
        Type: integer. Default: 10.'
      in: query
      name: size
      schema:
        type: integer
    sort:
      description: 'the comma-separated list of fields to sort on. Prefix each with
        "-" for descending order, otherwise in ascending order. Default: sort by descending
        score.'
      in: query
      name: sort
      schema:
        type: string
  schemas:
    Association:
      properties:
        _id:
          type: string
      required:
      - _id
      type: object
    ErrorResult:
      properties:
        message:
          type: string
        success:
          type: boolean
      type: object
    QueryPOSTResult:
      items:
        allOf:
        - $ref: '#/components/schemas/Association'
        - properties:
            _score:
              format: float
              type: number
            query:
              type: string
          type: object
      type: array
    QueryResult:
      properties:
        hits:
          items:
            $ref: '#/components/schemas/Association'
          type: array
        max_score:
          format: float
          type: number
        took:
          type: integer
        total:
          type: integer
      type: object
    int64_or_array:
      oneOf:
      - items:
          format: int64
          type: integer
        type: array
      - format: int64
        type: integer
    string_or_array:
      oneOf:
      - items:
          type: string
        type: array
      - type: string
  x-bte-kgs-operations:
  ## - future: we could ingest subject.drug_name and object.SYMBOL fields
  ## - we will only use records with subject.CHEMBL_COMPOUND
  ##   - only 154 records don't have this field: https://pending.biothings.io/dgidb/query?q=NOT%20_exists_:subject.CHEMBL_COMPOUND
  ##     those drugs may have had a name or wikidata ID that couldn't be mapped to chembl in MyChem. 
  ## - all records have object.NCBIGene
  ## - for interaction_claim_source info, see https://dgidb.org/sources 
  ## - for interaction_types info, see https://dgidb.org/interaction_types
  ##   Most records did not have a value for that column. We put the value to "not_applicable" in those cases...
  ## - for interaction_group_score info, see https://dgidb.org/score
  ## - only some records have PMIDs. all records have interaction_group_score, interaction_claim_source
  ## - in the future, could edit parser + queries to handle prefixes
  ## - joinSafe is only needed if the delimiter isn't a comma
    activator:
    ## https://biothings.ncats.io/dgidb/query?q=association.interaction_types:activator
    ## 195 records
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: "CHEMBL.COMPOUND"
            semantic: SmallMolecule
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","activator"]') }} ],
              "scopes": ["subject.CHEMBL_COMPOUND", "association.interaction_types"]
            }
        parameters:
          fields: >-
            object.NCBIGene,association.interaction_group_score,
            association.interaction_claim_source,association.pmids,association.interaction_types
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        ## for biolink 2.2.8, DGIdb:activator and CHEMBL.MECHANISM:activator map to the mixin positively_regulates (under regulates)
        ##                    vs GAMMA:activator maps to increases_activity_of (under affects)
        ## CX decided to use the entity-entity version of positively_regulates, after reading some triples' linked pubmed papers
        predicate: entity_positively_regulates_entity
        source: "infores:dgidb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/forward"
        # testExamples:
        #   - qInput: "CHEMBL.COMPOUND:CHEMBL266510"   ## FLINDOKALNER
        #     oneOutput: "NCBIGene:9132"               ## KCNQ4
    activator-rev:
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","activator"]') }} ],
              "scopes": ["object.NCBIGene", "association.interaction_types"]
            }
        parameters:
          fields: >-
            subject.CHEMBL_COMPOUND,association.interaction_group_score,
            association.interaction_claim_source,association.pmids,association.interaction_types
          size: 1000
        outputs:
          - id: "CHEMBL.COMPOUND"
            semantic: SmallMolecule
        ## for biolink 2.2.8, DGIdb:activator and CHEMBL.MECHANISM:activator map to the mixin positively_regulates (under regulates)
        ##                    vs GAMMA:activator maps to increases_activity_of (under affects)
        ## CX decided to use the entity-entity version of positively_regulates, after reading some triples' linked pubmed papers
        predicate: entity_positively_regulated_by_entity
        source: "infores:dgidb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/reverse"
        # testExamples:
        #   - qInput: "NCBIGene:2983"                 ## GUCY1B1
        #     oneOutput: "CHEMBL.COMPOUND:CHEMBL730   ## NITROGLYCERIN
    agonist:
    ## https://biothings.ncats.io/dgidb/query?q=association.interaction_types:agonist
    ## 2234 records
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: "CHEMBL.COMPOUND"
            semantic: SmallMolecule
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","agonist"]') }} ],
              "scopes": ["subject.CHEMBL_COMPOUND", "association.interaction_types"]
            }
        parameters:
          fields: >-
            object.NCBIGene,association.interaction_group_score,
            association.interaction_claim_source,association.pmids,association.interaction_types
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        ## for biolink 2.2.8, DGIdb:agonist maps to this predicate
        predicate: increases_activity_of
        source: "infores:dgidb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/forward"
        # testExamples:
        #   - qInput: "CHEMBL.COMPOUND:CHEMBL1200833"   ## DIPIVEFRIN HYDROCHLORIDE
        #     oneOutput: "NCBIGene:155"                 ## ADRB3
    ## some records have multiple interaction_types
    ## 1 record, agonist + allosteric_modulator: https://pending.biothings.io/dgidb/query?q=association.interaction_types:agonist%20AND%20association.interaction_types:allosteric_modulator
    ## 17 records, agonist + antagonist: https://pending.biothings.io/dgidb/query?q=association.interaction_types:agonist%20AND%20association.interaction_types:antagonist
    agonist-rev:
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","agonist"]') }} ],
              "scopes": ["object.NCBIGene", "association.interaction_types"]
            }
        parameters:
          fields: >-
            subject.CHEMBL_COMPOUND,association.interaction_group_score,
            association.interaction_claim_source,association.pmids,association.interaction_types
          size: 1000
        outputs:
          - id: "CHEMBL.COMPOUND"
            semantic: SmallMolecule
        ## for biolink 2.2.8, DGIdb:agonist maps to the inverse of this predicate
        predicate: activity_increased_by
        source: "infores:dgidb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/reverse"
        # testExamples:
        #   - qInput: "NCBIGene:1814"                     ## DRD3
        #     oneOutput: "CHEMBL.COMPOUND:CHEMBL2146110   ## SARIZOTAN HYDROCHLORIDE
    allosteric_modulator:
    ## https://biothings.ncats.io/dgidb/query?q=association.interaction_types:allosteric_modulator
    ## 170 records
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: "CHEMBL.COMPOUND"
            semantic: SmallMolecule
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","allosteric_modulator"]') }} ],
              "scopes": ["subject.CHEMBL_COMPOUND", "association.interaction_types"]
            }
        parameters:
          fields: >-
            object.NCBIGene,association.interaction_group_score,
            association.interaction_claim_source,association.pmids,association.interaction_types
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        ## for biolink 2.2.8, DGIdb:allosteric_modulator maps to this predicate
        predicate: affects_activity_of
        source: "infores:dgidb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/forward"
        # testExamples:
        #   - qInput: "CHEMBL.COMPOUND:CHEMBL3305985"   ## ALCURONIUM
        #     oneOutput: "NCBIGene:1132"                ## CHRM4
    allosteric_modulator-rev:
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","allosteric_modulator"]') }} ],
              "scopes": ["object.NCBIGene", "association.interaction_types"]
            }
        parameters:
          fields: >-
            subject.CHEMBL_COMPOUND,association.interaction_group_score,
            association.interaction_claim_source,association.pmids,association.interaction_types
          size: 1000
        outputs:
          - id: "CHEMBL.COMPOUND"
            semantic: SmallMolecule
        ## for biolink 2.2.8, DGIdb:allosteric_modulator maps to the inverse of this predicate
        predicate: activity_affected_by
        source: "infores:dgidb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/reverse"
        # testExamples:
        #   - qInput: "NCBIGene:207"                     ## AKT1
        #     oneOutput: "CHEMBL.COMPOUND:CHEMBL1079175  ## MK-2206
    antagonist:
    ## https://biothings.ncats.io/dgidb/query?q=association.interaction_types:antagonist
    ## 2330 records
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: "CHEMBL.COMPOUND"
            semantic: SmallMolecule
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","antagonist"]') }} ],
              "scopes": ["subject.CHEMBL_COMPOUND", "association.interaction_types"]
            }
        parameters:
          fields: >-
            object.NCBIGene,association.interaction_group_score,
            association.interaction_claim_source,association.pmids,association.interaction_types
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        ## for biolink 2.2.8, DGIdb:antagonist maps to this predicate
        predicate: decreases_activity_of
        ## CX: confusion over whether to use a "negatively_regulates" (what is being done / the process) vs
        ##     "decreases activity of" (the effect)
        ## - def https://dgidb.org/interaction_types and https://en.wikipedia.org/wiki/Receptor_antagonist: 
        ##   antagonists do bind to the protein
        ##   They often "don't induce the protein to do a thing".
        ##   Instead they block the agonist or signal / dampen the response to the agonist or signal...
        ##   think of the drug that blocks a binding site so the body's signals can't bind as often, to reduce overactivity
        source: "infores:dgidb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/forward"
        # testExamples:
        #   - qInput: "CHEMBL.COMPOUND:CHEMBL3545038"   ## S-237648
        #     oneOutput: "NCBIGene:4889"                ## NPY5R
    ## some records have multiple interaction_types
    ## 1 record, antagonist + allosteric_modulator: https://pending.biothings.io/dgidb/query?q=association.interaction_types:allosteric_modulator%20AND%20association.interaction_types:antagonist
    antagonist-rev:
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","antagonist"]') }} ],
              "scopes": ["object.NCBIGene", "association.interaction_types"]
            }
        parameters:
          fields: >-
            subject.CHEMBL_COMPOUND,association.interaction_group_score,
            association.interaction_claim_source,association.pmids,association.interaction_types
          size: 1000
        outputs:
          - id: "CHEMBL.COMPOUND"
            semantic: SmallMolecule
        ## for biolink 2.2.8, DGIdb:antagonist maps to the inverse of this predicate
        predicate: activity_decreased_by
        source: "infores:dgidb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/reverse"
        # testExamples:
        #   - qInput: "NCBIGene:185"                     ## AGTR1
        #     oneOutput: "CHEMBL.COMPOUND:CHEMBL1017     ## TELMISARTAN
    antibody:
    ## https://biothings.ncats.io/dgidb/query?q=association.interaction_types:antibody
    ## 222 records
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: "CHEMBL.COMPOUND"
            semantic: SmallMolecule
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","antibody"]') }} ],
              "scopes": ["subject.CHEMBL_COMPOUND", "association.interaction_types"]
            }
        parameters:
          fields: >-
            object.NCBIGene,association.interaction_group_score,
            association.interaction_claim_source,association.pmids,association.interaction_types
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        ## biolink 2.2.8: using the mapping for GAMMA:antibody, rather than mapping for the relation (molecularly_interacts_with)
        predicate: directly_interacts_with
        source: "infores:dgidb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/forward"
        # testExamples:
        #   - qInput: "CHEMBL.COMPOUND:CHEMBL4297570"   ## AMP-224
        #     oneOutput: "NCBIGene:80380"               ## PDCD1LG2
    antibody-rev:
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","antibody"]') }} ],
              "scopes": ["object.NCBIGene", "association.interaction_types"]
            }
        parameters:
          fields: >-
            subject.CHEMBL_COMPOUND,association.interaction_group_score,
            association.interaction_claim_source,association.pmids,association.interaction_types
          size: 1000
        outputs:
          - id: "CHEMBL.COMPOUND"
            semantic: SmallMolecule
        ## biolink 2.2.8: using the mapping for GAMMA:antibody, rather than mapping for the relation (molecularly_interacts_with)
        predicate: directly_interacts_with
        source: "infores:dgidb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/reverse"
        # testExamples:
        #   - qInput: "NCBIGene:56963"                     ## RGMA
        #     oneOutput: "CHEMBL.COMPOUND:CHEMBL4297743    ## ELEZANUMAB
## commenting out because there's only 4 records for this set of operations
    # antisense_oligonucleotide:
    # ## https://biothings.ncats.io/dgidb/query?q=association.interaction_types:antisense_oligonucleotide
    # ## 4 records
    #   - supportBatch: true
    #     useTemplating: true ## flag to say templating is being used below
    #     inputs:
    #       - id: "CHEMBL.COMPOUND"
    #         semantic: SmallMolecule
    #     requestBodyType: object
    #     requestBody:
    #       body: >-
    #         {
    #           "q": [ {{ queryInputs | wrap( '["' , '","antisense_oligonucleotide"]') }} ],
    #           "scopes": ["subject.CHEMBL_COMPOUND", "association.interaction_types"]
    #         }
    #     parameters:
    #       fields: >-
    #         object.NCBIGene,association.interaction_group_score,
    #         association.interaction_claim_source,association.pmids,association.interaction_types
    #       size: 1000
    #     outputs:
    #       - id: NCBIGene
    #         semantic: Gene
    #     ## for biolink 2.2.8, DGIdb:antisense_oligonucleotide maps to this predicate
    #     predicate: decreases_expression_of
    #     source: "infores:dgidb"
    #     response_mapping:
    #       "$ref": "#/components/x-bte-response-mapping/forward"
    #     # testExamples:
    #     #   - qInput: "CHEMBL.COMPOUND:CHEMBL2108309"   ## CUSTIRSEN
    #     #     oneOutput: "NCBIGene:1191"                ## CLU
    # antisense_oligonucleotide-rev:
    #   - supportBatch: true
    #     useTemplating: true ## flag to say templating is being used below
    #     inputs:
    #       - id: NCBIGene
    #         semantic: Gene
    #     requestBodyType: object
    #     requestBody:
    #       body: >-
    #         {
    #           "q": [ {{ queryInputs | wrap( '["' , '","antisense_oligonucleotide"]') }} ],
    #           "scopes": ["object.NCBIGene", "association.interaction_types"]
    #         }
    #     parameters:
    #       fields: >-
    #         subject.CHEMBL_COMPOUND,association.interaction_group_score,
    #         association.interaction_claim_source,association.pmids,association.interaction_types
    #       size: 1000
    #     outputs:
    #       - id: "CHEMBL.COMPOUND"
    #         semantic: SmallMolecule
    #     ## for biolink 2.2.8, DGIdb:antisense_oligonucleotide maps to the inverse of this predicate
    #     predicate: expression_decreased_by
    #     source: "infores:dgidb"
    #     response_mapping:
    #       "$ref": "#/components/x-bte-response-mapping/reverse"
    #     # testExamples:
    #     #   - qInput: "NCBIGene:332"                     ## BIRC5
    #     #     oneOutput: "CHEMBL.COMPOUND:CHEMBL2219774  ## GATAPARSEN
    blocker:
    ## https://biothings.ncats.io/dgidb/query?q=association.interaction_types:blocker
    ## 1134 records
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: "CHEMBL.COMPOUND"
            semantic: SmallMolecule
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","blocker"]') }} ],
              "scopes": ["subject.CHEMBL_COMPOUND", "association.interaction_types"]
            }
        parameters:
          fields: >-
            object.NCBIGene,association.interaction_group_score,
            association.interaction_claim_source,association.pmids,association.interaction_types
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        ## CX: has the same issue as "antagonist"
        ## - def https://dgidb.org/interaction_types and https://en.wikipedia.org/wiki/Receptor_antagonist: 
        ## for biolink 2.2.8, DGIdb:blocker maps to this predicate
        predicate: decreases_activity_of
        source: "infores:dgidb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/forward"
        # testExamples:
        #   - qInput: "CHEMBL.COMPOUND:CHEMBL91"   ## MICONAZOLE
        #     oneOutput: "NCBIGene:7226"           ## TRPM2
    ## some records have multiple interaction_types
    ## 2 records, blocker + activator: https://pending.biothings.io/dgidb/query?q=association.interaction_types:blocker%20AND%20association.interaction_types:activator
    ## 1 record, blocker + inhibitor: https://pending.biothings.io/dgidb/query?q=association.interaction_types:blocker%20AND%20association.interaction_types:inhibitor
    blocker-rev:
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","blocker"]') }} ],
              "scopes": ["object.NCBIGene", "association.interaction_types"]
            }
        parameters:
          fields: >-
            subject.CHEMBL_COMPOUND,association.interaction_group_score,
            association.interaction_claim_source,association.pmids,association.interaction_types
          size: 1000
        outputs:
          - id: "CHEMBL.COMPOUND"
            semantic: SmallMolecule
        ## for biolink 2.2.8, DGIdb:blocker maps to the inverse of this predicate
        predicate: activity_decreased_by
        source: "infores:dgidb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/reverse"
        # testExamples:
        #   - qInput: "NCBIGene:775"                     ## CACNA1C
        #     oneOutput: "CHEMBL.COMPOUND:CHEMBL1648     ## ISRADIPINE
## commenting out because there's only 1 record for this set of operations
    # inducer:
    # ## https://biothings.ncats.io/dgidb/query?q=association.interaction_types:inducer
    # ## 1 record
    #   - supportBatch: true
    #     useTemplating: true ## flag to say templating is being used below
    #     inputs:
    #       - id: "CHEMBL.COMPOUND"
    #         semantic: SmallMolecule
    #     requestBodyType: object
    #     requestBody:
    #       body: >-
    #         {
    #           "q": [ {{ queryInputs | wrap( '["' , '","inducer"]') }} ],
    #           "scopes": ["subject.CHEMBL_COMPOUND", "association.interaction_types"]
    #         }
    #     parameters:
    #       fields: >-
    #         object.NCBIGene,association.interaction_group_score,
    #         association.interaction_claim_source,association.pmids,association.interaction_types
    #       size: 1000
    #     outputs:
    #       - id: NCBIGene
    #         semantic: Gene
    #     ## for biolink 2.2.8, DGIdb:inducer maps to this predicate
    #     predicate: increases_activity_of
    #     source: "infores:dgidb"
    #     response_mapping:
    #       "$ref": "#/components/x-bte-response-mapping/forward"
    #     # testExamples:
    #     #   - qInput: "CHEMBL.COMPOUND:CHEMBL71263"   ## VADIMEZAN
    #     #     oneOutput: "NCBIGene:7124"           ## TNF
    # inducer-rev:
    #   - supportBatch: true
    #     useTemplating: true ## flag to say templating is being used below
    #     inputs:
    #       - id: NCBIGene
    #         semantic: Gene
    #     requestBodyType: object
    #     requestBody:
    #       body: >-
    #         {
    #           "q": [ {{ queryInputs | wrap( '["' , '","inducer"]') }} ],
    #           "scopes": ["object.NCBIGene", "association.interaction_types"]
    #         }
    #     parameters:
    #       fields: >-
    #         subject.CHEMBL_COMPOUND,association.interaction_group_score,
    #         association.interaction_claim_source,association.pmids,association.interaction_types
    #       size: 1000
    #     outputs:
    #       - id: "CHEMBL.COMPOUND"
    #         semantic: SmallMolecule
    #     ## for biolink 2.2.8, DGIdb:inducer maps to the inverse of this predicate
    #     predicate: activity_increased_by
    #     source: "infores:dgidb"
    #     response_mapping:
    #       "$ref": "#/components/x-bte-response-mapping/reverse"
    #     # testExamples:
    #     #   - qInput: "NCBIGene:7124"                    ## TNF 
    #     #     oneOutput: "CHEMBL.COMPOUND:CHEMBL71263"   ## VADIMEZAN
    inhibitor:
    ## https://biothings.ncats.io/dgidb/query?q=association.interaction_types:inhibitor
    ## 6928 records
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: "CHEMBL.COMPOUND"
            semantic: SmallMolecule
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","inhibitor"]') }} ],
              "scopes": ["subject.CHEMBL_COMPOUND", "association.interaction_types"]
            }
        parameters:
          fields: >-
            object.NCBIGene,association.interaction_group_score,
            association.interaction_claim_source,association.pmids,association.interaction_types
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        ## for biolink 2.2.8, DGIdb:inhibitor maps to this predicate
        predicate: decreases_activity_of
        source: "infores:dgidb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/forward"
        # testExamples:
        #   - qInput: "CHEMBL.COMPOUND:CHEMBL1229517"   ## VEMURAFENIB
        #     oneOutput: "NCBIGene:673"                 ## BRAF
    inhibitor-rev:
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","inhibitor"]') }} ],
              "scopes": ["object.NCBIGene", "association.interaction_types"]
            }
        parameters:
          fields: >-
            subject.CHEMBL_COMPOUND,association.interaction_group_score,
            association.interaction_claim_source,association.pmids,association.interaction_types
          size: 1000
        outputs:
          - id: "CHEMBL.COMPOUND"
            semantic: SmallMolecule
        ## for biolink 2.2.8, DGIdb:inhibitor maps to the inverse of this predicate
        predicate: activity_decreased_by
        source: "infores:dgidb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/reverse"
        # testExamples:
        #   - qInput: "NCBIGene:3481"                      ## IGF2 
        #     oneOutput: "CHEMBL.COMPOUND:CHEMBL2109355"   ## DUSIGITUMAB
## commenting out because there's only 1 record for this set of operations
    # inhibitory_allosteric_modulator:
    # ## https://biothings.ncats.io/dgidb/query?q=association.interaction_types:inhibitory_allosteric_modulator
    # ## 1 record
    #   - supportBatch: true
    #     useTemplating: true ## flag to say templating is being used below
    #     inputs:
    #       - id: "CHEMBL.COMPOUND"
    #         semantic: SmallMolecule
    #     requestBodyType: object
    #     requestBody:
    #       body: >-
    #         {
    #           "q": [ {{ queryInputs | wrap( '["' , '","inhibitory_allosteric_modulator"]') }} ],
    #           "scopes": ["subject.CHEMBL_COMPOUND", "association.interaction_types"]
    #         }
    #     parameters:
    #       fields: >-
    #         object.NCBIGene,association.interaction_group_score,
    #         association.interaction_claim_source,association.pmids,association.interaction_types
    #       size: 1000
    #     outputs:
    #       - id: NCBIGene
    #         semantic: Gene
    #     ## for biolink 2.2.8, DGIdb:inhibitory_allosteric_modulator maps to this predicate
    #     predicate: decreases_activity_of
    #     source: "infores:dgidb"
    #     response_mapping:
    #       "$ref": "#/components/x-bte-response-mapping/forward"
    #     # testExamples:
    #     #   - qInput: "CHEMBL.COMPOUND:CHEMBL1079175"   ## MK-2206
    #     #     oneOutput: "NCBIGene:207"                 ## AKT1
    # inhibitory_allosteric_modulator-rev:
    #   - supportBatch: true
    #     useTemplating: true ## flag to say templating is being used below
    #     inputs:
    #       - id: NCBIGene
    #         semantic: Gene
    #     requestBodyType: object
    #     requestBody:
    #       body: >-
    #         {
    #           "q": [ {{ queryInputs | wrap( '["' , '","inhibitory_allosteric_modulator"]') }} ],
    #           "scopes": ["object.NCBIGene", "association.interaction_types"]
    #         }
    #     parameters:
    #       fields: >-
    #         subject.CHEMBL_COMPOUND,association.interaction_group_score,
    #         association.interaction_claim_source,association.pmids,association.interaction_types
    #       size: 1000
    #     outputs:
    #       - id: "CHEMBL.COMPOUND"
    #         semantic: SmallMolecule
    #     ## for biolink 2.2.8, DGIdb:inhibitory_allosteric_modulator maps to the inverse of this predicate
    #     predicate: activity_decreased_by
    #     source: "infores:dgidb"
    #     response_mapping:
    #       "$ref": "#/components/x-bte-response-mapping/reverse"
    #     # testExamples:
    #     #   - qInput: "NCBIGene:207"                       ## AKT1 
    #     #     oneOutput: "CHEMBL.COMPOUND:CHEMBL1079175"   ## MK-2206
    inverse_agonist:
    ## https://biothings.ncats.io/dgidb/query?q=association.interaction_types:inverse_agonist
    ## 24 records
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: "CHEMBL.COMPOUND"
            semantic: SmallMolecule
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","inverse_agonist"]') }} ],
              "scopes": ["subject.CHEMBL_COMPOUND", "association.interaction_types"]
            }
        parameters:
          fields: >-
            object.NCBIGene,association.interaction_group_score,
            association.interaction_claim_source,association.pmids,association.interaction_types
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        ## for biolink 2.2.8, DGIdb:inverse_agonist maps to this predicate
        predicate: decreases_activity_of
        source: "infores:dgidb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/forward"
        # testExamples:
        #   - qInput: "CHEMBL.COMPOUND:CHEMBL1200986"   ## HALOPERIDOL DECANOATE
        #     oneOutput: "NCBIGene:1814"                ## DRD3
    inverse_agonist-rev:
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","inverse_agonist"]') }} ],
              "scopes": ["object.NCBIGene", "association.interaction_types"]
            }
        parameters:
          fields: >-
            subject.CHEMBL_COMPOUND,association.interaction_group_score,
            association.interaction_claim_source,association.pmids,association.interaction_types
          size: 1000
        outputs:
          - id: "CHEMBL.COMPOUND"
            semantic: SmallMolecule
        ## for biolink 2.2.8, DGIdb:inverse_agonist maps to the inverse of this predicate
        predicate: activity_decreased_by
        source: "infores:dgidb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/reverse"
        # testExamples:
        #   - qInput: "NCBIGene:3356"                       ## HTR2A 
        #     oneOutput: "CHEMBL.COMPOUND:CHEMBL1084617"    ## TEMANOGREL
    modulator:
    ## https://biothings.ncats.io/dgidb/query?q=association.interaction_types:modulator
    ## 222 records
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: "CHEMBL.COMPOUND"
            semantic: SmallMolecule
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","modulator"]') }} ],
              "scopes": ["subject.CHEMBL_COMPOUND", "association.interaction_types"]
            }
        parameters:
          fields: >-
            object.NCBIGene,association.interaction_group_score,
            association.interaction_claim_source,association.pmids,association.interaction_types
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        ## could also use "entity regulates entity"? see def: https://dgidb.org/interaction_types 
        ## for biolink 2.2.8, DGIdb:modulator maps to this predicate
        predicate: affects_activity_of
        source: "infores:dgidb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/forward"
        # testExamples:
        #   - qInput: "CHEMBL.COMPOUND:CHEMBL3301626"   ## BASIMGLURANT
        #     oneOutput: "NCBIGene:2915"                ## GRM5
    modulator-rev:
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","modulator"]') }} ],
              "scopes": ["object.NCBIGene", "association.interaction_types"]
            }
        parameters:
          fields: >-
            subject.CHEMBL_COMPOUND,association.interaction_group_score,
            association.interaction_claim_source,association.pmids,association.interaction_types
          size: 1000
        outputs:
          - id: "CHEMBL.COMPOUND"
            semantic: SmallMolecule
        ## for biolink 2.2.8, DGIdb:modulator maps to the inverse of this predicate
        predicate: activity_affected_by
        source: "infores:dgidb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/reverse"
        # testExamples:
        #   - qInput: "NCBIGene:5241"                       ## PGR 
        #     oneOutput: "CHEMBL.COMPOUND:CHEMBL2105694"    ## TELAPRISTONE ACETATE
## commenting out because there's only 5 records for this set of operations
    # negative_modulator:
    # ## https://biothings.ncats.io/dgidb/query?q=association.interaction_types:negative_modulator
    # ## 5 records
    #   - supportBatch: true
    #     useTemplating: true ## flag to say templating is being used below
    #     inputs:
    #       - id: "CHEMBL.COMPOUND"
    #         semantic: SmallMolecule
    #     requestBodyType: object
    #     requestBody:
    #       body: >-
    #         {
    #           "q": [ {{ queryInputs | wrap( '["' , '","negative_modulator"]') }} ],
    #           "scopes": ["subject.CHEMBL_COMPOUND", "association.interaction_types"]
    #         }
    #     parameters:
    #       fields: >-
    #         object.NCBIGene,association.interaction_group_score,
    #         association.interaction_claim_source,association.pmids,association.interaction_types
    #       size: 1000
    #     outputs:
    #       - id: NCBIGene
    #         semantic: Gene
    #     ## for biolink 2.2.8, DGIdb:negative_modulator maps to this predicate
    #     predicate: decreases_activity_of
    #     source: "infores:dgidb"
    #     response_mapping:
    #       "$ref": "#/components/x-bte-response-mapping/forward"
    #     # testExamples:
    #     #   - qInput: "CHEMBL.COMPOUND:CHEMBL2109095"   ## ERLIZUMAB
    #     #     oneOutput: "NCBIGene:3689"                ## ITGB2
    # negative_modulator-rev:
    #   - supportBatch: true
    #     useTemplating: true ## flag to say templating is being used below
    #     inputs:
    #       - id: NCBIGene
    #         semantic: Gene
    #     requestBodyType: object
    #     requestBody:
    #       body: >-
    #         {
    #           "q": [ {{ queryInputs | wrap( '["' , '","negative_modulator"]') }} ],
    #           "scopes": ["object.NCBIGene", "association.interaction_types"]
    #         }
    #     parameters:
    #       fields: >-
    #         subject.CHEMBL_COMPOUND,association.interaction_group_score,
    #         association.interaction_claim_source,association.pmids,association.interaction_types
    #       size: 1000
    #     outputs:
    #       - id: "CHEMBL.COMPOUND"
    #         semantic: SmallMolecule
    #     ## for biolink 2.2.8, DGIdb:negative_modulator maps to the inverse of this predicate
    #     predicate: activity_decreased_by
    #     source: "infores:dgidb"
    #     response_mapping:
    #       "$ref": "#/components/x-bte-response-mapping/reverse"
    #     # testExamples:
    #     #   - qInput: "NCBIGene:920"                        ## CD4 
    #     #     oneOutput: "CHEMBL.COMPOUND:CHEMBL2108475"    ## PRILIXIMAB
    no_dgidb_relationship:
    ## 44557 records
    ## Most records did not have a value for that column. We put the value to "not_applicable" in those cases...
    ## https://pending.biothings.io/dgidb/query?q=association.interaction_types:not_applicable
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: "CHEMBL.COMPOUND"
            semantic: SmallMolecule
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","not_applicable"]') }} ],
              "scopes": ["subject.CHEMBL_COMPOUND", "association.interaction_types"]
            }
        parameters:
          fields: >-
            object.NCBIGene,association.interaction_group_score,
            association.interaction_claim_source,association.pmids,association.interaction_types
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        ## DGIdb drug-gene interactions
        predicate: interacts_with
        source: "infores:dgidb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/forward"
        # testExamples:
        #   - qInput: "CHEMBL.COMPOUND:CHEMBL3989914"   ## GLESATINIB
        #     oneOutput: "NCBIGene:7010"                ## TEK
    no_dgidb_relationship-rev:
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","not_applicable"]') }} ],
              "scopes": ["object.NCBIGene", "association.interaction_types"]
            }
        parameters:
          fields: >-
            subject.CHEMBL_COMPOUND,association.interaction_group_score,
            association.interaction_claim_source,association.pmids,association.interaction_types
          size: 1000
        outputs:
          - id: "CHEMBL.COMPOUND"
            semantic: SmallMolecule
        ## DGIdb drug-gene interactions
        predicate: interacts_with
        source: "infores:dgidb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/reverse"
        # testExamples:
        #   - qInput: "NCBIGene:4985"                       ## OPRD1 
        #     oneOutput: "CHEMBL.COMPOUND:CHEMBL2159122"    ## ELUXADOLINE
    partial_agonist:
    ## https://biothings.ncats.io/dgidb/query?q=association.interaction_types:partial_agonist
    ## 74 records
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: "CHEMBL.COMPOUND"
            semantic: SmallMolecule
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","partial_agonist"]') }} ],
              "scopes": ["subject.CHEMBL_COMPOUND", "association.interaction_types"]
            }
        parameters:
          fields: >-
            object.NCBIGene,association.interaction_group_score,
            association.interaction_claim_source,association.pmids,association.interaction_types
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        ## for biolink 2.2.8, DGIdb:partial_agonist maps to this predicate
        predicate: increases_activity_of
        source: "infores:dgidb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/forward"
        # testExamples:
        #   - qInput: "CHEMBL.COMPOUND:CHEMBL3544917"   ## RAPASTINEL
        #     oneOutput: "NCBIGene:2903"                ## GRIN2A
    partial_agonist-rev:
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","partial_agonist"]') }} ],
              "scopes": ["object.NCBIGene", "association.interaction_types"]
            }
        parameters:
          fields: >-
            subject.CHEMBL_COMPOUND,association.interaction_group_score,
            association.interaction_claim_source,association.pmids,association.interaction_types
          size: 1000
        outputs:
          - id: "CHEMBL.COMPOUND"
            semantic: SmallMolecule
        ## for biolink 2.2.8, DGIdb:partial_agonist maps to the inverse of this predicate
        predicate: activity_increased_by
        source: "infores:dgidb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/reverse"
        # testExamples:
        #   - qInput: "NCBIGene:1137"                        ## CHRNA4 
        #     oneOutput: "CHEMBL.COMPOUND:CHEMBL3707250"     ## CP-601927
    positive_modulator:
    ## https://biothings.ncats.io/dgidb/query?q=association.interaction_types:positive_modulator
    ## 602 records
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: "CHEMBL.COMPOUND"
            semantic: SmallMolecule
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","positive_modulator"]') }} ],
              "scopes": ["subject.CHEMBL_COMPOUND", "association.interaction_types"]
            }
        parameters:
          fields: >-
            object.NCBIGene,association.interaction_group_score,
            association.interaction_claim_source,association.pmids,association.interaction_types
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        ## biolink 2.2.8: using mapping to GAMMA / CHEMBL.MECHANISM positive_modulator term  
        predicate: increases_activity_of
        source: "infores:dgidb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/forward"
        # testExamples:
        #   - qInput: "CHEMBL.COMPOUND:CHEMBL30219"     ## METHOHEXITAL SODIUM
        #     oneOutput: "NCBIGene:2565"                ## GABRG1
    positive_modulator-rev:
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","positive_modulator"]') }} ],
              "scopes": ["object.NCBIGene", "association.interaction_types"]
            }
        parameters:
          fields: >-
            subject.CHEMBL_COMPOUND,association.interaction_group_score,
            association.interaction_claim_source,association.pmids,association.interaction_types
          size: 1000
        outputs:
          - id: "CHEMBL.COMPOUND"
            semantic: SmallMolecule
        ## biolink 2.2.8: using inverse of mapping to GAMMA / CHEMBL.MECHANISM positive_modulator term  
        predicate: activity_increased_by
        source: "infores:dgidb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/reverse"
        # testExamples:
        #   - qInput: "NCBIGene:2557"                    ## GABRA4 
        #     oneOutput: "CHEMBL.COMPOUND:CHEMBL969"     ## PRAZEPAM
## commenting out because there's only 1 record for this set of operations
    # suppressor:
    # ## https://biothings.ncats.io/dgidb/query?q=association.interaction_types:suppressor
    # ## 1 record
    #   - supportBatch: true
    #     useTemplating: true ## flag to say templating is being used below
    #     inputs:
    #       - id: "CHEMBL.COMPOUND"
    #         semantic: SmallMolecule
    #     requestBodyType: object
    #     requestBody:
    #       body: >-
    #         {
    #           "q": [ {{ queryInputs | wrap( '["' , '","suppressor"]') }} ],
    #           "scopes": ["subject.CHEMBL_COMPOUND", "association.interaction_types"]
    #         }
    #     parameters:
    #       fields: >-
    #         object.NCBIGene,association.interaction_group_score,
    #         association.interaction_claim_source,association.pmids,association.interaction_types
    #       size: 1000
    #     outputs:
    #       - id: NCBIGene
    #         semantic: Gene
    #     ## biolink 2.2.8: using mapping for GAMMA:suppressor
    #     predicate: decreases_activity_of
    #     source: "infores:dgidb"
    #     response_mapping:
    #       "$ref": "#/components/x-bte-response-mapping/forward"
    #     # testExamples:
    #     #   - qInput: "CHEMBL.COMPOUND:CHEMBL4297755"   ## FP-1039
    #     #     oneOutput: "NCBIGene:2247"                ## FGF2
    # suppressor-rev:
    #   - supportBatch: true
    #     useTemplating: true ## flag to say templating is being used below
    #     inputs:
    #       - id: NCBIGene
    #         semantic: Gene
    #     requestBodyType: object
    #     requestBody:
    #       body: >-
    #         {
    #           "q": [ {{ queryInputs | wrap( '["' , '","suppressor"]') }} ],
    #           "scopes": ["object.NCBIGene", "association.interaction_types"]
    #         }
    #     parameters:
    #       fields: >-
    #         subject.CHEMBL_COMPOUND,association.interaction_group_score,
    #         association.interaction_claim_source,association.pmids,association.interaction_types
    #       size: 1000
    #     outputs:
    #       - id: "CHEMBL.COMPOUND"
    #         semantic: SmallMolecule
    #     ## biolink 2.2.8: using inverse of mapping for GAMMA:suppressor
    #     predicate: activity_decreased_by
    #     source: "infores:dgidb"
    #     response_mapping:
    #       "$ref": "#/components/x-bte-response-mapping/reverse"
    #     # testExamples:
    #     #   - qInput: "NCBIGene:2247"                      ## FGF2 
    #     #     oneOutput: "CHEMBL.COMPOUND:CHEMBL4297755"   ## FP-1039
## commenting out because there's only 8 records for this set of operations
    # vaccine:
    # ## https://biothings.ncats.io/dgidb/query?q=association.interaction_types:vaccine
    # ## 8 records
    #   - supportBatch: true
    #     useTemplating: true ## flag to say templating is being used below
    #     inputs:
    #       - id: "CHEMBL.COMPOUND"
    #         semantic: SmallMolecule
    #     requestBodyType: object
    #     requestBody:
    #       body: >-
    #         {
    #           "q": [ {{ queryInputs | wrap( '["' , '","vaccine"]') }} ],
    #           "scopes": ["subject.CHEMBL_COMPOUND", "association.interaction_types"]
    #         }
    #     parameters:
    #       fields: >-
    #         object.NCBIGene,association.interaction_group_score,
    #         association.interaction_claim_source,association.pmids,association.interaction_types
    #       size: 1000
    #     outputs:
    #       - id: NCBIGene
    #         semantic: Gene
    #     ## using a different predicate than the biolink 2.2.8 mapping (decreases_activity_of)
    #     ## reasoning: thought its def https://dgidb.org/interaction_types was similar to https://github.com/biolink/biolink-model/blob/c73899cd33753c5d2ff937213b6c5911c579b001/biolink-model.yaml#L2918
    #     predicate: affects_response_to
    #     source: "infores:dgidb"
    #     response_mapping:
    #       "$ref": "#/components/x-bte-response-mapping/forward"
    #     # testExamples:
    #     #   - qInput: "CHEMBL.COMPOUND:CHEMBL75094"   ## PRINOMASTAT
    #     #     oneOutput: "NCBIGene:4323"              ## MMP14
    # vaccine-rev:
    #   - supportBatch: true
    #     useTemplating: true ## flag to say templating is being used below
    #     inputs:
    #       - id: NCBIGene
    #         semantic: Gene
    #     requestBodyType: object
    #     requestBody:
    #       body: >-
    #         {
    #           "q": [ {{ queryInputs | wrap( '["' , '","vaccine"]') }} ],
    #           "scopes": ["object.NCBIGene", "association.interaction_types"]
    #         }
    #     parameters:
    #       fields: >-
    #         subject.CHEMBL_COMPOUND,association.interaction_group_score,
    #         association.interaction_claim_source,association.pmids,association.interaction_types
    #       size: 1000
    #     outputs:
    #       - id: "CHEMBL.COMPOUND"
    #         semantic: SmallMolecule
    #     ## using a different predicate than the biolink 2.2.8 mapping (decreases_activity_of)
    #     ## reasoning: thought its def https://dgidb.org/interaction_types was similar to https://github.com/biolink/biolink-model/blob/c73899cd33753c5d2ff937213b6c5911c579b001/biolink-model.yaml#L2918
    #     predicate: response_affected_by
    #     source: "infores:dgidb"
    #     response_mapping:
    #       "$ref": "#/components/x-bte-response-mapping/reverse"
    #     # testExamples:
    #     #   - qInput: "NCBIGene:4313"                      ## MMP2 
    #     #     oneOutput: "CHEMBL.COMPOUND:CHEMBL297792"    ## S-3304
  x-bte-response-mapping:
    forward:
      NCBIGene: object.NCBIGene
      pubmed: association.pmids
      dgidb_interaction_claim_source: association.interaction_claim_source
      "biolink:original_predicate": association.interaction_types  ## or dgidb interaction types
      dgidb_interaction_group_score: association.interaction_group_score
    reverse:
      "CHEMBL.COMPOUND": subject.CHEMBL_COMPOUND
      pubmed: association.pmids
      dgidb_interaction_claim_source: association.interaction_claim_source
      "biolink:original_predicate": association.interaction_types  ## or dgidb interaction types
      dgidb_interaction_group_score: association.interaction_group_score  
