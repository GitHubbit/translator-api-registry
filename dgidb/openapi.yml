openapi: 3.0.3
info:
  contact:
    email: help@biothings.io
    name: BioThings Team
    x-id: https://github.com/biothings
    x-role: responsible developers
  description: Documentation of the BioThings DGIdb query web services.
  termsOfService: https://biothings.io/about
  title: BioThings DGIdb API
  version: '4.2.0'
  x-translator:
    infores: "infores:biothings-dgidb"
    component: KP
    team:
      - Service Provider
    biolink-version: "2.2.13"
servers:
- description: Encrypted Production server
  url: https://biothings.ncats.io/dgidb
  x-maturity: production
- description: Production server
  url: http://biothings.ncats.io/dgidb
  x-maturity: production
tags:
- name: gene
- name: chemical
- name: association
- name: annotation
- name: query
- name: translator
- name: biothings
- name: biothings_graph
paths:
  "/association/{id}":
    get:
      parameters:
      - name: id
        in: path
        required: true
        example: "1fb7c7f0ef333cd2"
        schema:
          type: string
      - "$ref": "#/components/parameters/raw"
      - "$ref": "#/components/parameters/rawquery"
      - "$ref": "#/components/parameters/_source"
      - "$ref": "#/components/parameters/size"
      - "$ref": "#/components/parameters/dotfield"
      - "$ref": "#/components/parameters/_sorted"
      - "$ref": "#/components/parameters/always_list"
      - "$ref": "#/components/parameters/allow_null"
      - "$ref": "#/components/parameters/format"
      responses:
        '200':
          description: "Success"
      #     content:
      #       application/json:
      #         schema:
      #           $ref: '#/components/schemas/Association'
      #   '404':
      #     description: A response indicating an unknown association ID
      # summary: Retrieve association objects based on ID
      tags:
      - association
  "/association":
    post:
      parameters:
      - "$ref": "#/components/parameters/raw"
      - "$ref": "#/components/parameters/rawquery"
      - "$ref": "#/components/parameters/_source"
      - "$ref": "#/components/parameters/size"
      - "$ref": "#/components/parameters/dotfield"
      - "$ref": "#/components/parameters/_sorted"
      - "$ref": "#/components/parameters/always_list"
      - "$ref": "#/components/parameters/allow_null"
      - "$ref": "#/components/parameters/format"
      requestBody:
        content:
          application/json:
            example:
              ids:
              - "1fb7c7f0ef333cd2"
              - "f91c68378f89f4c8"
            schema:
              type: object
              properties:
                ids:
                  description: 'multiple Association IDs separated by comma. Note that
                    currently we only take the input ids up to 1000 maximum, the rest
                    will be omitted. Type: string (list). Max: 1000.'
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: "Success"
      tags:
      - association
  "/metadata":
    get:
      parameters:
      - "$ref": "#/components/parameters/format"
      - "$ref": "#/components/parameters/raw"
      - "$ref": "#/components/parameters/dev"
      responses:
        '200':
          description: Success
      summary: Get metadata about the data available from the API
      tags:
      - metadata
  "/metadata/fields":
    get:
      parameters:
      - "$ref": "#/components/parameters/format"
      - "$ref": "#/components/parameters/raw"
      - "$ref": "#/components/parameters/search"
      - "$ref": "#/components/parameters/prefix"
      responses:
        '200':
          description: Success
      summary: Get metadata about the data fields available from a record
      tags:
      - metadata
  "/query":
    get:
      parameters:
      - name: q
        description: Query string.
        in: query
        required: true
        example: "subject.CHEMBL_COMPOUND:CHEMBL1017"
        schema:
          type: string
      - "$ref": "#/components/parameters/aggs"
      - "$ref": "#/components/parameters/facet_size"
      - "$ref": "#/components/parameters/from"
      - "$ref": "#/components/parameters/userquery"
      - "$ref": "#/components/parameters/sort"
      - "$ref": "#/components/parameters/explain"
      - "$ref": "#/components/parameters/fetch_all"
      - "$ref": "#/components/parameters/scroll_id"
      - "$ref": "#/components/parameters/raw"
      - "$ref": "#/components/parameters/rawquery"
      - "$ref": "#/components/parameters/_source"
      - "$ref": "#/components/parameters/size"
      - "$ref": "#/components/parameters/dotfield"
      - "$ref": "#/components/parameters/_sorted"
      - "$ref": "#/components/parameters/always_list"
      - "$ref": "#/components/parameters/allow_null"
      - "$ref": "#/components/parameters/format"
      responses:
        '200':
          description: Success
      #     content:
      #       application/json:
      #         schema:
      #           "$ref": "#/components/schemas/QueryResult"
      #   '400':
      #     content:
      #       application/json:
      #         schema:
      #           "$ref": "#/components/schemas/ErrorResult"
      #     description: A response indicating an improperly formatted query
      # summary: Make queries and return matching gene hits. Supports JSONP and CORS
      #   as well.
      tags:
      - query
    post:
      parameters:
      - name: q
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      - name: scopes
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
            default:
            - _id
      - "$ref": "#/components/parameters/from"
      - "$ref": "#/components/parameters/sort"
      - "$ref": "#/components/parameters/raw"
      - "$ref": "#/components/parameters/rawquery"
      - "$ref": "#/components/parameters/_source"
      - "$ref": "#/components/parameters/size"
      - "$ref": "#/components/parameters/dotfield"
      - "$ref": "#/components/parameters/_sorted"
      - "$ref": "#/components/parameters/always_list"
      - "$ref": "#/components/parameters/allow_null"
      - "$ref": "#/components/parameters/format"
      requestBody:
        content:
          application/json:
            example:
              q:
              - "CHEMBL266510"
              - "CHEMBL1200833"
              scopes:
              - "subject.CHEMBL_COMPOUND"
            schema:
              type: object
              properties:
                q:
                  type: array
                  items:
                    type: string
                scopes:
                  type: array
                  items:
                    type: string
                from:
                  type: integer
                sort:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Success
      #     content:
      #       application/json:
      #         schema:
      #           "$ref": "#/components/schemas/QueryPOSTResult"
      #   '400':
      #     content:
      #       application/json:
      #         schema:
      #           "$ref": "#/components/schemas/ErrorResult"
      #     description: A response indicating an improperly formatted query
      # summary: Make batch gene queries and return matching gene hits
      tags:
      - query
      ## 12 sets (24 operations)
      x-bte-kgs-operations:
      - $ref: '#/components/x-bte-kgs-operations/activator'
      - $ref: '#/components/x-bte-kgs-operations/activator-rev'
      - $ref: '#/components/x-bte-kgs-operations/agonist'
      - $ref: '#/components/x-bte-kgs-operations/agonist-rev'
      - $ref: '#/components/x-bte-kgs-operations/allosteric_modulator'
      - $ref: '#/components/x-bte-kgs-operations/allosteric_modulator-rev'
      - $ref: '#/components/x-bte-kgs-operations/antagonist'
      - $ref: '#/components/x-bte-kgs-operations/antagonist-rev'
      - $ref: '#/components/x-bte-kgs-operations/antibody'
      - $ref: '#/components/x-bte-kgs-operations/antibody-rev'
## commenting out because there's only 4 records for this set of operations
      # - $ref: '#/components/x-bte-kgs-operations/antisense_oligonucleotide'
      # - $ref: '#/components/x-bte-kgs-operations/antisense_oligonucleotide-rev'
      - $ref: '#/components/x-bte-kgs-operations/blocker'
      - $ref: '#/components/x-bte-kgs-operations/blocker-rev'
## commenting out because there's only 1 record for this set of operations
      # - $ref: '#/components/x-bte-kgs-operations/inducer'
      # - $ref: '#/components/x-bte-kgs-operations/inducer-rev'
      - $ref: '#/components/x-bte-kgs-operations/inhibitor'
      - $ref: '#/components/x-bte-kgs-operations/inhibitor-rev'
## commenting out because there's only 1 record for this set of operations
      # - $ref: '#/components/x-bte-kgs-operations/inhibitory_allosteric_modulator'
      # - $ref: '#/components/x-bte-kgs-operations/inhibitory_allosteric_modulator-rev'
      - $ref: '#/components/x-bte-kgs-operations/inverse_agonist'
      - $ref: '#/components/x-bte-kgs-operations/inverse_agonist-rev'
      - $ref: '#/components/x-bte-kgs-operations/modulator'
      - $ref: '#/components/x-bte-kgs-operations/modulator-rev'
## commenting out because there's only 5 records for this set of operations
      # - $ref: '#/components/x-bte-kgs-operations/negative_modulator'
      # - $ref: '#/components/x-bte-kgs-operations/negative_modulator-rev'
      - $ref: '#/components/x-bte-kgs-operations/no_dgidb_relationship'
      - $ref: '#/components/x-bte-kgs-operations/no_dgidb_relationship-rev'
      - $ref: '#/components/x-bte-kgs-operations/partial_agonist'
      - $ref: '#/components/x-bte-kgs-operations/partial_agonist-rev'
      - $ref: '#/components/x-bte-kgs-operations/positive_modulator'
      - $ref: '#/components/x-bte-kgs-operations/positive_modulator-rev'
## commenting out because there's only 1 record for this set of operations
      # - $ref: '#/components/x-bte-kgs-operations/suppressor'
      # - $ref: '#/components/x-bte-kgs-operations/suppressor-rev'
## commenting out because there's only 8 records for this set of operations
      # - $ref: '#/components/x-bte-kgs-operations/vaccine'
      # - $ref: '#/components/x-bte-kgs-operations/vaccine-rev'
components:
  parameters:
    _sorted:
      name: _sorted
      in: query
      required: false
      schema:
        type: boolean
        default: true
    _source:
      name: _source
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
    aggs:
      name: aggs
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
    allow_null:
      name: allow_null
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
    always_list:
      name: always_list
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
    dev:
      name: dev
      in: query
      required: false
      schema:
        type: boolean
    dotfield:
      name: dotfield
      in: query
      required: false
      schema:
        type: boolean
    explain:
      name: explain
      in: query
      required: false
      schema:
        type: boolean
    facet_size:
      name: facet_size
      in: query
      required: false
      schema:
        type: integer
        default: 10
    fetch_all:
      name: fetch_all
      in: query
      required: false
      schema:
        type: boolean
    format:
      name: format
      description: 'controls output format of server response, currently supports:
        "json", "jsonld", "html". Type: string. Default: json.'
      in: query
      required: false
      schema:
        type: string
        default: json
    from:
      name: from
      in: query
      required: false
      schema:
        type: integer
    prefix:
      name: prefix
      in: query
      required: false
      schema:
        type: string
    raw:
      name: raw
      in: query
      required: false
      schema:
        type: boolean
    rawquery:
      name: rawquery
      in: query
      required: false
      schema:
        type: boolean
    scroll_id:
      name: scroll_id
      in: query
      required: false
      schema:
        type: string
    search:
      name: search
      in: query
      required: false
      schema:
        type: string
    size:
      name: size
      description: "default: 10 objects/records in response"
      in: query
      required: false
      schema:
        type: integer
    sort:
      name: sort
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
    userquery:
      name: userquery
      in: query
      required: false
      schema:
        type: string
  # schemas:
  #   Association:
  #     properties:
  #       _id:
  #         type: string
  #     required:
  #     - _id
  #     type: object
  #   ErrorResult:
  #     properties:
  #       message:
  #         type: string
  #       success:
  #         type: boolean
  #     type: object
  #   QueryPOSTResult:
  #     items:
  #       allOf:
  #       - $ref: '#/components/schemas/Association'
  #       - properties:
  #           _score:
  #             format: float
  #             type: number
  #           query:
  #             type: string
  #         type: object
  #     type: array
  #   QueryResult:
  #     properties:
  #       hits:
  #         items:
  #           $ref: '#/components/schemas/Association'
  #         type: array
  #       max_score:
  #         format: float
  #         type: number
  #       took:
  #         type: integer
  #       total:
  #         type: integer
  #     type: object
  #   int64_or_array:
  #     oneOf:
  #     - items:
  #         format: int64
  #         type: integer
  #       type: array
  #     - format: int64
  #       type: integer
  #   string_or_array:
  #     oneOf:
  #     - items:
  #         type: string
  #       type: array
  #     - type: string
  x-bte-kgs-operations:
  ## - future: we could ingest subject.drug_name and object.SYMBOL fields
  ## - we will only use records with subject.CHEMBL_COMPOUND
  ##   - only 154 records don't have this field: https://biothings.ncats.io/dgidb/query?q=NOT%20_exists_:subject.CHEMBL_COMPOUND
  ##     those drugs may have had a name or wikidata ID that couldn't be mapped to chembl in MyChem. 
  ## - all records have object.NCBIGene
  ## - for interaction_claim_source info, see https://dgidb.org/sources 
  ## - for interaction_types info, see https://dgidb.org/interaction_types
  ##   Most records did not have a value for that column. We put the value to "not_applicable" in those cases...
  ## - for interaction_group_score info, see https://dgidb.org/score
  ## - only some records have PMIDs. all records have interaction_group_score, interaction_claim_source
  ## - in the future, could edit parser + queries to handle prefixes
  ## - joinSafe is only needed if the delimiter isn't a comma
    activator:
    ## https://biothings.ncats.io/dgidb/query?q=association.interaction_types:activator
    ## 195 records
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: "CHEMBL.COMPOUND"
            semantic: SmallMolecule
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","activator"]') }} ],
              "scopes": ["subject.CHEMBL_COMPOUND", "association.interaction_types"]
            }
        parameters:
          fields: >-
            object.NCBIGene,association.interaction_group_score,
            association.interaction_claim_source,association.pmids,association.interaction_types
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        ## for biolink 2.2.8, DGIdb:activator and CHEMBL.MECHANISM:activator map to the mixin positively_regulates (under regulates)
        ##                    vs GAMMA:activator maps to increases_activity_of (under affects)
        ## CX decided to use the entity-entity version of positively_regulates, after reading some triples' linked pubmed papers
        predicate: entity_positively_regulates_entity
        source: "infores:dgidb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/forward"
        # testExamples:
        #   - qInput: "CHEMBL.COMPOUND:CHEMBL266510"   ## FLINDOKALNER
        #     oneOutput: "NCBIGene:9132"               ## KCNQ4
    activator-rev:
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","activator"]') }} ],
              "scopes": ["object.NCBIGene", "association.interaction_types"]
            }
        parameters:
          fields: >-
            subject.CHEMBL_COMPOUND,association.interaction_group_score,
            association.interaction_claim_source,association.pmids,association.interaction_types
          size: 1000
        outputs:
          - id: "CHEMBL.COMPOUND"
            semantic: SmallMolecule
        ## for biolink 2.2.8, DGIdb:activator and CHEMBL.MECHANISM:activator map to the mixin positively_regulates (under regulates)
        ##                    vs GAMMA:activator maps to increases_activity_of (under affects)
        ## CX decided to use the entity-entity version of positively_regulates, after reading some triples' linked pubmed papers
        predicate: entity_positively_regulated_by_entity
        source: "infores:dgidb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/reverse"
        # testExamples:
        #   - qInput: "NCBIGene:2983"                 ## GUCY1B1
        #     oneOutput: "CHEMBL.COMPOUND:CHEMBL730   ## NITROGLYCERIN
    agonist:
    ## https://biothings.ncats.io/dgidb/query?q=association.interaction_types:agonist
    ## 2234 records
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: "CHEMBL.COMPOUND"
            semantic: SmallMolecule
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","agonist"]') }} ],
              "scopes": ["subject.CHEMBL_COMPOUND", "association.interaction_types"]
            }
        parameters:
          fields: >-
            object.NCBIGene,association.interaction_group_score,
            association.interaction_claim_source,association.pmids,association.interaction_types
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        ## for biolink 2.2.8, DGIdb:agonist maps to increases_activity_of
        predicate: affects
        ## nesting allows this main key to stay the same even with future changes
        qualifiers:
        ## key is the "qualifier_type_id", value is the "qualifier_value" in the TRAPI Edge.qualifiers spec
          qualified_predicate: causes
          object_aspect_qualifier: activity
          object_direction_qualifier: increased
          causal_mechanism_qualifier: agonism   ## extra since DGIdb labels these as "agonist"
        source: "infores:dgidb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/forward"
        # testExamples:
        #   - qInput: "CHEMBL.COMPOUND:CHEMBL1200833"   ## DIPIVEFRIN HYDROCHLORIDE
        #     oneOutput: "NCBIGene:155"                 ## ADRB3
    ## some records have multiple interaction_types
    ## 1 record, agonist + allosteric_modulator: https://biothings.ncats.io/dgidb/query?q=association.interaction_types:agonist%20AND%20association.interaction_types:allosteric_modulator
    ## 17 records, agonist + antagonist: https://biothings.ncats.io/dgidb/query?q=association.interaction_types:agonist%20AND%20association.interaction_types:antagonist
    agonist-rev:
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","agonist"]') }} ],
              "scopes": ["object.NCBIGene", "association.interaction_types"]
            }
        parameters:
          fields: >-
            subject.CHEMBL_COMPOUND,association.interaction_group_score,
            association.interaction_claim_source,association.pmids,association.interaction_types
          size: 1000
        outputs:
          - id: "CHEMBL.COMPOUND"
            semantic: SmallMolecule
        ## for biolink 2.2.8, DGIdb:agonist maps to the inverse of increases_activity_of
        predicate: affected_by
        qualifiers:
        ## odd because of the not-canonical direction
          qualified_predicate: causes
          subject_aspect_qualifier: activity
          subject_direction_qualifier: increased
          causal_mechanism_qualifier: agonism   ## extra since DGIdb labels these as "agonist"
        source: "infores:dgidb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/reverse"
        # testExamples:
        #   - qInput: "NCBIGene:1814"                     ## DRD3
        #     oneOutput: "CHEMBL.COMPOUND:CHEMBL2146110   ## SARIZOTAN HYDROCHLORIDE
    allosteric_modulator:
    ## https://biothings.ncats.io/dgidb/query?q=association.interaction_types:allosteric_modulator
    ## 170 records
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: "CHEMBL.COMPOUND"
            semantic: SmallMolecule
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","allosteric_modulator"]') }} ],
              "scopes": ["subject.CHEMBL_COMPOUND", "association.interaction_types"]
            }
        parameters:
          fields: >-
            object.NCBIGene,association.interaction_group_score,
            association.interaction_claim_source,association.pmids,association.interaction_types
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        ## for biolink 2.2.8, DGIdb:allosteric_modulator maps to this predicate
        predicate: affects_activity_of
        source: "infores:dgidb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/forward"
        # testExamples:
        #   - qInput: "CHEMBL.COMPOUND:CHEMBL3305985"   ## ALCURONIUM
        #     oneOutput: "NCBIGene:1132"                ## CHRM4
    allosteric_modulator-rev:
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","allosteric_modulator"]') }} ],
              "scopes": ["object.NCBIGene", "association.interaction_types"]
            }
        parameters:
          fields: >-
            subject.CHEMBL_COMPOUND,association.interaction_group_score,
            association.interaction_claim_source,association.pmids,association.interaction_types
          size: 1000
        outputs:
          - id: "CHEMBL.COMPOUND"
            semantic: SmallMolecule
        ## for biolink 2.2.8, DGIdb:allosteric_modulator maps to the inverse of this predicate
        predicate: activity_affected_by
        source: "infores:dgidb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/reverse"
        # testExamples:
        #   - qInput: "NCBIGene:207"                     ## AKT1
        #     oneOutput: "CHEMBL.COMPOUND:CHEMBL1079175  ## MK-2206
    antagonist:
    ## https://biothings.ncats.io/dgidb/query?q=association.interaction_types:antagonist
    ## 2330 records
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: "CHEMBL.COMPOUND"
            semantic: SmallMolecule
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","antagonist"]') }} ],
              "scopes": ["subject.CHEMBL_COMPOUND", "association.interaction_types"]
            }
        parameters:
          fields: >-
            object.NCBIGene,association.interaction_group_score,
            association.interaction_claim_source,association.pmids,association.interaction_types
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        ## for biolink 2.2.8, DGIdb:antagonist maps to this predicate
        predicate: decreases_activity_of
        ## CX: confusion over whether to use a "negatively_regulates" (what is being done / the process) vs
        ##     "decreases activity of" (the effect)
        ## - def https://dgidb.org/interaction_types and https://en.wikipedia.org/wiki/Receptor_antagonist: 
        ##   antagonists do bind to the protein
        ##   They often "don't induce the protein to do a thing".
        ##   Instead they block the agonist or signal / dampen the response to the agonist or signal...
        ##   think of the drug that blocks a binding site so the body's signals can't bind as often, to reduce overactivity
        source: "infores:dgidb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/forward"
        # testExamples:
        #   - qInput: "CHEMBL.COMPOUND:CHEMBL3545038"   ## S-237648
        #     oneOutput: "NCBIGene:4889"                ## NPY5R
    ## some records have multiple interaction_types
    ## 1 record, antagonist + allosteric_modulator: https://biothings.ncats.io/dgidb/query?q=association.interaction_types:allosteric_modulator%20AND%20association.interaction_types:antagonist
    antagonist-rev:
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","antagonist"]') }} ],
              "scopes": ["object.NCBIGene", "association.interaction_types"]
            }
        parameters:
          fields: >-
            subject.CHEMBL_COMPOUND,association.interaction_group_score,
            association.interaction_claim_source,association.pmids,association.interaction_types
          size: 1000
        outputs:
          - id: "CHEMBL.COMPOUND"
            semantic: SmallMolecule
        ## for biolink 2.2.8, DGIdb:antagonist maps to the inverse of this predicate
        predicate: activity_decreased_by
        source: "infores:dgidb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/reverse"
        # testExamples:
        #   - qInput: "NCBIGene:185"                     ## AGTR1
        #     oneOutput: "CHEMBL.COMPOUND:CHEMBL1017     ## TELMISARTAN
    antibody:
    ## https://biothings.ncats.io/dgidb/query?q=association.interaction_types:antibody
    ## 222 records
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: "CHEMBL.COMPOUND"
            semantic: SmallMolecule
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","antibody"]') }} ],
              "scopes": ["subject.CHEMBL_COMPOUND", "association.interaction_types"]
            }
        parameters:
          fields: >-
            object.NCBIGene,association.interaction_group_score,
            association.interaction_claim_source,association.pmids,association.interaction_types
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        ## biolink 2.2.8: using the mapping for GAMMA:antibody, rather than mapping for the relation (molecularly_interacts_with)
        predicate: directly_interacts_with
        source: "infores:dgidb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/forward"
        # testExamples:
        #   - qInput: "CHEMBL.COMPOUND:CHEMBL4297570"   ## AMP-224
        #     oneOutput: "NCBIGene:80380"               ## PDCD1LG2
    antibody-rev:
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","antibody"]') }} ],
              "scopes": ["object.NCBIGene", "association.interaction_types"]
            }
        parameters:
          fields: >-
            subject.CHEMBL_COMPOUND,association.interaction_group_score,
            association.interaction_claim_source,association.pmids,association.interaction_types
          size: 1000
        outputs:
          - id: "CHEMBL.COMPOUND"
            semantic: SmallMolecule
        ## biolink 2.2.8: using the mapping for GAMMA:antibody, rather than mapping for the relation (molecularly_interacts_with)
        predicate: directly_interacts_with
        source: "infores:dgidb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/reverse"
        # testExamples:
        #   - qInput: "NCBIGene:56963"                     ## RGMA
        #     oneOutput: "CHEMBL.COMPOUND:CHEMBL4297743    ## ELEZANUMAB
## commenting out because there's only 4 records for this set of operations
    # antisense_oligonucleotide:
    # ## https://biothings.ncats.io/dgidb/query?q=association.interaction_types:antisense_oligonucleotide
    # ## 4 records
    #   - supportBatch: true
    #     useTemplating: true ## flag to say templating is being used below
    #     inputs:
    #       - id: "CHEMBL.COMPOUND"
    #         semantic: SmallMolecule
    #     requestBodyType: object
    #     requestBody:
    #       body: >-
    #         {
    #           "q": [ {{ queryInputs | wrap( '["' , '","antisense_oligonucleotide"]') }} ],
    #           "scopes": ["subject.CHEMBL_COMPOUND", "association.interaction_types"]
    #         }
    #     parameters:
    #       fields: >-
    #         object.NCBIGene,association.interaction_group_score,
    #         association.interaction_claim_source,association.pmids,association.interaction_types
    #       size: 1000
    #     outputs:
    #       - id: NCBIGene
    #         semantic: Gene
    #     ## for biolink 2.2.8, DGIdb:antisense_oligonucleotide maps to this predicate
    #     predicate: decreases_expression_of
    #     source: "infores:dgidb"
    #     response_mapping:
    #       "$ref": "#/components/x-bte-response-mapping/forward"
    #     # testExamples:
    #     #   - qInput: "CHEMBL.COMPOUND:CHEMBL2108309"   ## CUSTIRSEN
    #     #     oneOutput: "NCBIGene:1191"                ## CLU
    # antisense_oligonucleotide-rev:
    #   - supportBatch: true
    #     useTemplating: true ## flag to say templating is being used below
    #     inputs:
    #       - id: NCBIGene
    #         semantic: Gene
    #     requestBodyType: object
    #     requestBody:
    #       body: >-
    #         {
    #           "q": [ {{ queryInputs | wrap( '["' , '","antisense_oligonucleotide"]') }} ],
    #           "scopes": ["object.NCBIGene", "association.interaction_types"]
    #         }
    #     parameters:
    #       fields: >-
    #         subject.CHEMBL_COMPOUND,association.interaction_group_score,
    #         association.interaction_claim_source,association.pmids,association.interaction_types
    #       size: 1000
    #     outputs:
    #       - id: "CHEMBL.COMPOUND"
    #         semantic: SmallMolecule
    #     ## for biolink 2.2.8, DGIdb:antisense_oligonucleotide maps to the inverse of this predicate
    #     predicate: expression_decreased_by
    #     source: "infores:dgidb"
    #     response_mapping:
    #       "$ref": "#/components/x-bte-response-mapping/reverse"
    #     # testExamples:
    #     #   - qInput: "NCBIGene:332"                     ## BIRC5
    #     #     oneOutput: "CHEMBL.COMPOUND:CHEMBL2219774  ## GATAPARSEN
    blocker:
    ## https://biothings.ncats.io/dgidb/query?q=association.interaction_types:blocker
    ## 1134 records
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: "CHEMBL.COMPOUND"
            semantic: SmallMolecule
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","blocker"]') }} ],
              "scopes": ["subject.CHEMBL_COMPOUND", "association.interaction_types"]
            }
        parameters:
          fields: >-
            object.NCBIGene,association.interaction_group_score,
            association.interaction_claim_source,association.pmids,association.interaction_types
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        ## CX: has the same issue as "antagonist"
        ## - def https://dgidb.org/interaction_types and https://en.wikipedia.org/wiki/Receptor_antagonist: 
        ## for biolink 2.2.8, DGIdb:blocker maps to this predicate
        predicate: decreases_activity_of
        source: "infores:dgidb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/forward"
        # testExamples:
        #   - qInput: "CHEMBL.COMPOUND:CHEMBL91"   ## MICONAZOLE
        #     oneOutput: "NCBIGene:7226"           ## TRPM2
    ## some records have multiple interaction_types
    ## 2 records, blocker + activator: https://biothings.ncats.io/dgidb/query?q=association.interaction_types:blocker%20AND%20association.interaction_types:activator
    ## 1 record, blocker + inhibitor: https://biothings.ncats.io/dgidb/query?q=association.interaction_types:blocker%20AND%20association.interaction_types:inhibitor
    blocker-rev:
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","blocker"]') }} ],
              "scopes": ["object.NCBIGene", "association.interaction_types"]
            }
        parameters:
          fields: >-
            subject.CHEMBL_COMPOUND,association.interaction_group_score,
            association.interaction_claim_source,association.pmids,association.interaction_types
          size: 1000
        outputs:
          - id: "CHEMBL.COMPOUND"
            semantic: SmallMolecule
        ## for biolink 2.2.8, DGIdb:blocker maps to the inverse of this predicate
        predicate: activity_decreased_by
        source: "infores:dgidb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/reverse"
        # testExamples:
        #   - qInput: "NCBIGene:775"                     ## CACNA1C
        #     oneOutput: "CHEMBL.COMPOUND:CHEMBL1648     ## ISRADIPINE
## commenting out because there's only 1 record for this set of operations
    # inducer:
    # ## https://biothings.ncats.io/dgidb/query?q=association.interaction_types:inducer
    # ## 1 record
    #   - supportBatch: true
    #     useTemplating: true ## flag to say templating is being used below
    #     inputs:
    #       - id: "CHEMBL.COMPOUND"
    #         semantic: SmallMolecule
    #     requestBodyType: object
    #     requestBody:
    #       body: >-
    #         {
    #           "q": [ {{ queryInputs | wrap( '["' , '","inducer"]') }} ],
    #           "scopes": ["subject.CHEMBL_COMPOUND", "association.interaction_types"]
    #         }
    #     parameters:
    #       fields: >-
    #         object.NCBIGene,association.interaction_group_score,
    #         association.interaction_claim_source,association.pmids,association.interaction_types
    #       size: 1000
    #     outputs:
    #       - id: NCBIGene
    #         semantic: Gene
    #     ## for biolink 2.2.8, DGIdb:inducer maps to this predicate
    #     predicate: increases_activity_of
    #     source: "infores:dgidb"
    #     response_mapping:
    #       "$ref": "#/components/x-bte-response-mapping/forward"
    #     # testExamples:
    #     #   - qInput: "CHEMBL.COMPOUND:CHEMBL71263"   ## VADIMEZAN
    #     #     oneOutput: "NCBIGene:7124"           ## TNF
    # inducer-rev:
    #   - supportBatch: true
    #     useTemplating: true ## flag to say templating is being used below
    #     inputs:
    #       - id: NCBIGene
    #         semantic: Gene
    #     requestBodyType: object
    #     requestBody:
    #       body: >-
    #         {
    #           "q": [ {{ queryInputs | wrap( '["' , '","inducer"]') }} ],
    #           "scopes": ["object.NCBIGene", "association.interaction_types"]
    #         }
    #     parameters:
    #       fields: >-
    #         subject.CHEMBL_COMPOUND,association.interaction_group_score,
    #         association.interaction_claim_source,association.pmids,association.interaction_types
    #       size: 1000
    #     outputs:
    #       - id: "CHEMBL.COMPOUND"
    #         semantic: SmallMolecule
    #     ## for biolink 2.2.8, DGIdb:inducer maps to the inverse of this predicate
    #     predicate: activity_increased_by
    #     source: "infores:dgidb"
    #     response_mapping:
    #       "$ref": "#/components/x-bte-response-mapping/reverse"
    #     # testExamples:
    #     #   - qInput: "NCBIGene:7124"                    ## TNF 
    #     #     oneOutput: "CHEMBL.COMPOUND:CHEMBL71263"   ## VADIMEZAN
    inhibitor:
    ## https://biothings.ncats.io/dgidb/query?q=association.interaction_types:inhibitor
    ## 6928 records
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: "CHEMBL.COMPOUND"
            semantic: SmallMolecule
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","inhibitor"]') }} ],
              "scopes": ["subject.CHEMBL_COMPOUND", "association.interaction_types"]
            }
        parameters:
          fields: >-
            object.NCBIGene,association.interaction_group_score,
            association.interaction_claim_source,association.pmids,association.interaction_types
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        ## for biolink 2.2.8, DGIdb:inhibitor maps to this predicate
        predicate: decreases_activity_of
        source: "infores:dgidb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/forward"
        # testExamples:
        #   - qInput: "CHEMBL.COMPOUND:CHEMBL1229517"   ## VEMURAFENIB
        #     oneOutput: "NCBIGene:673"                 ## BRAF
    inhibitor-rev:
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","inhibitor"]') }} ],
              "scopes": ["object.NCBIGene", "association.interaction_types"]
            }
        parameters:
          fields: >-
            subject.CHEMBL_COMPOUND,association.interaction_group_score,
            association.interaction_claim_source,association.pmids,association.interaction_types
          size: 1000
        outputs:
          - id: "CHEMBL.COMPOUND"
            semantic: SmallMolecule
        ## for biolink 2.2.8, DGIdb:inhibitor maps to the inverse of this predicate
        predicate: activity_decreased_by
        source: "infores:dgidb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/reverse"
        # testExamples:
        #   - qInput: "NCBIGene:3481"                      ## IGF2 
        #     oneOutput: "CHEMBL.COMPOUND:CHEMBL2109355"   ## DUSIGITUMAB
## commenting out because there's only 1 record for this set of operations
    # inhibitory_allosteric_modulator:
    # ## https://biothings.ncats.io/dgidb/query?q=association.interaction_types:inhibitory_allosteric_modulator
    # ## 1 record
    #   - supportBatch: true
    #     useTemplating: true ## flag to say templating is being used below
    #     inputs:
    #       - id: "CHEMBL.COMPOUND"
    #         semantic: SmallMolecule
    #     requestBodyType: object
    #     requestBody:
    #       body: >-
    #         {
    #           "q": [ {{ queryInputs | wrap( '["' , '","inhibitory_allosteric_modulator"]') }} ],
    #           "scopes": ["subject.CHEMBL_COMPOUND", "association.interaction_types"]
    #         }
    #     parameters:
    #       fields: >-
    #         object.NCBIGene,association.interaction_group_score,
    #         association.interaction_claim_source,association.pmids,association.interaction_types
    #       size: 1000
    #     outputs:
    #       - id: NCBIGene
    #         semantic: Gene
    #     ## for biolink 2.2.8, DGIdb:inhibitory_allosteric_modulator maps to this predicate
    #     predicate: decreases_activity_of
    #     source: "infores:dgidb"
    #     response_mapping:
    #       "$ref": "#/components/x-bte-response-mapping/forward"
    #     # testExamples:
    #     #   - qInput: "CHEMBL.COMPOUND:CHEMBL1079175"   ## MK-2206
    #     #     oneOutput: "NCBIGene:207"                 ## AKT1
    # inhibitory_allosteric_modulator-rev:
    #   - supportBatch: true
    #     useTemplating: true ## flag to say templating is being used below
    #     inputs:
    #       - id: NCBIGene
    #         semantic: Gene
    #     requestBodyType: object
    #     requestBody:
    #       body: >-
    #         {
    #           "q": [ {{ queryInputs | wrap( '["' , '","inhibitory_allosteric_modulator"]') }} ],
    #           "scopes": ["object.NCBIGene", "association.interaction_types"]
    #         }
    #     parameters:
    #       fields: >-
    #         subject.CHEMBL_COMPOUND,association.interaction_group_score,
    #         association.interaction_claim_source,association.pmids,association.interaction_types
    #       size: 1000
    #     outputs:
    #       - id: "CHEMBL.COMPOUND"
    #         semantic: SmallMolecule
    #     ## for biolink 2.2.8, DGIdb:inhibitory_allosteric_modulator maps to the inverse of this predicate
    #     predicate: activity_decreased_by
    #     source: "infores:dgidb"
    #     response_mapping:
    #       "$ref": "#/components/x-bte-response-mapping/reverse"
    #     # testExamples:
    #     #   - qInput: "NCBIGene:207"                       ## AKT1 
    #     #     oneOutput: "CHEMBL.COMPOUND:CHEMBL1079175"   ## MK-2206
    inverse_agonist:
    ## https://biothings.ncats.io/dgidb/query?q=association.interaction_types:inverse_agonist
    ## 24 records
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: "CHEMBL.COMPOUND"
            semantic: SmallMolecule
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","inverse_agonist"]') }} ],
              "scopes": ["subject.CHEMBL_COMPOUND", "association.interaction_types"]
            }
        parameters:
          fields: >-
            object.NCBIGene,association.interaction_group_score,
            association.interaction_claim_source,association.pmids,association.interaction_types
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        ## for biolink 2.2.8, DGIdb:inverse_agonist maps to this predicate
        predicate: decreases_activity_of
        source: "infores:dgidb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/forward"
        # testExamples:
        #   - qInput: "CHEMBL.COMPOUND:CHEMBL1200986"   ## HALOPERIDOL DECANOATE
        #     oneOutput: "NCBIGene:1814"                ## DRD3
    inverse_agonist-rev:
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","inverse_agonist"]') }} ],
              "scopes": ["object.NCBIGene", "association.interaction_types"]
            }
        parameters:
          fields: >-
            subject.CHEMBL_COMPOUND,association.interaction_group_score,
            association.interaction_claim_source,association.pmids,association.interaction_types
          size: 1000
        outputs:
          - id: "CHEMBL.COMPOUND"
            semantic: SmallMolecule
        ## for biolink 2.2.8, DGIdb:inverse_agonist maps to the inverse of this predicate
        predicate: activity_decreased_by
        source: "infores:dgidb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/reverse"
        # testExamples:
        #   - qInput: "NCBIGene:3356"                       ## HTR2A 
        #     oneOutput: "CHEMBL.COMPOUND:CHEMBL1084617"    ## TEMANOGREL
    modulator:
    ## https://biothings.ncats.io/dgidb/query?q=association.interaction_types:modulator
    ## 222 records
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: "CHEMBL.COMPOUND"
            semantic: SmallMolecule
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","modulator"]') }} ],
              "scopes": ["subject.CHEMBL_COMPOUND", "association.interaction_types"]
            }
        parameters:
          fields: >-
            object.NCBIGene,association.interaction_group_score,
            association.interaction_claim_source,association.pmids,association.interaction_types
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        ## could also use "entity regulates entity"? see def: https://dgidb.org/interaction_types 
        ## for biolink 2.2.8, DGIdb:modulator maps to this predicate
        predicate: affects_activity_of
        source: "infores:dgidb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/forward"
        # testExamples:
        #   - qInput: "CHEMBL.COMPOUND:CHEMBL3301626"   ## BASIMGLURANT
        #     oneOutput: "NCBIGene:2915"                ## GRM5
    modulator-rev:
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","modulator"]') }} ],
              "scopes": ["object.NCBIGene", "association.interaction_types"]
            }
        parameters:
          fields: >-
            subject.CHEMBL_COMPOUND,association.interaction_group_score,
            association.interaction_claim_source,association.pmids,association.interaction_types
          size: 1000
        outputs:
          - id: "CHEMBL.COMPOUND"
            semantic: SmallMolecule
        ## for biolink 2.2.8, DGIdb:modulator maps to the inverse of this predicate
        predicate: activity_affected_by
        source: "infores:dgidb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/reverse"
        # testExamples:
        #   - qInput: "NCBIGene:5241"                       ## PGR 
        #     oneOutput: "CHEMBL.COMPOUND:CHEMBL2105694"    ## TELAPRISTONE ACETATE
## commenting out because there's only 5 records for this set of operations
    # negative_modulator:
    # ## https://biothings.ncats.io/dgidb/query?q=association.interaction_types:negative_modulator
    # ## 5 records
    #   - supportBatch: true
    #     useTemplating: true ## flag to say templating is being used below
    #     inputs:
    #       - id: "CHEMBL.COMPOUND"
    #         semantic: SmallMolecule
    #     requestBodyType: object
    #     requestBody:
    #       body: >-
    #         {
    #           "q": [ {{ queryInputs | wrap( '["' , '","negative_modulator"]') }} ],
    #           "scopes": ["subject.CHEMBL_COMPOUND", "association.interaction_types"]
    #         }
    #     parameters:
    #       fields: >-
    #         object.NCBIGene,association.interaction_group_score,
    #         association.interaction_claim_source,association.pmids,association.interaction_types
    #       size: 1000
    #     outputs:
    #       - id: NCBIGene
    #         semantic: Gene
    #     ## for biolink 2.2.8, DGIdb:negative_modulator maps to this predicate
    #     predicate: decreases_activity_of
    #     source: "infores:dgidb"
    #     response_mapping:
    #       "$ref": "#/components/x-bte-response-mapping/forward"
    #     # testExamples:
    #     #   - qInput: "CHEMBL.COMPOUND:CHEMBL2109095"   ## ERLIZUMAB
    #     #     oneOutput: "NCBIGene:3689"                ## ITGB2
    # negative_modulator-rev:
    #   - supportBatch: true
    #     useTemplating: true ## flag to say templating is being used below
    #     inputs:
    #       - id: NCBIGene
    #         semantic: Gene
    #     requestBodyType: object
    #     requestBody:
    #       body: >-
    #         {
    #           "q": [ {{ queryInputs | wrap( '["' , '","negative_modulator"]') }} ],
    #           "scopes": ["object.NCBIGene", "association.interaction_types"]
    #         }
    #     parameters:
    #       fields: >-
    #         subject.CHEMBL_COMPOUND,association.interaction_group_score,
    #         association.interaction_claim_source,association.pmids,association.interaction_types
    #       size: 1000
    #     outputs:
    #       - id: "CHEMBL.COMPOUND"
    #         semantic: SmallMolecule
    #     ## for biolink 2.2.8, DGIdb:negative_modulator maps to the inverse of this predicate
    #     predicate: activity_decreased_by
    #     source: "infores:dgidb"
    #     response_mapping:
    #       "$ref": "#/components/x-bte-response-mapping/reverse"
    #     # testExamples:
    #     #   - qInput: "NCBIGene:920"                        ## CD4 
    #     #     oneOutput: "CHEMBL.COMPOUND:CHEMBL2108475"    ## PRILIXIMAB
    no_dgidb_relationship:
    ## 44557 records
    ## Most records did not have a value for that column. We put the value to "not_applicable" in those cases...
    ## https://biothings.ncats.io/dgidb/query?q=association.interaction_types:not_applicable
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: "CHEMBL.COMPOUND"
            semantic: SmallMolecule
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","not_applicable"]') }} ],
              "scopes": ["subject.CHEMBL_COMPOUND", "association.interaction_types"]
            }
        parameters:
          fields: >-
            object.NCBIGene,association.interaction_group_score,
            association.interaction_claim_source,association.pmids,association.interaction_types
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        ## DGIdb drug-gene interactions
        predicate: interacts_with
        source: "infores:dgidb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/forward"
        # testExamples:
        #   - qInput: "CHEMBL.COMPOUND:CHEMBL3989914"   ## GLESATINIB
        #     oneOutput: "NCBIGene:7010"                ## TEK
    no_dgidb_relationship-rev:
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","not_applicable"]') }} ],
              "scopes": ["object.NCBIGene", "association.interaction_types"]
            }
        parameters:
          fields: >-
            subject.CHEMBL_COMPOUND,association.interaction_group_score,
            association.interaction_claim_source,association.pmids,association.interaction_types
          size: 1000
        outputs:
          - id: "CHEMBL.COMPOUND"
            semantic: SmallMolecule
        ## DGIdb drug-gene interactions
        predicate: interacts_with
        source: "infores:dgidb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/reverse"
        # testExamples:
        #   - qInput: "NCBIGene:4985"                       ## OPRD1 
        #     oneOutput: "CHEMBL.COMPOUND:CHEMBL2159122"    ## ELUXADOLINE
    partial_agonist:
    ## https://biothings.ncats.io/dgidb/query?q=association.interaction_types:partial_agonist
    ## 74 records
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: "CHEMBL.COMPOUND"
            semantic: SmallMolecule
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","partial_agonist"]') }} ],
              "scopes": ["subject.CHEMBL_COMPOUND", "association.interaction_types"]
            }
        parameters:
          fields: >-
            object.NCBIGene,association.interaction_group_score,
            association.interaction_claim_source,association.pmids,association.interaction_types
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        ## for biolink 2.2.8, DGIdb:partial_agonist maps to this predicate
        predicate: increases_activity_of
        source: "infores:dgidb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/forward"
        # testExamples:
        #   - qInput: "CHEMBL.COMPOUND:CHEMBL3544917"   ## RAPASTINEL
        #     oneOutput: "NCBIGene:2903"                ## GRIN2A
    partial_agonist-rev:
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","partial_agonist"]') }} ],
              "scopes": ["object.NCBIGene", "association.interaction_types"]
            }
        parameters:
          fields: >-
            subject.CHEMBL_COMPOUND,association.interaction_group_score,
            association.interaction_claim_source,association.pmids,association.interaction_types
          size: 1000
        outputs:
          - id: "CHEMBL.COMPOUND"
            semantic: SmallMolecule
        ## for biolink 2.2.8, DGIdb:partial_agonist maps to the inverse of this predicate
        predicate: activity_increased_by
        source: "infores:dgidb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/reverse"
        # testExamples:
        #   - qInput: "NCBIGene:1137"                        ## CHRNA4 
        #     oneOutput: "CHEMBL.COMPOUND:CHEMBL3707250"     ## CP-601927
    positive_modulator:
    ## https://biothings.ncats.io/dgidb/query?q=association.interaction_types:positive_modulator
    ## 602 records
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: "CHEMBL.COMPOUND"
            semantic: SmallMolecule
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","positive_modulator"]') }} ],
              "scopes": ["subject.CHEMBL_COMPOUND", "association.interaction_types"]
            }
        parameters:
          fields: >-
            object.NCBIGene,association.interaction_group_score,
            association.interaction_claim_source,association.pmids,association.interaction_types
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        ## biolink 2.2.8: using mapping to GAMMA / CHEMBL.MECHANISM positive_modulator term  
        predicate: increases_activity_of
        source: "infores:dgidb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/forward"
        # testExamples:
        #   - qInput: "CHEMBL.COMPOUND:CHEMBL30219"     ## METHOHEXITAL SODIUM
        #     oneOutput: "NCBIGene:2565"                ## GABRG1
    positive_modulator-rev:
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","positive_modulator"]') }} ],
              "scopes": ["object.NCBIGene", "association.interaction_types"]
            }
        parameters:
          fields: >-
            subject.CHEMBL_COMPOUND,association.interaction_group_score,
            association.interaction_claim_source,association.pmids,association.interaction_types
          size: 1000
        outputs:
          - id: "CHEMBL.COMPOUND"
            semantic: SmallMolecule
        ## biolink 2.2.8: using inverse of mapping to GAMMA / CHEMBL.MECHANISM positive_modulator term  
        predicate: activity_increased_by
        source: "infores:dgidb"
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/reverse"
        # testExamples:
        #   - qInput: "NCBIGene:2557"                    ## GABRA4 
        #     oneOutput: "CHEMBL.COMPOUND:CHEMBL969"     ## PRAZEPAM
## commenting out because there's only 1 record for this set of operations
    # suppressor:
    # ## https://biothings.ncats.io/dgidb/query?q=association.interaction_types:suppressor
    # ## 1 record
    #   - supportBatch: true
    #     useTemplating: true ## flag to say templating is being used below
    #     inputs:
    #       - id: "CHEMBL.COMPOUND"
    #         semantic: SmallMolecule
    #     requestBodyType: object
    #     requestBody:
    #       body: >-
    #         {
    #           "q": [ {{ queryInputs | wrap( '["' , '","suppressor"]') }} ],
    #           "scopes": ["subject.CHEMBL_COMPOUND", "association.interaction_types"]
    #         }
    #     parameters:
    #       fields: >-
    #         object.NCBIGene,association.interaction_group_score,
    #         association.interaction_claim_source,association.pmids,association.interaction_types
    #       size: 1000
    #     outputs:
    #       - id: NCBIGene
    #         semantic: Gene
    #     ## biolink 2.2.8: using mapping for GAMMA:suppressor
    #     predicate: decreases_activity_of
    #     source: "infores:dgidb"
    #     response_mapping:
    #       "$ref": "#/components/x-bte-response-mapping/forward"
    #     # testExamples:
    #     #   - qInput: "CHEMBL.COMPOUND:CHEMBL4297755"   ## FP-1039
    #     #     oneOutput: "NCBIGene:2247"                ## FGF2
    # suppressor-rev:
    #   - supportBatch: true
    #     useTemplating: true ## flag to say templating is being used below
    #     inputs:
    #       - id: NCBIGene
    #         semantic: Gene
    #     requestBodyType: object
    #     requestBody:
    #       body: >-
    #         {
    #           "q": [ {{ queryInputs | wrap( '["' , '","suppressor"]') }} ],
    #           "scopes": ["object.NCBIGene", "association.interaction_types"]
    #         }
    #     parameters:
    #       fields: >-
    #         subject.CHEMBL_COMPOUND,association.interaction_group_score,
    #         association.interaction_claim_source,association.pmids,association.interaction_types
    #       size: 1000
    #     outputs:
    #       - id: "CHEMBL.COMPOUND"
    #         semantic: SmallMolecule
    #     ## biolink 2.2.8: using inverse of mapping for GAMMA:suppressor
    #     predicate: activity_decreased_by
    #     source: "infores:dgidb"
    #     response_mapping:
    #       "$ref": "#/components/x-bte-response-mapping/reverse"
    #     # testExamples:
    #     #   - qInput: "NCBIGene:2247"                      ## FGF2 
    #     #     oneOutput: "CHEMBL.COMPOUND:CHEMBL4297755"   ## FP-1039
## commenting out because there's only 8 records for this set of operations
    # vaccine:
    # ## https://biothings.ncats.io/dgidb/query?q=association.interaction_types:vaccine
    # ## 8 records
    #   - supportBatch: true
    #     useTemplating: true ## flag to say templating is being used below
    #     inputs:
    #       - id: "CHEMBL.COMPOUND"
    #         semantic: SmallMolecule
    #     requestBodyType: object
    #     requestBody:
    #       body: >-
    #         {
    #           "q": [ {{ queryInputs | wrap( '["' , '","vaccine"]') }} ],
    #           "scopes": ["subject.CHEMBL_COMPOUND", "association.interaction_types"]
    #         }
    #     parameters:
    #       fields: >-
    #         object.NCBIGene,association.interaction_group_score,
    #         association.interaction_claim_source,association.pmids,association.interaction_types
    #       size: 1000
    #     outputs:
    #       - id: NCBIGene
    #         semantic: Gene
    #     ## using a different predicate than the biolink 2.2.8 mapping (decreases_activity_of)
    #     ## reasoning: thought its def https://dgidb.org/interaction_types was similar to https://github.com/biolink/biolink-model/blob/c73899cd33753c5d2ff937213b6c5911c579b001/biolink-model.yaml#L2918
    #     predicate: affects_response_to
    #     source: "infores:dgidb"
    #     response_mapping:
    #       "$ref": "#/components/x-bte-response-mapping/forward"
    #     # testExamples:
    #     #   - qInput: "CHEMBL.COMPOUND:CHEMBL75094"   ## PRINOMASTAT
    #     #     oneOutput: "NCBIGene:4323"              ## MMP14
    # vaccine-rev:
    #   - supportBatch: true
    #     useTemplating: true ## flag to say templating is being used below
    #     inputs:
    #       - id: NCBIGene
    #         semantic: Gene
    #     requestBodyType: object
    #     requestBody:
    #       body: >-
    #         {
    #           "q": [ {{ queryInputs | wrap( '["' , '","vaccine"]') }} ],
    #           "scopes": ["object.NCBIGene", "association.interaction_types"]
    #         }
    #     parameters:
    #       fields: >-
    #         subject.CHEMBL_COMPOUND,association.interaction_group_score,
    #         association.interaction_claim_source,association.pmids,association.interaction_types
    #       size: 1000
    #     outputs:
    #       - id: "CHEMBL.COMPOUND"
    #         semantic: SmallMolecule
    #     ## using a different predicate than the biolink 2.2.8 mapping (decreases_activity_of)
    #     ## reasoning: thought its def https://dgidb.org/interaction_types was similar to https://github.com/biolink/biolink-model/blob/c73899cd33753c5d2ff937213b6c5911c579b001/biolink-model.yaml#L2918
    #     predicate: response_affected_by
    #     source: "infores:dgidb"
    #     response_mapping:
    #       "$ref": "#/components/x-bte-response-mapping/reverse"
    #     # testExamples:
    #     #   - qInput: "NCBIGene:4313"                      ## MMP2 
    #     #     oneOutput: "CHEMBL.COMPOUND:CHEMBL297792"    ## S-3304
  x-bte-response-mapping:
    forward:
      NCBIGene: object.NCBIGene
      pubmed: association.pmids
      dgidb_interaction_claim_source: association.interaction_claim_source
      "biolink:original_predicate": association.interaction_types  ## or dgidb interaction types
      dgidb_interaction_group_score: association.interaction_group_score
    reverse:
      "CHEMBL.COMPOUND": subject.CHEMBL_COMPOUND
      pubmed: association.pmids
      dgidb_interaction_claim_source: association.interaction_claim_source
      "biolink:original_predicate": association.interaction_types  ## or dgidb interaction types
      dgidb_interaction_group_score: association.interaction_group_score  
