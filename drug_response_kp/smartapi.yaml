openapi: 3.0.0
info:
  contact:
    email: help@biothings.io
    name: BioThings Team
    x-id: https://github.com/biothings
    x-role: responsible developers
  description: Documentation of the Drug Response KP query web services.
  termsOfService: https://biothings.io/about
  title: Multiomics BigGIM-DrugResponse KP API
  version: '1.0'
  x-translator:
    infores: "infores:biothings-multiomics-biggim-drugresponse"
    component: KP
    team:
      - Multiomics Provider
      - Service Provider
    biolink-version: "2.2.13"
servers:
- description: Encrypted Production server
  url: https://biothings.ncats.io/drug_response_kp
  x-maturity: production
- description: Production server
  url: http://biothings.ncats.io/drug_response_kp
  x-maturity: production
tags:
- name: gene
- name: disease
- name: chemical
- name: association
- name: annotation
- name: query
- name: translator
- name: biothings
- name: biothings_graph
paths:
  /association:
    post:
      parameters:
      - $ref: '#/components/parameters/dotfield'
        name: dotfield
      - $ref: '#/components/parameters/fields'
        name: fields
      - $ref: '#/components/parameters/email'
        name: email
      - $ref: '#/components/parameters/format'
        name: format
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                ids:
                  description: 'multiple association IDs separated by comma. Note that currently we only take the input ids up to 1000 maximum, the rest will be omitted. Type: string (list). Max: 1000.'
                  type: string
              required:
              - ids
      responses:
        '200':
          content:
            application/json:
              schema:
                items:
                  $ref: '#/components/schemas/Association'
                type: array
          description: A list of matching association objects
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: A response indicating an improperly formatted query
      summary: For a list of association IDs, return the matching disease object
      tags:
      - association
  /association/{associationid}:
    get:
      parameters:
      - description: Retrieve association objects based on Association ID  Supports
          JSONP and CORS as well.
        example: NRAS-TCGA-LUAD
        in: path
        name: associationid
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/dotfield'
        name: dotfield
      - $ref: '#/components/parameters/callback'
        name: callback
      - $ref: '#/components/parameters/fields'
        name: fields
      - $ref: '#/components/parameters/email'
        name: email
      - $ref: '#/components/parameters/format'
        name: format
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Association'
          description: A matching association object
        '404':
          description: A response indicating an unknown association ID
      summary: Retrieve association objects based on ID
      tags:
      - association
  /metadata:
    get:
      parameters:
      - $ref: '#/components/parameters/callback'
        in: query
        name: callback
      responses:
        '200':
          description: KP metadata object
      summary: Get metadata about the data available from the API
      tags:
      - metadata
  /metadata/fields:
    get:
      parameters:
      - $ref: '#/components/parameters/search'
        name: search
      - $ref: '#/components/parameters/callback'
        name: callback
      - $ref: '#/components/parameters/prefix'
        name: prefix
      - $ref: '#/components/parameters/format'
        name: format
      responses:
        '200':
          description: metadata fields object
      summary: Get metadata about the data fields available
      tags:
      - metadata
  /query:
    get:
      parameters:
      - description: Query string.
        example: subject.NCBIGene:51742
        in: query
        name: q
        required: true
        schema:
          type: string
      - $ref: '#/components/parameters/dotfield'
        name: dotfield
      - $ref: '#/components/parameters/fields'
        name: fields
      - $ref: '#/components/parameters/facet_size'
        name: facet_size
      - $ref: '#/components/parameters/sort'
        name: sort
      - $ref: '#/components/parameters/callback'
        name: callback
      - $ref: '#/components/parameters/email'
        name: email
      - $ref: '#/components/parameters/facets'
        name: facets
      - $ref: '#/components/parameters/size'
        name: size
      - $ref: '#/components/parameters/from'
        name: from
      - $ref: '#/components/parameters/format'
        name: format
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryResult'
          description: A query response with the "hits" property
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: A response indicating an improperly formatted query
      summary: Make queries and return matching association hits. Supports JSONP and CORS
        as well.
      tags:
      - query
    post:
      parameters:
      - $ref: '#/components/parameters/dotfield'
        name: dotfield
      - $ref: '#/components/parameters/email'
        name: email
      - $ref: '#/components/parameters/fields'
        name: fields
      - $ref: '#/components/parameters/size'
        name: size
      - $ref: '#/components/parameters/format'
        name: format
      requestBody:
        content:
          application/x-www-form-urlencoded:
            schema:
              properties:
                q:
                  description: multiple query terms separated by comma (also "+" or
                    whitespace).  Does not support wildcard queries
                  type: string
                scopes:
                  description: 'a comma-separated list of fields as the search "scopes"
                    (fields to search through for query term). The available "fields"
                    that can be passed to the "scopes" parameter are listed in the
                    **/metadata/fields** endpoint.string Default: "scopes=_id".'
                  type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QueryPOSTResult'
          description: Query response objects with the "hits" property
        '400':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResult'
          description: A response indicating an improperly formatted query
      summary: Make batch disease queries and return matching disease hits
      tags:
      - query
      x-bte-kgs-operations:
      - $ref: '#/components/x-bte-kgs-operations/gene-sensitivity-pubchem-1'
      - $ref: '#/components/x-bte-kgs-operations/gene-sensitivity-pubchem-1-rev'
      - $ref: '#/components/x-bte-kgs-operations/gene-sensitivity-pubchem-2'
      - $ref: '#/components/x-bte-kgs-operations/gene-sensitivity-pubchem-2-rev'
      - $ref: '#/components/x-bte-kgs-operations/gene-sensitivity-hms_lincs'
      - $ref: '#/components/x-bte-kgs-operations/gene-sensitivity-hms_lincs-rev'
      ## waiting for parser fix
      # - $ref: '#/components/x-bte-kgs-operations/gene-sensitivity-chembl'
      # - $ref: '#/components/x-bte-kgs-operations/gene-sensitivity-chembl-rev'
      - $ref: '#/components/x-bte-kgs-operations/gene-sensitivity-chebi'
      - $ref: '#/components/x-bte-kgs-operations/gene-sensitivity-chebi-rev'
      - $ref: '#/components/x-bte-kgs-operations/gene-resistance-pubchem-1'
      - $ref: '#/components/x-bte-kgs-operations/gene-resistance-pubchem-1-rev'
      - $ref: '#/components/x-bte-kgs-operations/gene-resistance-pubchem-2'
      - $ref: '#/components/x-bte-kgs-operations/gene-resistance-pubchem-2-rev'
      - $ref: '#/components/x-bte-kgs-operations/gene-resistance-hms_lincs'
      - $ref: '#/components/x-bte-kgs-operations/gene-resistance-hms_lincs-rev'
      ## waiting for parser fix
      # - $ref: '#/components/x-bte-kgs-operations/gene-resistance-chembl'
      # - $ref: '#/components/x-bte-kgs-operations/gene-resistance-chembl-rev'
      - $ref: '#/components/x-bte-kgs-operations/gene-resistance-chebi'
      - $ref: '#/components/x-bte-kgs-operations/gene-resistance-chebi-rev'
components:
  parameters:
    callback:
      description: 'you can pass a "callback" parameter to make a JSONP call. Type:
        string.'
      in: query
      name: callback
      schema:
        type: string
    dotfield:
      description: 'control the format of the returned chem object. If "true" or "1",
        all fields will be collapsed into a single level deep object (all nested objects
        will be a single level deep, using dotfield notation to signify the nested
        structure) Type: boolean. Default: false.'
      in: query
      name: dotfield
      schema:
        type: boolean
    email:
      description: If you are regular users of our services, we encourage you to provide
        us with an email, so that we can better track the usage or follow up with
        you.
      in: query
      name: email
      schema:
        type: string
    facet_size:
      description: 'the number of facet buckets to return in the response. Type: integer.
        Default: 10. Max: 1000.'
      in: query
      name: facet_size
      schema:
        type: integer
    facets:
      description: 'a comma-separated list of fields to return facets on.  In addition
        to query hits, the fields notated in "facets" will be aggregated by value
        and bucklet counts will be displayed in the "facets" field of the response
        object. Type: string (list). Default: None. Max: 1000.'
      in: query
      name: facets
      schema:
        type: string
    fields:
      description: 'a comma-separated list of fields (in dotfield notation) used to
        limit the fields returned from the matching chem hit(s). The supported field
        names can be found from any chem object or from the /metadata/fields endpoint.
        If "fields=all", all available fields will be returned. Type: string (list).
        Default: all. Max: 1000.'
      in: query
      name: fields
      schema:
        type: string
    format:
      description: 'controls output format of server response, currently supports:
        "json", "jsonld", "html". Type: string. Default: json.'
      in: query
      name: format
      schema:
        type: string
    from:
      description: 'the number of matching chem hits to skip, starting from 0.  This
        can be useful for paging in combination with the "size" parameter. Type: integer.
        Default: None.'
      in: query
      name: from
      schema:
        type: integer
    prefix:
      description: 'Pass a prefix string to filter the available fields. Type: string.
        Default: None.'
      in: query
      name: prefix
      schema:
        type: string
    search:
      description: 'Pass a search term to filter the available fields. Type: string.
        Default: None.'
      in: query
      name: search
      schema:
        type: string
    size:
      description: 'the maximum number of matching chem hits to return per batch.
        Type: integer. Default: 10.'
      in: query
      name: size
      schema:
        type: integer
    sort:
      description: 'the comma-separated list of fields to sort on. Prefix each with
        "-" for descending order, otherwise in ascending order. Default: sort by descending
        score.'
      in: query
      name: sort
      schema:
        type: string
  schemas:
    Association:
      properties:
        _id:
          type: string
      required:
      - _id
      type: object
    ErrorResult:
      properties:
        message:
          type: string
        success:
          type: boolean
      type: object
    QueryPOSTResult:
      items:
        allOf:
        - $ref: '#/components/schemas/Association'
        - properties:
            _score:
              format: float
              type: number
            query:
              type: string
          type: object
      type: array
    QueryResult:
      properties:
        hits:
          items:
            $ref: '#/components/schemas/Association'
          type: array
        max_score:
          format: float
          type: number
        took:
          type: integer
        total:
          type: integer
      type: object
    int64_or_array:
      oneOf:
      - items:
          format: int64
          type: integer
        type: array
      - format: int64
        type: integer
    string_or_array:
      oneOf:
      - items:
          type: string
        type: array
      - type: string
  x-bte-kgs-operations:
  ## in the API's records:
  ## - all subjects are Gene, ENSEMBL
  ## - all objects are SmallMolecule (chemicals):
  ##   - PUBCHEM.COMPOUND (but using the prefix + field PUBCHEM....and CID?)
  ##   - HMS_LINCS_ID (not in biolink-model, so no standard prefix...). https://lincs.hms.harvard.edu/db/sm/10076-101/
  ##     - note that LINCS isn't in biolink-model either
  ##     - also SRI ID resolver won't handle these 
  ##   - CHEMBL.COMPOUND (field is CHEMBL_COMPOUND)
  ##   - CHEBI (keeping prefix CHEBI)
  ## - predicates in association.edge_label:
  ##   - biolink:associated_with_sensitivity_to
  ##   - biolink:associated_with_resistance_to
  ## - for reverse operations, some edge attributes may seem odd (reversed subj/obj)
  ## - currently we can't express _exists_ with this kind of query: useful for setting the output
  ## - currently, BTE handles most prefix (CHEBI keeps prefixes, EMSEMBL / PUBCHEM.COMPOUND / CHEMBL.COMPOUND does not).  
  ##   not sure about stuff that isn't in biolink-model like HMS_LINCS_ID
  ##   in the future, could edit parser + queries to handle prefixes
  ## - joinSafe is only needed if the delimiter isn't a comma
    gene-sensitivity-pubchem-1:
    ##  https://pending.biothings.io/drug_response_kp/query?q=association.edge_label:%22biolink:associated_with_sensitivity_to%22%20AND%20_exists_:%22object.PUBCHEM%22
    ##  1495704 records  
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: ENSEMBL
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","biolink:associated_with_sensitivity_to"]') }} ],
              "scopes": ["subject.ENSEMBL", "association.edge_label"]
            }
        parameters:
          fields: object.PUBCHEM,association.edge_attributes
          size: 1000
        outputs:
          - id: "PUBCHEM.COMPOUND"
            semantic: SmallMolecule
        predicate: associated_with_sensitivity_to
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/pubchem-1-object"
        ## note 3 records: https://pending.biothings.io/drug_response_kp/query?q=association.edge_label:%22biolink:associated_with_sensitivity_to%22%20AND%20subject.ENSEMBL:ENSG00000181991%20AND%20object.PUBCHEM:71271629
        # testExamples:
        #   - qInput: "ENSEMBL:ENSG00000181991"     ## MRPS11
        #     oneOutput: "PUBCHEM.COMPOUND:71271629"  ## PFI-1
    gene-sensitivity-pubchem-1-rev:
    ##  https://pending.biothings.io/drug_response_kp/query?q=association.edge_label:%22biolink:associated_with_sensitivity_to%22%20AND%20_exists_:%22object.PUBCHEM%22
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: "PUBCHEM.COMPOUND"
            semantic: SmallMolecule
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","biolink:associated_with_sensitivity_to"]') }} ],
              "scopes": ["object.PUBCHEM", "association.edge_label"]
            }
        parameters:
          fields: subject.ENSEMBL,association.edge_attributes
          size: 1000
        outputs:
          - id: ENSEMBL
            semantic: Gene
        predicate: sensitivity_associated_with
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ensembl-subject"
        ## note 3 records: https://pending.biothings.io/drug_response_kp/query?q=association.edge_label:%22biolink:associated_with_sensitivity_to%22%20AND%20subject.ENSEMBL:ENSG00000162378%20AND%20object.PUBCHEM:6851740
        # testExamples:
        #   - qInput: "PUBCHEM.COMPOUND:6851740"  ## SB-715992
        #     oneOutput: "ENSEMBL:ENSG00000162378"     ## ZYG11B
    gene-sensitivity-pubchem-2:
    ##  https://pending.biothings.io/drug_response_kp/query?q=association.edge_label:%22biolink:associated_with_sensitivity_to%22%20AND%20_exists_:%22object.CID%22
    ##  55102 records  
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: ENSEMBL
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","biolink:associated_with_sensitivity_to"]') }} ],
              "scopes": ["subject.ENSEMBL", "association.edge_label"]
            }
        parameters:
          fields: object.CID,association.edge_attributes
          size: 1000
        outputs:
          - id: "PUBCHEM.COMPOUND"
            semantic: SmallMolecule
        predicate: associated_with_sensitivity_to
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/pubchem-2-object"
        ## 1 record: https://pending.biothings.io/drug_response_kp/query?q=association.edge_label:%22biolink:associated_with_sensitivity_to%22%20AND%20subject.ENSEMBL:ENSG00000186788%20AND%20object.CID:6914657
        # testExamples:
        #   - qInput: "ENSEMBL:ENSG00000186788"     ## SPATA31D3
        #     oneOutput: "PUBCHEM.COMPOUND:6914657"  ## FK866 / Daporinad
    gene-sensitivity-pubchem-2-rev:
    ##  https://pending.biothings.io/drug_response_kp/query?q=association.edge_label:%22biolink:associated_with_sensitivity_to%22%20AND%20_exists_:%22object.CID%22
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: "PUBCHEM.COMPOUND"
            semantic: SmallMolecule
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","biolink:associated_with_sensitivity_to"]') }} ],
              "scopes": ["object.CID", "association.edge_label"]
            }
        parameters:
          fields: subject.ENSEMBL,association.edge_attributes
          size: 1000
        outputs:
          - id: ENSEMBL
            semantic: Gene
        predicate: sensitivity_associated_with
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ensembl-subject"
        ## 1 record: https://pending.biothings.io/drug_response_kp/query?q=association.edge_label:%22biolink:associated_with_sensitivity_to%22%20AND%20subject.ENSEMBL:ENSG00000149506%20AND%20object.CID:644243
        # testExamples:
        #   - qInput: "PUBCHEM.COMPOUND:644243"  ## FMK
        #     oneOutput: "ENSEMBL:ENSG00000149506"     ## ZP1
    gene-sensitivity-hms_lincs:
    ##  https://pending.biothings.io/drug_response_kp/query?q=association.edge_label:%22biolink:associated_with_sensitivity_to%22%20AND%20_exists_:%22object.HMS_LINCS_ID%22
    ##  119525 records
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: ENSEMBL
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","biolink:associated_with_sensitivity_to"]') }} ],
              "scopes": ["subject.ENSEMBL", "association.edge_label"]
            }
        parameters:
          fields: object.HMS_LINCS_ID,association.edge_attributes
          size: 1000
        outputs:
          - id: "HMS_LINCS_ID"
            semantic: SmallMolecule
        predicate: associated_with_sensitivity_to
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/hms_lincs-object"
        ## note 4 records: https://pending.biothings.io/drug_response_kp/query?q=association.edge_label:%22biolink:associated_with_sensitivity_to%22%20AND%20subject.ENSEMBL:ENSG00000198034%20AND%20object.HMS_LINCS_ID:12005-101
        # testExamples:
        #   - qInput: "ENSEMBL:ENSG00000198034"     ## RPS4X
        #     oneOutput: "HMS_LINCS_ID:12005-101"  ## QL-VIII-58
    gene-sensitivity-hms_lincs-rev:
    ##  https://pending.biothings.io/drug_response_kp/query?q=association.edge_label:%22biolink:associated_with_sensitivity_to%22%20AND%20_exists_:%22object.HMS_LINCS_ID%22
    ##  currently can't test due to SRI ID resolver error
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: "HMS_LINCS_ID"
            semantic: SmallMolecule
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","biolink:associated_with_sensitivity_to"]') }} ],
              "scopes": ["object.HMS_LINCS_ID", "association.edge_label"]
            }
        parameters:
          fields: subject.ENSEMBL,association.edge_attributes
          size: 1000
        outputs:
          - id: ENSEMBL
            semantic: Gene
        predicate: sensitivity_associated_with
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ensembl-subject"
        ## note 2 records: https://pending.biothings.io/drug_response_kp/query?q=association.edge_label:%22biolink:associated_with_sensitivity_to%22%20AND%20subject.ENSEMBL:ENSG00000149218%20AND%20object.HMS_LINCS_ID:10089-101
        # testExamples:
        #   - qInput: "HMS_LINCS_ID:10089-101"  ## XMD14-99
        #     oneOutput: "ENSEMBL:ENSG00000149218"     ## ENDOD1
    ## waiting for parser fix
    # gene-sensitivity-chembl:
    # ##  https://pending.biothings.io/drug_response_kp/query?q=association.edge_label:%22biolink:associated_with_sensitivity_to%22%20AND%20_exists_:%22object.CHEMBL_COMPOUND%22
    # ##  404187 records
    #   - supportBatch: true
    #     useTemplating: true ## flag to say templating is being used below
    #     inputs:
    #       - id: ENSEMBL
    #         semantic: Gene
    #     requestBodyType: object
    #     requestBody:
    #       body: >-
    #         {
    #           "q": [ {{ queryInputs | wrap( '["' , '","biolink:associated_with_sensitivity_to"]') }} ],
    #           "scopes": ["subject.ENSEMBL", "association.edge_label"]
    #         }
    #     parameters:
    #       fields: object.CHEMBL_COMPOUND,association.edge_attributes
    #       size: 1000
    #     outputs:
    #       - id: "CHEMBL.COMPOUND"
    #         semantic: SmallMolecule
    #     predicate: associated_with_sensitivity_to
    #     response_mapping:
    #       "$ref": "#/components/x-bte-response-mapping/chembl-object"
    #     # testExamples:
    #     #   - qInput: "ENSEMBL:ENSG00000163283"     ## ALPP
    #     #     oneOutput: "CHEMBL.COMPOUND:CHEMBL571948"  ## Y-39983
    # gene-sensitivity-chembl-rev:
    # ##  https://pending.biothings.io/drug_response_kp/query?q=association.edge_label:%22biolink:associated_with_sensitivity_to%22%20AND%20_exists_:%22object.CHEMBL_COMPOUND%22
    #   - supportBatch: true
    #     useTemplating: true ## flag to say templating is being used below
    #     inputs:
    #       - id: "CHEMBL.COMPOUND"
    #         semantic: SmallMolecule
    #     requestBodyType: object
    #     requestBody:
    #       body: >-
    #         {
    #           "q": [ {{ queryInputs | wrap( '["' , '","biolink:associated_with_sensitivity_to"]') }} ],
    #           "scopes": ["object.CHEMBL_COMPOUND", "association.edge_label"]
    #         }
    #     parameters:
    #       fields: subject.ENSEMBL,association.edge_attributes
    #       size: 1000
    #     outputs:
    #       - id: ENSEMBL
    #         semantic: Gene
    #     predicate: sensitivity_associated_with
    #     response_mapping:
    #       "$ref": "#/components/x-bte-response-mapping/ensembl-subject"
    #     # testExamples:
    #     #   - qInput: "CHEMBL.COMPOUND:CHEMBL399583"  ## AUY922
    #     # oneOutput: "ENSEMBL:ENSG00000123411"     ## IKZF4
    gene-sensitivity-chebi:
    ##  https://pending.biothings.io/drug_response_kp/query?q=association.edge_label:%22biolink:associated_with_sensitivity_to%22%20AND%20_exists_:%22object.CHEBI%22
    ##  748101 records
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: ENSEMBL
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","biolink:associated_with_sensitivity_to"]') }} ],
              "scopes": ["subject.ENSEMBL", "association.edge_label"]
            }
        parameters:
          fields: object.CHEBI,association.edge_attributes
          size: 1000
        outputs:
          - id: CHEBI
            semantic: SmallMolecule
        predicate: associated_with_sensitivity_to
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/chebi-object"
        ## 1 record: https://pending.biothings.io/drug_response_kp/query?q=association.edge_label:%22biolink:associated_with_sensitivity_to%22%20AND%20subject.ENSEMBL:ENSG00000178502%20AND%20object.CHEBI:%22CHEBI:144093%22
        # testExamples:
        #   - qInput: "ENSEMBL:ENSG00000178502"     ## KLHL11
        #     oneOutput: "CHEBI:144093"  ## Bicalutamide
    gene-sensitivity-chebi-rev:
    ##  https://pending.biothings.io/drug_response_kp/query?q=association.edge_label:%22biolink:associated_with_sensitivity_to%22%20AND%20_exists_:%22object.CHEBI%22
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: CHEBI
            semantic: SmallMolecule
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","biolink:associated_with_sensitivity_to"]') }} ],
              "scopes": ["object.CHEBI", "association.edge_label"]
            }
        parameters:
          fields: subject.ENSEMBL,association.edge_attributes
          size: 1000
        outputs:
          - id: ENSEMBL
            semantic: Gene
        predicate: sensitivity_associated_with
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ensembl-subject"
        ## note 2 records:https://pending.biothings.io/drug_response_kp/query?q=association.edge_label:%22biolink:associated_with_sensitivity_to%22%20AND%20subject.ENSEMBL:ENSG00000162368%20AND%20object.CHEBI:%22CHEBI:141969%22
        # testExamples:
        #   - qInput: "CHEBI:141969"  ## Tipifarnib
        #     oneOutput: "ENSEMBL:ENSG00000162368"     ## CMPK1
    gene-resistance-pubchem-1:
    ##  https://pending.biothings.io/drug_response_kp/query?q=association.edge_label:%22biolink:associated_with_resistance_to%22%20AND%20_exists_:%22object.PUBCHEM%22
    ##  1504909 records
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: ENSEMBL
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","biolink:associated_with_resistance_to"]') }} ],
              "scopes": ["subject.ENSEMBL", "association.edge_label"]
            }
        parameters:
          fields: object.PUBCHEM,association.edge_attributes
          size: 1000
        outputs:
          - id: "PUBCHEM.COMPOUND"
            semantic: SmallMolecule
        predicate: associated_with_resistance_to
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/pubchem-1-object"
        ## note 2 records: https://pending.biothings.io/drug_response_kp/query?q=association.edge_label:%22biolink:associated_with_resistance_to%22%20AND%20subject.ENSEMBL:ENSG00000005810%20AND%20object.PUBCHEM:704473
        # testExamples:
        #   - qInput: "ENSEMBL:ENSG00000005810"     ## MYCBP2
        #     oneOutput: "PUBCHEM.COMPOUND:704473"  ## STF-62247
    gene-resistance-pubchem-1-rev:
    ##  https://pending.biothings.io/drug_response_kp/query?q=association.edge_label:%22biolink:associated_with_resistance_to%22%20AND%20_exists_:%22object.PUBCHEM%22
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: "PUBCHEM.COMPOUND"
            semantic: SmallMolecule
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","biolink:associated_with_resistance_to"]') }} ],
              "scopes": ["object.PUBCHEM", "association.edge_label"]
            }
        parameters:
          fields: subject.ENSEMBL,association.edge_attributes
          size: 1000
        outputs:
          - id: ENSEMBL
            semantic: Gene
        predicate: resistance_associated_with
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ensembl-subject"
        ## note 2 records: https://pending.biothings.io/drug_response_kp/query?q=association.edge_label:%22biolink:associated_with_resistance_to%22%20AND%20subject.ENSEMBL:ENSG00000120658%20AND%20object.PUBCHEM:11647372
        # testExamples:
        #   - qInput: "PUBCHEM.COMPOUND:11647372"  ## ZSTK474 
        #     oneOutput: "ENSEMBL:ENSG00000120658"     ## ENOX1
    gene-resistance-pubchem-2:
    ##  https://pending.biothings.io/drug_response_kp/query?q=association.edge_label:%22biolink:associated_with_resistance_to%22%20AND%20_exists_:%22object.CID%22
    ##  62269 records
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: ENSEMBL
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","biolink:associated_with_resistance_to"]') }} ],
              "scopes": ["subject.ENSEMBL", "association.edge_label"]
            }
        parameters:
          fields: object.CID,association.edge_attributes
          size: 1000
        outputs:
          - id: "PUBCHEM.COMPOUND"
            semantic: SmallMolecule
        predicate: associated_with_resistance_to
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/pubchem-2-object"
        ## 1 record: https://pending.biothings.io/drug_response_kp/query?q=association.edge_label:%22biolink:associated_with_resistance_to%22%20AND%20subject.ENSEMBL:ENSG00000156453%20AND%20object.CID:16760646
        # testExamples:
        #   - qInput: "ENSEMBL:ENSG00000156453"     ## PCDH1
        #     oneOutput: "PUBCHEM.COMPOUND:16760646"  ## CID 16760646 
    gene-resistance-pubchem-2-rev:
    ##  https://pending.biothings.io/drug_response_kp/query?q=association.edge_label:%22biolink:associated_with_resistance_to%22%20AND%20_exists_:%22object.CID%22
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: "PUBCHEM.COMPOUND"
            semantic: SmallMolecule
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","biolink:associated_with_resistance_to"]') }} ],
              "scopes": ["object.CID", "association.edge_label"]
            }
        parameters:
          fields: subject.ENSEMBL,association.edge_attributes
          size: 1000
        outputs:
          - id: ENSEMBL
            semantic: Gene
        predicate: resistance_associated_with
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ensembl-subject"
        ## note 2 records: https://pending.biothings.io/drug_response_kp/query?q=association.edge_label:%22biolink:associated_with_resistance_to%22%20AND%20subject.ENSEMBL:ENSG00000156515%20AND%20object.CID:16760646
        # testExamples:
        #   - qInput: "PUBCHEM.COMPOUND:16760646"  ## CID 16760646 
        #     oneOutput: "ENSEMBL:ENSG00000156515"     ## HK1
    gene-resistance-hms_lincs:
    ##  https://pending.biothings.io/drug_response_kp/query?q=association.edge_label:%22biolink:associated_with_resistance_to%22%20AND%20_exists_:%22object.HMS_LINCS_ID%22
    ##  112874 records
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: ENSEMBL
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","biolink:associated_with_resistance_to"]') }} ],
              "scopes": ["subject.ENSEMBL", "association.edge_label"]
            }
        parameters:
          fields: object.HMS_LINCS_ID,association.edge_attributes
          size: 1000
        outputs:
          - id: "HMS_LINCS_ID"
            semantic: SmallMolecule
        predicate: associated_with_resistance_to
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/hms_lincs-object"
        ## 1 record: https://pending.biothings.io/drug_response_kp/query?q=association.edge_label:%22biolink:associated_with_resistance_to%22%20AND%20subject.ENSEMBL:ENSG00000079841%20AND%20object.HMS_LINCS_ID:10088-101
        # testExamples:
        #   - qInput: "ENSEMBL:ENSG00000079841"     ## RIMS1
        #     oneOutput: "HMS_LINCS_ID:10088-101"  ## XMD13-2
    gene-resistance-hms_lincs-rev:
    ##  https://pending.biothings.io/drug_response_kp/query?q=association.edge_label:%22biolink:associated_with_resistance_to%22%20AND%20_exists_:%22object.HMS_LINCS_ID%22
    ##  currently can't test due to SRI ID resolver error
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: "HMS_LINCS_ID"
            semantic: SmallMolecule
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","biolink:associated_with_resistance_to"]') }} ],
              "scopes": ["object.HMS_LINCS_ID", "association.edge_label"]
            }
        parameters:
          fields: subject.ENSEMBL,association.edge_attributes
          size: 1000
        outputs:
          - id: ENSEMBL
            semantic: Gene
        predicate: resistance_associated_with
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ensembl-subject"
        ## note 2 records: https://pending.biothings.io/drug_response_kp/query?q=association.edge_label:%22biolink:associated_with_resistance_to%22%20AND%20subject.ENSEMBL:ENSG00000116690%20AND%20object.HMS_LINCS_ID:10089-101
        # testExamples:
        #   - qInput: "HMS_LINCS_ID:10089-101"  ## XMD14-99
        #     oneOutput: "ENSEMBL:ENSG00000116690"     ## PRG4
    ## waiting for parser fix
    # gene-resistance-chembl:
    # ##  https://pending.biothings.io/drug_response_kp/query?q=association.edge_label:%22biolink:associated_with_resistance_to%22%20AND%20_exists_:%22object.CHEMBL_COMPOUND%22
    # ##  420179 records
    #   - supportBatch: true
    #     useTemplating: true ## flag to say templating is being used below
    #     inputs:
    #       - id: ENSEMBL
    #         semantic: Gene
    #     requestBodyType: object
    #     requestBody:
    #       body: >-
    #         {
    #           "q": [ {{ queryInputs | wrap( '["' , '","biolink:associated_with_resistance_to"]') }} ],
    #           "scopes": ["subject.ENSEMBL", "association.edge_label"]
    #         }
    #     parameters:
    #       fields: object.CHEMBL_COMPOUND,association.edge_attributes
    #       size: 1000
    #     outputs:
    #       - id: "CHEMBL.COMPOUND"
    #         semantic: SmallMolecule
    #     predicate: associated_with_resistance_to
    #     response_mapping:
    #       "$ref": "#/components/x-bte-response-mapping/chembl-object"
    #     # testExamples:
    #     #   - qInput: "ENSEMBL:ENSG00000001626"     ## CFTR
    #     #     oneOutput: "CHEMBL.COMPOUND:CHEMBL603469"  ## CEP-701
    # gene-resistance-chembl-rev:
    # ##  https://pending.biothings.io/drug_response_kp/query?q=association.edge_label:%22biolink:associated_with_resistance_to%22%20AND%20_exists_:%22object.CHEMBL_COMPOUND%22
    #   - supportBatch: true
    #     useTemplating: true ## flag to say templating is being used below
    #     inputs:
    #       - id: "CHEMBL.COMPOUND"
    #         semantic: SmallMolecule
    #     requestBodyType: object
    #     requestBody:
    #       body: >-
    #         {
    #           "q": [ {{ queryInputs | wrap( '["' , '","biolink:associated_with_resistance_to"]') }} ],
    #           "scopes": ["object.CHEMBL_COMPOUND", "association.edge_label"]
    #         }
    #     parameters:
    #       fields: subject.ENSEMBL,association.edge_attributes
    #       size: 1000
    #     outputs:
    #       - id: ENSEMBL
    #         semantic: Gene
    #     predicate: resistance_associated_with
    #     response_mapping:
    #       "$ref": "#/components/x-bte-response-mapping/ensembl-subject"
    #     # testExamples:
    #     #   - qInput: "CHEMBL.COMPOUND:CHEMBL1084546"  ## PF-562271
    #     #     oneOutput: "ENSEMBL:ENSG00000007174"     ## DNAH9
    gene-resistance-chebi:
    ##  https://pending.biothings.io/drug_response_kp/query?q=association.edge_label:%22biolink:associated_with_resistance_to%22%20AND%20_exists_:%22object.CHEBI%22
    ##  762390 records
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: ENSEMBL
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","biolink:associated_with_resistance_to"]') }} ],
              "scopes": ["subject.ENSEMBL", "association.edge_label"]
            }
        parameters:
          fields: object.CHEBI,association.edge_attributes
          size: 1000
        outputs:
          - id: CHEBI
            semantic: SmallMolecule
        predicate: associated_with_resistance_to
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/chebi-object"
        ## 1 record: https://pending.biothings.io/drug_response_kp/query?q=association.edge_label:%22biolink:associated_with_resistance_to%22%20AND%20subject.ENSEMBL:ENSG00000005810%20AND%20object.CHEBI:%22CHEBI:94128%22
        # testExamples:
        #   - qInput: "ENSEMBL:ENSG00000005810"     ## MYCBP2
        #     oneOutput: "CHEBI:94128"  ## ABT-263 / Navitoclax
    gene-resistance-chebi-rev:
    ##  https://pending.biothings.io/drug_response_kp/query?q=association.edge_label:%22biolink:associated_with_resistance_to%22%20AND%20_exists_:%22object.CHEBI%22
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: CHEBI
            semantic: SmallMolecule
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","biolink:associated_with_resistance_to"]') }} ],
              "scopes": ["object.CHEBI", "association.edge_label"]
            }
        parameters:
          fields: subject.ENSEMBL,association.edge_attributes
          size: 1000
        outputs:
          - id: ENSEMBL
            semantic: Gene
        predicate: resistance_associated_with
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ensembl-subject"
        ## note 2 records: https://pending.biothings.io/drug_response_kp/query?q=association.edge_label:%22biolink:associated_with_resistance_to%22%20AND%20subject.ENSEMBL:ENSG00000005810%20AND%20object.CHEBI:%22CHEBI:79369%22
        # testExamples:
        #   - qInput: "CHEBI:79369"  ## Elesclomol
        #     oneOutput: "ENSEMBL:ENSG00000005810"     ## MYCBP2
  x-bte-response-mapping:
    pubchem-1-object:
      "PUBCHEM.COMPOUND": object.PUBCHEM
      edge-attributes: association.edge_attributes
    ensembl-subject:
      ENSEMBL: subject.ENSEMBL
      edge-attributes: association.edge_attributes
    pubchem-2-object:
      "PUBCHEM.COMPOUND": object.CID
      edge-attributes: association.edge_attributes
    hms_lincs-object:
      "HMS_LINCS_ID": object.HMS_LINCS_ID
      edge-attributes: association.edge_attributes
    chembl-object:
      "CHEMBL.COMPOUND": "object.CHEMBL_COMPOUND"
      edge-attributes: association.edge_attributes
    chebi-object:
      CHEBI: object.CHEBI
      edge-attributes: association.edge_attributes
