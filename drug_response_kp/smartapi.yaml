openapi: 3.0.3
info:
  contact:
    email: guangrong.qin@isbscience.org
    name: Guangrong Qin
    x-role: responsible developer
  description: >-
    Documentation of the Multiomics BigGIM-DrugResponse KP query web services. 
    This KP contains associations from multiple sources.
  termsOfService: https://biothings.io/about
  title: Multiomics BigGIM-DrugResponse KP API
  version: '2.0'
  x-translator:
    infores: "infores:biothings-multiomics-biggim-drugresponse"
    component: KP
    team:
      - Multiomics Provider
      - Service Provider
    biolink-version: "2.4.8"
servers:
- description: Encrypted Production server
  url: https://biothings.ncats.io/biggim_drugresponse_kp
  x-maturity: production
- description: Production server
  url: http://biothings.ncats.io/biggim_drugresponse_kp
  x-maturity: production
tags:
- name: gene
- name: disease
- name: chemical
- name: association
- name: annotation
- name: query
- name: translator
- name: biothings
- name: biothings_graph
paths:
  "/association/{id}":
    get:
      parameters:
      - name: id
        in: path
        required: true
        example: "Disease_biolink:has_biomarker_Gene_GDSC_cancer_specific_signatures.csv_2998"
        schema:
          type: string
      - "$ref": "#/components/parameters/raw"
      - "$ref": "#/components/parameters/rawquery"
      - "$ref": "#/components/parameters/_source"
      - "$ref": "#/components/parameters/size"
      - "$ref": "#/components/parameters/dotfield"
      - "$ref": "#/components/parameters/_sorted"
      - "$ref": "#/components/parameters/always_list"
      - "$ref": "#/components/parameters/allow_null"
      - "$ref": "#/components/parameters/format"
      responses:
        '200':
          description: "Success"
      #     content:
      #       application/json:
      #         schema:
      #           $ref: '#/components/schemas/Association'
      #   '404':
      #     description: A response indicating an unknown association ID
      # summary: Retrieve association objects based on ID
      tags:
      - association
  "/association":
    post:
      parameters:
      - "$ref": "#/components/parameters/raw"
      - "$ref": "#/components/parameters/rawquery"
      - "$ref": "#/components/parameters/_source"
      - "$ref": "#/components/parameters/size"
      - "$ref": "#/components/parameters/dotfield"
      - "$ref": "#/components/parameters/_sorted"
      - "$ref": "#/components/parameters/always_list"
      - "$ref": "#/components/parameters/allow_null"
      - "$ref": "#/components/parameters/format"
      requestBody:
        content:
          application/json:
            example:
              ids:
              - "Disease_biolink:has_biomarker_Gene_GDSC_cancer_specific_signatures.csv_2998"
              - "Protein_biolink:physically_interacts_with_Protein_Biogrid_formated.csv_170247"
            schema:
              type: object
              properties:
                ids:
                  description: 'multiple Association IDs separated by comma. Note that
                    currently we only take the input ids up to 1000 maximum, the rest
                    will be omitted. Type: string (list). Max: 1000.'
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: "Success"
      tags:
      - association
  "/metadata":
    get:
      parameters:
      - "$ref": "#/components/parameters/format"
      - "$ref": "#/components/parameters/raw"
      - "$ref": "#/components/parameters/dev"
      responses:
        '200':
          description: Success
      summary: Get metadata about the data available from the API
      tags:
      - metadata
  "/metadata/fields":
    get:
      parameters:
      - "$ref": "#/components/parameters/format"
      - "$ref": "#/components/parameters/raw"
      - "$ref": "#/components/parameters/search"
      - "$ref": "#/components/parameters/prefix"
      responses:
        '200':
          description: Success
      summary: Get metadata about the data fields available from a record
      tags:
      - metadata
  "/query":
    get:
      parameters:
      - name: q
        description: Query string.
        in: query
        required: true
        example: subject.NCBIGene:"NCBIGene:91526"
        schema:
          type: string
      - "$ref": "#/components/parameters/aggs"
      - "$ref": "#/components/parameters/facet_size"
      - "$ref": "#/components/parameters/from"
      - "$ref": "#/components/parameters/userquery"
      - "$ref": "#/components/parameters/sort"
      - "$ref": "#/components/parameters/explain"
      - "$ref": "#/components/parameters/fetch_all"
      - "$ref": "#/components/parameters/scroll_id"
      - "$ref": "#/components/parameters/raw"
      - "$ref": "#/components/parameters/rawquery"
      - "$ref": "#/components/parameters/_source"
      - "$ref": "#/components/parameters/size"
      - "$ref": "#/components/parameters/dotfield"
      - "$ref": "#/components/parameters/_sorted"
      - "$ref": "#/components/parameters/always_list"
      - "$ref": "#/components/parameters/allow_null"
      - "$ref": "#/components/parameters/format"
      responses:
        '200':
          description: Success
      #     content:
      #       application/json:
      #         schema:
      #           "$ref": "#/components/schemas/QueryResult"
      #   '400':
      #     content:
      #       application/json:
      #         schema:
      #           "$ref": "#/components/schemas/ErrorResult"
      #     description: A response indicating an improperly formatted query
      # summary: Make queries and return matching gene hits. Supports JSONP and CORS
      #   as well.
      tags:
      - query
    post:
      parameters:
      - name: q
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
      - name: scopes
        in: query
        required: false
        schema:
          type: array
          items:
            type: string
            default:
            - _id
      - "$ref": "#/components/parameters/from"
      - "$ref": "#/components/parameters/sort"
      - "$ref": "#/components/parameters/raw"
      - "$ref": "#/components/parameters/rawquery"
      - "$ref": "#/components/parameters/_source"
      - "$ref": "#/components/parameters/size"
      - "$ref": "#/components/parameters/dotfield"
      - "$ref": "#/components/parameters/_sorted"
      - "$ref": "#/components/parameters/always_list"
      - "$ref": "#/components/parameters/allow_null"
      - "$ref": "#/components/parameters/format"
      requestBody:
        content:
          application/json:
            example:
              q:
              - "NCBIGene:91526"
              - "NCBIGene:5788"
              scopes:
              - "subject.NCBIGene"
            schema:
              type: object
              properties:
                q:
                  type: array
                  items:
                    type: string
                scopes:
                  type: array
                  items:
                    type: string
                from:
                  type: integer
                sort:
                  type: array
                  items:
                    type: string
      responses:
        '200':
          description: Success
      #     content:
      #       application/json:
      #         schema:
      #           "$ref": "#/components/schemas/QueryPOSTResult"
      #   '400':
      #     content:
      #       application/json:
      #         schema:
      #           "$ref": "#/components/schemas/ErrorResult"
      #     description: A response indicating an improperly formatted query
      # summary: Make batch gene queries and return matching gene hits
      tags:
      - query
      x-bte-kgs-operations:
      - $ref: '#/components/x-bte-kgs-operations/gene-sensitivity-chem'
      - $ref: '#/components/x-bte-kgs-operations/gene-sensitivity-chem-rev'
      - $ref: '#/components/x-bte-kgs-operations/gene-resistance-chem'
      - $ref: '#/components/x-bte-kgs-operations/gene-resistance-chem-rev'
      - $ref: '#/components/x-bte-kgs-operations/gene-associated-disease'
      - $ref: '#/components/x-bte-kgs-operations/gene-associated-disease-rev'
      - $ref: '#/components/x-bte-kgs-operations/disease-biomarker-gene'
      - $ref: '#/components/x-bte-kgs-operations/disease-biomarker-gene-rev'
      - $ref: '#/components/x-bte-kgs-operations/chem-targets-gene'
      - $ref: '#/components/x-bte-kgs-operations/chem-targets-gene-rev'
      - $ref: '#/components/x-bte-kgs-operations/gene-physicallyInteracts-gene'
      - $ref: '#/components/x-bte-kgs-operations/gene-physicallyInteracts-gene-rev'
      - $ref: '#/components/x-bte-kgs-operations/gene-geneticallyInteracts-gene'
      - $ref: '#/components/x-bte-kgs-operations/gene-geneticallyInteracts-gene-rev'
      - $ref: '#/components/x-bte-kgs-operations/gene-negativelyCorrelated-gene'
      - $ref: '#/components/x-bte-kgs-operations/gene-negativelyCorrelated-gene-rev'  
      - $ref: '#/components/x-bte-kgs-operations/gene-positivelyCorrelated-gene'
      - $ref: '#/components/x-bte-kgs-operations/gene-positivelyCorrelated-gene-rev'
components:
  parameters:
    _sorted:
      name: _sorted
      in: query
      required: false
      schema:
        type: boolean
        default: true
    _source:
      name: _source
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
    aggs:
      name: aggs
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
    allow_null:
      name: allow_null
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
    always_list:
      name: always_list
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
    dev:
      name: dev
      in: query
      required: false
      schema:
        type: boolean
    dotfield:
      name: dotfield
      in: query
      required: false
      schema:
        type: boolean
    explain:
      name: explain
      in: query
      required: false
      schema:
        type: boolean
    facet_size:
      name: facet_size
      in: query
      required: false
      schema:
        type: integer
        default: 10
    fetch_all:
      name: fetch_all
      in: query
      required: false
      schema:
        type: boolean
    format:
      name: format
      description: 'controls output format of server response, currently supports:
        "json", "jsonld", "html". Type: string. Default: json.'
      in: query
      required: false
      schema:
        type: string
        default: json
    from:
      name: from
      in: query
      required: false
      schema:
        type: integer
    prefix:
      name: prefix
      in: query
      required: false
      schema:
        type: string
    raw:
      name: raw
      in: query
      required: false
      schema:
        type: boolean
    rawquery:
      name: rawquery
      in: query
      required: false
      schema:
        type: boolean
    scroll_id:
      name: scroll_id
      in: query
      required: false
      schema:
        type: string
    search:
      name: search
      in: query
      required: false
      schema:
        type: string
    size:
      name: size
      description: "default: 10 objects/records in response"
      in: query
      required: false
      schema:
        type: integer
    sort:
      name: sort
      in: query
      required: false
      schema:
        type: array
        items:
          type: string
    userquery:
      name: userquery
      in: query
      required: false
      schema:
        type: string
  # schemas:
  #   Association:
  #     properties:
  #       _id:
  #         type: string
  #     required:
  #     - _id
  #     type: object
  #   ErrorResult:
  #     properties:
  #       message:
  #         type: string
  #       success:
  #         type: boolean
  #     type: object
  #   QueryPOSTResult:
  #     items:
  #       allOf:
  #       - $ref: '#/components/schemas/Association'
  #       - properties:
  #           _score:
  #             format: float
  #             type: number
  #           query:
  #             type: string
  #         type: object
  #     type: array
  #   QueryResult:
  #     properties:
  #       hits:
  #         items:
  #           $ref: '#/components/schemas/Association'
  #         type: array
  #       max_score:
  #         format: float
  #         type: number
  #       took:
  #         type: integer
  #       total:
  #         type: integer
  #     type: object
  #   int64_or_array:
  #     oneOf:
  #     - items:
  #         format: int64
  #         type: integer
  #       type: array
  #     - format: int64
  #       type: integer
  #   string_or_array:
  #     oneOf:
  #     - items:
  #         type: string
  #       type: array
  #     - type: string
  x-bte-kgs-operations:
  ## in the API's records:
  ## - subjects and objects can be Gene (NCBIGene), SmallMolecule (PUBCHEM.COMPOUND), Disease (MONDO)
  ## - predicates can be associated_with_resistance_to, associated_with_sensitivity_to
  ##   gene_associated_with_condition, has_biomarker, has_target,
  ##   physically_interacts_with, genetically_interacts_with,
  ##   negatively_correlated_with, positively_correlated_with
  ## - BTE automatically puts prefix on MONDO IDs, but prefix has to be added to other ID inputs 
  ## - currently, BTE will also accept response with Translator-prefix (api-response-transform module).
  ## - joinSafe is only needed if the delimiter isn't a comma
    gene-sensitivity-chem:
    ##  https://pending.biothings.io/biggim_drugresponse_kp/query?q=association.edge_label:"biolink:associated_with_sensitivity_to"
    ##  95994 records  
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | addPrefix('NCBIGene') | wrap( '["' , '","biolink:associated_with_sensitivity_to"]') }} ],
              "scopes": ["subject.NCBIGene", "association.edge_label"]
            }
        parameters:
          fields: object.PUBCHEM_COMPOUND,association.edge_attributes
          size: 1000
        outputs:
          - id: "PUBCHEM.COMPOUND"
            semantic: SmallMolecule
        predicate: associated_with_sensitivity_to
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/pubchem-object"
        # testExamples:
        #   - qInput: "NCBIGene:25878"                    ## MXRA5
        #     oneOutput: "PUBCHEM.COMPOUND:135539077"     ## THZ-2-102-1 (Luminespib)
    gene-sensitivity-chem-rev:
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: "PUBCHEM.COMPOUND"
            semantic: SmallMolecule
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | addPrefix('PUBCHEM.COMPOUND') | wrap( '["' , '","biolink:associated_with_sensitivity_to"]') }} ],
              "scopes": ["object.PUBCHEM_COMPOUND", "association.edge_label"]
            }
        parameters:
          fields: subject.NCBIGene,association.edge_attributes
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: sensitivity_associated_with
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subject"
        # testExamples:
        #   - qInput: "PUBCHEM.COMPOUND:24856436"       ## JNK-9L (Adavosertib)
        #     oneOutput: "NCBIGene:59352"               ## LGR6
    gene-resistance-chem:
    ##  https://pending.biothings.io/biggim_drugresponse_kp/query?q=association.edge_label:"biolink:associated_with_resistance_to"
    ##  107719 records
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | addPrefix('NCBIGene') | wrap( '["' , '","biolink:associated_with_resistance_to"]') }} ],
              "scopes": ["subject.NCBIGene", "association.edge_label"]
            }
        parameters:
          fields: object.PUBCHEM_COMPOUND,association.edge_attributes
          size: 1000
        outputs:
          - id: "PUBCHEM.COMPOUND"
            semantic: SmallMolecule
        predicate: associated_with_resistance_to
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/pubchem-object"
        # testExamples:
        #   - qInput: "NCBIGene:5724"                ## PTAFR
        #     oneOutput: "PUBCHEM.COMPOUND:4261"     ## Elesclomol (Entinostat)
    gene-resistance-chem-rev:
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: "PUBCHEM.COMPOUND"
            semantic: SmallMolecule
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | addPrefix('PUBCHEM.COMPOUND') | wrap( '["' , '","biolink:associated_with_resistance_to"]') }} ],
              "scopes": ["object.PUBCHEM_COMPOUND", "association.edge_label"]
            }
        parameters:
          fields: subject.NCBIGene,association.edge_attributes
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: resistance_associated_with
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subject"
        # testExamples:
        #   - qInput: "PUBCHEM.COMPOUND:46844147"       ## AZD8055 (Erk5-IN-1)
        #     oneOutput: "NCBIGene:26119"               ## LDLRAP1
    gene-associated-disease:
    ##  https://pending.biothings.io/biggim_drugresponse_kp/query?q=association.edge_label:"biolink:gene_associated_with_condition"
    ##  922 records  
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | addPrefix('NCBIGene') | wrap( '["' , '","biolink:gene_associated_with_condition"]') }} ],
              "scopes": ["subject.NCBIGene", "association.edge_label"]
            }
        parameters:
          fields: object.MONDO,association.edge_attributes
          size: 1000
        outputs:
          - id: MONDO
            semantic: Disease
        predicate: gene_associated_with_condition
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/mondo-object"
        # testExamples:
        #   - qInput: "NCBIGene:10459"       ## MAD2L2
        #     oneOutput: "MONDO:0019391"     ## Fanconi anemia
    gene-associated-disease-rev:
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: MONDO
            semantic: Disease
        requestBodyType: object
        requestBody:  ## don't need to addPrefix because BTE will automatically add prefix to MONDO IDs
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","biolink:gene_associated_with_condition"]') }} ],
              "scopes": ["object.MONDO", "association.edge_label"]
            }
        parameters:
          fields: subject.NCBIGene,association.edge_attributes
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: condition_associated_with_gene
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subject"
        # testExamples:
        #   - qInput: "MONDO:0004056"         ## TCGA-BLCA (bladder papillary urothelial carcinoma)
        #     oneOutput: "NCBIGene:7157"      ## TP53
    disease-biomarker-gene:
    ##  https://pending.biothings.io/biggim_drugresponse_kp/query?q=association.edge_label:"biolink:has_biomarker"
    ##  13811 records  
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: MONDO
            semantic: Disease
        requestBodyType: object
        requestBody:  ## don't need to addPrefix because BTE will automatically add prefix to MONDO IDs
          body: >-
            {
              "q": [ {{ queryInputs | wrap( '["' , '","biolink:has_biomarker"]') }} ],
              "scopes": ["subject.MONDO", "association.edge_label"]
            }
        parameters:
          fields: object.NCBIGene,association.edge_attributes
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: has_biomarker
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-object"
        # testExamples:
        #   - qInput: "MONDO:0005097"       ## LUSC (squamous cell lung carcinoma)
        #     oneOutput: "NCBIGene:131"     ## ADH7
    disease-biomarker-gene-rev:
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | addPrefix('NCBIGene') | wrap( '["' , '","biolink:has_biomarker"]') }} ],
              "scopes": ["object.NCBIGene", "association.edge_label"]
            }
        parameters:
          fields: subject.MONDO,association.edge_attributes
          size: 1000
        outputs:
          - id: MONDO
            semantic: Disease
        predicate: biomarker_for
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/mondo-subject"
        # testExamples:
        #   - qInput: "NCBIGene:1145"         ## CHRNE
        #     oneOutput: "MONDO:0018874"      ## LAML (acute myeloid leukemia)
## error around indexing subject.PUBCHEM_COMPOUND field. using subject.id until it's fixed
    chem-targets-gene:
    ##  https://pending.biothings.io/biggim_drugresponse_kp/query?q=association.edge_label:"biolink:has_target"
    ##  14806 records
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: "PUBCHEM.COMPOUND"
            semantic: SmallMolecule
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | addPrefix('PUBCHEM.COMPOUND') | wrap( '["' , '","biolink:has_target"]') }} ],
              "scopes": ["subject.id", "association.edge_label"]
            }
        parameters:
          fields: object.NCBIGene,association.edge_attributes
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: has_target
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-object"
        # testExamples:
        #   - qInput: "PUBCHEM.COMPOUND:444"     ## Bupropion
        #     oneOutput: "NCBIGene:6530"         ## SLC6A2
    chem-targets-gene-rev:
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | addPrefix('NCBIGene') | wrap( '["' , '","biolink:has_target"]') }} ],
              "scopes": ["object.NCBIGene", "association.edge_label"]
            }
        parameters:
          fields: subject.id,association.edge_attributes
          size: 1000
        outputs:
          - id: "PUBCHEM.COMPOUND"
            semantic: SmallMolecule
        predicate: target_for
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/pubchem-subject-error"
        # testExamples:
        #   - qInput: "NCBIGene:8424"                 ## BBOX1
        #     oneOutput: "PUBCHEM.COMPOUND:5455"      ## Thiram
## data has errors, so edit this after update
    gene-physicallyInteracts-gene:
    ##  https://pending.biothings.io/biggim_drugresponse_kp/query?q=association.edge_label:"biolink:physically_interacts_with"
    ##  888994 records  
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | addPrefix('NCBIGene') | wrap( '["' , '","biolink:physically_interacts_with"]') }} ],
              "scopes": ["subject.NCBIGene", "association.edge_label"]
            }
        parameters:
          fields: object.NCBIGene,association.edge_attributes
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: physically_interacts_with
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-object"
        # testExamples:
        #   - qInput: "NCBIGene:9282"        ## MED14
        #     oneOutput: "NCBIGene:55588"     ## MED29
    gene-physicallyInteracts-gene-rev:
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | addPrefix('NCBIGene') | wrap( '["' , '","biolink:physically_interacts_with"]') }} ],
              "scopes": ["object.NCBIGene", "association.edge_label"]
            }
        parameters:
          fields: subject.NCBIGene,association.edge_attributes
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: physically_interacts_with
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subject"
        # testExamples:
        #   - qInput: "NCBIGene:6874"       ## TAF4
        #     oneOutput: "NCBIGene:6881"    ## TAF10
    gene-geneticallyInteracts-gene:
    ##  https://pending.biothings.io/biggim_drugresponse_kp/query?q=association.edge_label:"biolink:genetically_interacts_with"
    ##  10754 records  
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | addPrefix('NCBIGene') | wrap( '["' , '","biolink:genetically_interacts_with"]') }} ],
              "scopes": ["subject.NCBIGene", "association.edge_label"]
            }
        parameters:
          fields: object.NCBIGene,association.edge_attributes
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: genetically_interacts_with
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-object"
        # testExamples:
        #   - qInput: "NCBIGene:5980"        ## REV3L
        #     oneOutput: "NCBIGene:7295"     ## TXN
    gene-geneticallyInteracts-gene-rev:
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | addPrefix('NCBIGene') | wrap( '["' , '","biolink:genetically_interacts_with"]') }} ],
              "scopes": ["object.NCBIGene", "association.edge_label"]
            }
        parameters:
          fields: subject.NCBIGene,association.edge_attributes
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: genetically_interacts_with
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subject"
        # testExamples:
        #   - qInput: "NCBIGene:2081"         ## ERN1
        #     oneOutput: "NCBIGene:4609"      ## MYC
    gene-negativelyCorrelated-gene:
    ##  https://pending.biothings.io/biggim_drugresponse_kp/query?q=association.edge_label:"biolink:negatively_correlated_with"
    ##  565 records  
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | addPrefix('NCBIGene') | wrap( '["' , '","biolink:negatively_correlated_with"]') }} ],
              "scopes": ["subject.NCBIGene", "association.edge_label"]
            }
        parameters:
          fields: object.NCBIGene,association.edge_attributes
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: negatively_correlated_with
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-object"
        # testExamples:
        #   - qInput: "NCBIGene:823"        ## CAPN1
        #     oneOutput: "NCBIGene:4539"    ## MT-ND4L (ND4L)
    gene-negativelyCorrelated-gene-rev:
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | addPrefix('NCBIGene') | wrap( '["' , '","biolink:negatively_correlated_with"]') }} ],
              "scopes": ["object.NCBIGene", "association.edge_label"]
            }
        parameters:
          fields: subject.NCBIGene,association.edge_attributes
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: negatively_correlated_with
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subject"
        # testExamples:
        #   - qInput: "NCBIGene:6540"         ## SLC6A13
        #     oneOutput: "NCBIGene:1072"      ## CFL1
    gene-positivelyCorrelated-gene:
    ##  https://pending.biothings.io/biggim_drugresponse_kp/query?q=association.edge_label:"biolink:positively_correlated_with"
    ##  437054 records  
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | addPrefix('NCBIGene') | wrap( '["' , '","biolink:positively_correlated_with"]') }} ],
              "scopes": ["subject.NCBIGene", "association.edge_label"]
            }
        parameters:
          fields: object.NCBIGene,association.edge_attributes
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: positively_correlated_with
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-object"
        # testExamples:
        #   - qInput: "NCBIGene:988"        ## CDC5L
        #     oneOutput: "NCBIGene:6197"    ## RPS6KA3
    gene-positivelyCorrelated-gene-rev:
      - supportBatch: true
        useTemplating: true ## flag to say templating is being used below
        inputs:
          - id: NCBIGene
            semantic: Gene
        requestBodyType: object
        requestBody:
          body: >-
            {
              "q": [ {{ queryInputs | addPrefix('NCBIGene') | wrap( '["' , '","biolink:positively_correlated_with"]') }} ],
              "scopes": ["object.NCBIGene", "association.edge_label"]
            }
        parameters:
          fields: subject.NCBIGene,association.edge_attributes
          size: 1000
        outputs:
          - id: NCBIGene
            semantic: Gene
        predicate: positively_correlated_with
        response_mapping:
          "$ref": "#/components/x-bte-response-mapping/ncbigene-subject"
        # testExamples:
        #   - qInput: "NCBIGene:7094"         ## TLN1
        #     oneOutput: "NCBIGene:7941"      ## PLA2G7
  x-bte-response-mapping:
  ## all have prefix
    pubchem-subject:
      "PUBCHEM.COMPOUND": subject.PUBCHEM_COMPOUND
      edge-attributes: association.edge_attributes
    pubchem-object:
      "PUBCHEM.COMPOUND": object.PUBCHEM_COMPOUND
      edge-attributes: association.edge_attributes
    ncbigene-subject:
      NCBIGene: subject.NCBIGene
      edge-attributes: association.edge_attributes
    ncbigene-object:
      NCBIGene: object.NCBIGene
      edge-attributes: association.edge_attributes
    mondo-subject:
      MONDO: subject.MONDO
      edge-attributes: association.edge_attributes
    mondo-object:
      MONDO: object.MONDO
      edge-attributes: association.edge_attributes
    pubchem-subject-error:
      "PUBCHEM.COMPOUND": subject.id
      edge-attributes: association.edge_attributes
